
{
    "openapi": "3.0.0",
    "info": {
        "title": "FHIR REST API",
        "description": "IBM Watson Health FHIR Server API",
        "version": "4.0.0"
    },
    "servers": [
        {
            "url": "/fhir-server/api/v4"
        }
    ],
    "tags": [
        {
            "name": "Account"
        },
        {
            "name": "ActivityDefinition"
        },
        {
            "name": "AdverseEvent"
        },
        {
            "name": "AllergyIntolerance"
        },
        {
            "name": "Appointment"
        },
        {
            "name": "AppointmentResponse"
        },
        {
            "name": "AuditEvent"
        },
        {
            "name": "Basic"
        },
        {
            "name": "BiologicallyDerivedProduct"
        },
        {
            "name": "BodyStructure"
        },
        {
            "name": "CapabilityStatement"
        },
        {
            "name": "CarePlan"
        },
        {
            "name": "CareTeam"
        },
        {
            "name": "CatalogEntry"
        },
        {
            "name": "ChargeItem"
        },
        {
            "name": "ChargeItemDefinition"
        },
        {
            "name": "Claim"
        },
        {
            "name": "ClaimResponse"
        },
        {
            "name": "ClinicalImpression"
        },
        {
            "name": "CodeSystem"
        },
        {
            "name": "Communication"
        },
        {
            "name": "CommunicationRequest"
        },
        {
            "name": "CompartmentDefinition"
        },
        {
            "name": "Composition"
        },
        {
            "name": "ConceptMap"
        },
        {
            "name": "Condition"
        },
        {
            "name": "Consent"
        },
        {
            "name": "Contract"
        },
        {
            "name": "Coverage"
        },
        {
            "name": "CoverageEligibilityRequest"
        },
        {
            "name": "CoverageEligibilityResponse"
        },
        {
            "name": "DetectedIssue"
        },
        {
            "name": "Device"
        },
        {
            "name": "DeviceDefinition"
        },
        {
            "name": "DeviceMetric"
        },
        {
            "name": "DeviceRequest"
        },
        {
            "name": "DeviceUseStatement"
        },
        {
            "name": "DiagnosticReport"
        },
        {
            "name": "DocumentManifest"
        },
        {
            "name": "DocumentReference"
        },
        {
            "name": "DomainResource"
        },
        {
            "name": "EffectEvidenceSynthesis"
        },
        {
            "name": "Encounter"
        },
        {
            "name": "Endpoint"
        },
        {
            "name": "EnrollmentRequest"
        },
        {
            "name": "EnrollmentResponse"
        },
        {
            "name": "EpisodeOfCare"
        },
        {
            "name": "EventDefinition"
        },
        {
            "name": "Evidence"
        },
        {
            "name": "EvidenceVariable"
        },
        {
            "name": "ExampleScenario"
        },
        {
            "name": "ExplanationOfBenefit"
        },
        {
            "name": "FamilyMemberHistory"
        },
        {
            "name": "Flag"
        },
        {
            "name": "Goal"
        },
        {
            "name": "GraphDefinition"
        },
        {
            "name": "Group"
        },
        {
            "name": "GuidanceResponse"
        },
        {
            "name": "HealthcareService"
        },
        {
            "name": "ImagingStudy"
        },
        {
            "name": "Immunization"
        },
        {
            "name": "ImmunizationEvaluation"
        },
        {
            "name": "ImmunizationRecommendation"
        },
        {
            "name": "ImplementationGuide"
        },
        {
            "name": "InsurancePlan"
        },
        {
            "name": "Invoice"
        },
        {
            "name": "Library"
        },
        {
            "name": "Linkage"
        },
        {
            "name": "List"
        },
        {
            "name": "Location"
        },
        {
            "name": "Measure"
        },
        {
            "name": "MeasureReport"
        },
        {
            "name": "Media"
        },
        {
            "name": "Medication"
        },
        {
            "name": "MedicationAdministration"
        },
        {
            "name": "MedicationDispense"
        },
        {
            "name": "MedicationKnowledge"
        },
        {
            "name": "MedicationRequest"
        },
        {
            "name": "MedicationStatement"
        },
        {
            "name": "MedicinalProduct"
        },
        {
            "name": "MedicinalProductAuthorization"
        },
        {
            "name": "MedicinalProductContraindication"
        },
        {
            "name": "MedicinalProductIndication"
        },
        {
            "name": "MedicinalProductIngredient"
        },
        {
            "name": "MedicinalProductInteraction"
        },
        {
            "name": "MedicinalProductManufactured"
        },
        {
            "name": "MedicinalProductPackaged"
        },
        {
            "name": "MedicinalProductPharmaceutical"
        },
        {
            "name": "MedicinalProductUndesirableEffect"
        },
        {
            "name": "MessageDefinition"
        },
        {
            "name": "MessageHeader"
        },
        {
            "name": "MolecularSequence"
        },
        {
            "name": "NamingSystem"
        },
        {
            "name": "NutritionOrder"
        },
        {
            "name": "Observation"
        },
        {
            "name": "ObservationDefinition"
        },
        {
            "name": "OperationDefinition"
        },
        {
            "name": "OperationOutcome"
        },
        {
            "name": "Organization"
        },
        {
            "name": "OrganizationAffiliation"
        },
        {
            "name": "Patient"
        },
        {
            "name": "PaymentNotice"
        },
        {
            "name": "PaymentReconciliation"
        },
        {
            "name": "Person"
        },
        {
            "name": "PlanDefinition"
        },
        {
            "name": "Practitioner"
        },
        {
            "name": "PractitionerRole"
        },
        {
            "name": "Procedure"
        },
        {
            "name": "Provenance"
        },
        {
            "name": "Questionnaire"
        },
        {
            "name": "QuestionnaireResponse"
        },
        {
            "name": "RelatedPerson"
        },
        {
            "name": "RequestGroup"
        },
        {
            "name": "ResearchDefinition"
        },
        {
            "name": "ResearchElementDefinition"
        },
        {
            "name": "ResearchStudy"
        },
        {
            "name": "ResearchSubject"
        },
        {
            "name": "RiskAssessment"
        },
        {
            "name": "RiskEvidenceSynthesis"
        },
        {
            "name": "Schedule"
        },
        {
            "name": "SearchParameter"
        },
        {
            "name": "ServiceRequest"
        },
        {
            "name": "Slot"
        },
        {
            "name": "Specimen"
        },
        {
            "name": "SpecimenDefinition"
        },
        {
            "name": "StructureDefinition"
        },
        {
            "name": "StructureMap"
        },
        {
            "name": "Subscription"
        },
        {
            "name": "Substance"
        },
        {
            "name": "SubstanceNucleicAcid"
        },
        {
            "name": "SubstancePolymer"
        },
        {
            "name": "SubstanceProtein"
        },
        {
            "name": "SubstanceReferenceInformation"
        },
        {
            "name": "SubstanceSourceMaterial"
        },
        {
            "name": "SubstanceSpecification"
        },
        {
            "name": "SupplyDelivery"
        },
        {
            "name": "SupplyRequest"
        },
        {
            "name": "Task"
        },
        {
            "name": "TerminologyCapabilities"
        },
        {
            "name": "TestReport"
        },
        {
            "name": "TestScript"
        },
        {
            "name": "ValueSet"
        },
        {
            "name": "VerificationResult"
        },
        {
            "name": "VisionPrescription"
        },
        {
            "name": "Other"
        }
    ],
    "paths": {
        "/Account": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Create an Account resource",
                "operationId": "createAccount",
                "responses": {
                    "201": {
                        "description": "Create Account operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Account"
                }
            },
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Search for Account resources",
                "operationId": "searchAccount",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Account number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Human-readable label",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "owner",
                        "description": "Entity managing the Account",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The entity that caused the expenses",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "description": "Transaction window",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "active | inactive | entered-in-error | on-hold | unknown",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The entity that caused the expenses",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "E.g. patient, expense, depreciation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Account operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Account/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Read specific version of an Account resource",
                "operationId": "vreadAccount",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Account operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Account/{id}": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Read an Account resource",
                "operationId": "readAccount",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Account operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Update an existing Account resource",
                "operationId": "updateAccount",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Account operation successful"
                    },
                    "201": {
                        "description": "Create Account operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Account"
                }
            }
        },
        "/Account/{id}/_history": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Return the history of an Account resource",
                "operationId": "historyAccount",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Account operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ActivityDefinition": {
            "post": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Create an ActivityDefinition resource",
                "operationId": "createActivityDefinition",
                "responses": {
                    "201": {
                        "description": "Create ActivityDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ActivityDefinition"
                }
            },
            "get": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Search for ActivityDefinition resources",
                "operationId": "searchActivityDefinition",
                "parameters": [
                    {
                        "name": "composed-of",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The activity definition publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depends-on",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the activity definition is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "predecessor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic",
                        "description": "Topics associated with the module",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the activity definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ActivityDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ActivityDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Read specific version of an ActivityDefinition resource",
                "operationId": "vreadActivityDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ActivityDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ActivityDefinition/{id}": {
            "get": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Read an ActivityDefinition resource",
                "operationId": "readActivityDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ActivityDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Update an existing ActivityDefinition resource",
                "operationId": "updateActivityDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ActivityDefinition operation successful"
                    },
                    "201": {
                        "description": "Create ActivityDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ActivityDefinition"
                }
            }
        },
        "/ActivityDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "ActivityDefinition"
                ],
                "summary": "Return the history of an ActivityDefinition resource",
                "operationId": "historyActivityDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ActivityDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AdverseEvent": {
            "post": {
                "tags": [
                    "AdverseEvent"
                ],
                "summary": "Create an AdverseEvent resource",
                "operationId": "createAdverseEvent",
                "responses": {
                    "201": {
                        "description": "Create AdverseEvent operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AdverseEvent"
                }
            },
            "get": {
                "tags": [
                    "AdverseEvent"
                ],
                "summary": "Search for AdverseEvent resources",
                "operationId": "searchAdverseEvent",
                "parameters": [
                    {
                        "name": "actuality",
                        "description": "actual | potential",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "product-problem | product-quality | product-use-error | wrong-dose | incorrect-prescribing-information | wrong-technique | wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time | expired-drug | medical-device-use-error | problem-different-manufacturer | unsafe-physical-environment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "When the event occurred",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event",
                        "description": "Type of the event itself in relation to the subject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "Location where adverse event occurred",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recorder",
                        "description": "Who recorded the adverse event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resultingcondition",
                        "description": "Effect on the subject due to this event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "seriousness",
                        "description": "Seriousness of the event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "severity",
                        "description": "mild | moderate | severe",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "study",
                        "description": "AdverseEvent.study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Subject impacted by event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "substance",
                        "description": "Refers to the specific entity that caused the adverse event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search AdverseEvent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AdverseEvent/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "AdverseEvent"
                ],
                "summary": "Read specific version of an AdverseEvent resource",
                "operationId": "vreadAdverseEvent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read AdverseEvent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdverseEvent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AdverseEvent/{id}": {
            "get": {
                "tags": [
                    "AdverseEvent"
                ],
                "summary": "Read an AdverseEvent resource",
                "operationId": "readAdverseEvent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read AdverseEvent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdverseEvent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AdverseEvent"
                ],
                "summary": "Update an existing AdverseEvent resource",
                "operationId": "updateAdverseEvent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update AdverseEvent operation successful"
                    },
                    "201": {
                        "description": "Create AdverseEvent operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AdverseEvent"
                }
            }
        },
        "/AdverseEvent/{id}/_history": {
            "get": {
                "tags": [
                    "AdverseEvent"
                ],
                "summary": "Return the history of an AdverseEvent resource",
                "operationId": "historyAdverseEvent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History AdverseEvent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AllergyIntolerance": {
            "post": {
                "tags": [
                    "AllergyIntolerance"
                ],
                "summary": "Create an AllergyIntolerance resource",
                "operationId": "createAllergyIntolerance",
                "responses": {
                    "201": {
                        "description": "Create AllergyIntolerance operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AllergyIntolerance"
                }
            },
            "get": {
                "tags": [
                    "AllergyIntolerance"
                ],
                "summary": "Search for AllergyIntolerance resources",
                "operationId": "searchAllergyIntolerance",
                "parameters": [
                    {
                        "name": "asserter",
                        "description": "Source of the information about the allergy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "food | medication | environment | biologic",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clinical-status",
                        "description": "active | inactive | resolved",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "criticality",
                        "description": "low | high | unable-to-assess",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last-date",
                        "description": "Date(/time) of last known occurrence of a reaction",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "manifestation",
                        "description": "Clinical symptoms/signs associated with the Event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onset",
                        "description": "Date(/time) when manifestations showed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recorder",
                        "description": "Who recorded the sensitivity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "route",
                        "description": "How the subject was exposed to the substance",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "severity",
                        "description": "mild | moderate | severe (of event as a whole)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "verification-status",
                        "description": "unconfirmed | confirmed | refuted | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search AllergyIntolerance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AllergyIntolerance/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "AllergyIntolerance"
                ],
                "summary": "Read specific version of an AllergyIntolerance resource",
                "operationId": "vreadAllergyIntolerance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read AllergyIntolerance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllergyIntolerance"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AllergyIntolerance/{id}": {
            "get": {
                "tags": [
                    "AllergyIntolerance"
                ],
                "summary": "Read an AllergyIntolerance resource",
                "operationId": "readAllergyIntolerance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read AllergyIntolerance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllergyIntolerance"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AllergyIntolerance"
                ],
                "summary": "Update an existing AllergyIntolerance resource",
                "operationId": "updateAllergyIntolerance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update AllergyIntolerance operation successful"
                    },
                    "201": {
                        "description": "Create AllergyIntolerance operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AllergyIntolerance"
                }
            }
        },
        "/AllergyIntolerance/{id}/_history": {
            "get": {
                "tags": [
                    "AllergyIntolerance"
                ],
                "summary": "Return the history of an AllergyIntolerance resource",
                "operationId": "historyAllergyIntolerance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History AllergyIntolerance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Appointment": {
            "post": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Create an Appointment resource",
                "operationId": "createAppointment",
                "responses": {
                    "201": {
                        "description": "Create Appointment operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Appointment"
                }
            },
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Search for Appointment resources",
                "operationId": "searchAppointment",
                "parameters": [
                    {
                        "name": "actor",
                        "description": "Any one of the individuals participating in the appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "appointment-type",
                        "description": "The style of appointment or patient that has been booked in the slot (not service type)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "The service request this appointment is allocated to assess",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Appointment date/time.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "An Identifier of the Appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "This location is listed in the participants of the appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "part-status",
                        "description": "The Participation status of the subject, or other participant on the appointment. Can be used to locate participants that have not responded to meeting requests.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "One of the individuals of the appointment is this patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "practitioner",
                        "description": "One of the individuals of the appointment is this practitioner",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason-code",
                        "description": "Coded reason this appointment is scheduled",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason-reference",
                        "description": "Reason the appointment is to take place (resource)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service-category",
                        "description": "A broad categorization of the service that is to be performed during this appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service-type",
                        "description": "The specific service that is to be performed during this appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slot",
                        "description": "The slots that this appointment is filling",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specialty",
                        "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The overall status of the appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supporting-info",
                        "description": "Additional information to support the appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Appointment operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Appointment/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Read specific version of an Appointment resource",
                "operationId": "vreadAppointment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Appointment operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Appointment/{id}": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Read an Appointment resource",
                "operationId": "readAppointment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Appointment operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Update an existing Appointment resource",
                "operationId": "updateAppointment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Appointment operation successful"
                    },
                    "201": {
                        "description": "Create Appointment operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Appointment"
                }
            }
        },
        "/Appointment/{id}/_history": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Return the history of an Appointment resource",
                "operationId": "historyAppointment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Appointment operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AppointmentResponse": {
            "post": {
                "tags": [
                    "AppointmentResponse"
                ],
                "summary": "Create an AppointmentResponse resource",
                "operationId": "createAppointmentResponse",
                "responses": {
                    "201": {
                        "description": "Create AppointmentResponse operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AppointmentResponse"
                }
            },
            "get": {
                "tags": [
                    "AppointmentResponse"
                ],
                "summary": "Search for AppointmentResponse resources",
                "operationId": "searchAppointmentResponse",
                "parameters": [
                    {
                        "name": "actor",
                        "description": "The Person, Location/HealthcareService or Device that this appointment response replies for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "appointment",
                        "description": "The appointment that the response is attached to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "An Identifier in this appointment response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "This Response is for this Location",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "part-status",
                        "description": "The participants acceptance status for this appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "This Response is for this Patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "practitioner",
                        "description": "This Response is for this Practitioner",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search AppointmentResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AppointmentResponse/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "AppointmentResponse"
                ],
                "summary": "Read specific version of an AppointmentResponse resource",
                "operationId": "vreadAppointmentResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read AppointmentResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AppointmentResponse/{id}": {
            "get": {
                "tags": [
                    "AppointmentResponse"
                ],
                "summary": "Read an AppointmentResponse resource",
                "operationId": "readAppointmentResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read AppointmentResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AppointmentResponse"
                ],
                "summary": "Update an existing AppointmentResponse resource",
                "operationId": "updateAppointmentResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update AppointmentResponse operation successful"
                    },
                    "201": {
                        "description": "Create AppointmentResponse operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AppointmentResponse"
                }
            }
        },
        "/AppointmentResponse/{id}/_history": {
            "get": {
                "tags": [
                    "AppointmentResponse"
                ],
                "summary": "Return the history of an AppointmentResponse resource",
                "operationId": "historyAppointmentResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History AppointmentResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AuditEvent": {
            "post": {
                "tags": [
                    "AuditEvent"
                ],
                "summary": "Create an AuditEvent resource",
                "operationId": "createAuditEvent",
                "responses": {
                    "201": {
                        "description": "Create AuditEvent operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AuditEvent"
                }
            },
            "get": {
                "tags": [
                    "AuditEvent"
                ],
                "summary": "Search for AuditEvent resources",
                "operationId": "searchAuditEvent",
                "parameters": [
                    {
                        "name": "action",
                        "description": "Type of action performed during the event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "description": "Identifier for the network access point of the user device",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agent",
                        "description": "Identifier of who",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agent-name",
                        "description": "Human friendly name for the agent",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agent-role",
                        "description": "Agent role in the event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "altid",
                        "description": "Alternative User identity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Time when the event was recorded",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity",
                        "description": "Specific instance of resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity-name",
                        "description": "Descriptor for entity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity-role",
                        "description": "What role the entity played",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity-type",
                        "description": "Type of entity involved",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "outcome",
                        "description": "Whether the event succeeded or failed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Identifier of who",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "policy",
                        "description": "Policy that authorized event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site",
                        "description": "Logical source location within the enterprise",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "The identity of source detecting the event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subtype",
                        "description": "More specific type/id for the event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Type/identifier of event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search AuditEvent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AuditEvent/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "AuditEvent"
                ],
                "summary": "Read specific version of an AuditEvent resource",
                "operationId": "vreadAuditEvent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read AuditEvent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditEvent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AuditEvent/{id}": {
            "get": {
                "tags": [
                    "AuditEvent"
                ],
                "summary": "Read an AuditEvent resource",
                "operationId": "readAuditEvent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read AuditEvent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditEvent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AuditEvent"
                ],
                "summary": "Update an existing AuditEvent resource",
                "operationId": "updateAuditEvent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update AuditEvent operation successful"
                    },
                    "201": {
                        "description": "Create AuditEvent operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AuditEvent"
                }
            }
        },
        "/AuditEvent/{id}/_history": {
            "get": {
                "tags": [
                    "AuditEvent"
                ],
                "summary": "Return the history of an AuditEvent resource",
                "operationId": "historyAuditEvent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History AuditEvent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Basic": {
            "post": {
                "tags": [
                    "Basic"
                ],
                "summary": "Create a Basic resource",
                "operationId": "createBasic",
                "responses": {
                    "201": {
                        "description": "Create Basic operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Basic"
                }
            },
            "get": {
                "tags": [
                    "Basic"
                ],
                "summary": "Search for Basic resources",
                "operationId": "searchBasic",
                "parameters": [
                    {
                        "name": "author",
                        "description": "Who created",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "Kind of Resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created",
                        "description": "When created",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Business identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Identifies the focus of this resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Identifies the focus of this resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Basic operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Basic/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Basic"
                ],
                "summary": "Read specific version of a Basic resource",
                "operationId": "vreadBasic",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Basic operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Basic"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Basic/{id}": {
            "get": {
                "tags": [
                    "Basic"
                ],
                "summary": "Read a Basic resource",
                "operationId": "readBasic",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Basic operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Basic"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Basic"
                ],
                "summary": "Update an existing Basic resource",
                "operationId": "updateBasic",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Basic operation successful"
                    },
                    "201": {
                        "description": "Create Basic operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Basic"
                }
            }
        },
        "/Basic/{id}/_history": {
            "get": {
                "tags": [
                    "Basic"
                ],
                "summary": "Return the history of a Basic resource",
                "operationId": "historyBasic",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Basic operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/BiologicallyDerivedProduct": {
            "post": {
                "tags": [
                    "BiologicallyDerivedProduct"
                ],
                "summary": "Create a BiologicallyDerivedProduct resource",
                "operationId": "createBiologicallyDerivedProduct",
                "responses": {
                    "201": {
                        "description": "Create BiologicallyDerivedProduct operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BiologicallyDerivedProduct"
                }
            },
            "get": {
                "tags": [
                    "BiologicallyDerivedProduct"
                ],
                "summary": "Search for BiologicallyDerivedProduct resources",
                "operationId": "searchBiologicallyDerivedProduct",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search BiologicallyDerivedProduct operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/BiologicallyDerivedProduct/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "BiologicallyDerivedProduct"
                ],
                "summary": "Read specific version of a BiologicallyDerivedProduct resource",
                "operationId": "vreadBiologicallyDerivedProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read BiologicallyDerivedProduct operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiologicallyDerivedProduct"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/BiologicallyDerivedProduct/{id}": {
            "get": {
                "tags": [
                    "BiologicallyDerivedProduct"
                ],
                "summary": "Read a BiologicallyDerivedProduct resource",
                "operationId": "readBiologicallyDerivedProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read BiologicallyDerivedProduct operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiologicallyDerivedProduct"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "BiologicallyDerivedProduct"
                ],
                "summary": "Update an existing BiologicallyDerivedProduct resource",
                "operationId": "updateBiologicallyDerivedProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update BiologicallyDerivedProduct operation successful"
                    },
                    "201": {
                        "description": "Create BiologicallyDerivedProduct operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BiologicallyDerivedProduct"
                }
            }
        },
        "/BiologicallyDerivedProduct/{id}/_history": {
            "get": {
                "tags": [
                    "BiologicallyDerivedProduct"
                ],
                "summary": "Return the history of a BiologicallyDerivedProduct resource",
                "operationId": "historyBiologicallyDerivedProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History BiologicallyDerivedProduct operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/BodyStructure": {
            "post": {
                "tags": [
                    "BodyStructure"
                ],
                "summary": "Create a BodyStructure resource",
                "operationId": "createBodyStructure",
                "responses": {
                    "201": {
                        "description": "Create BodyStructure operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BodyStructure"
                }
            },
            "get": {
                "tags": [
                    "BodyStructure"
                ],
                "summary": "Search for BodyStructure resources",
                "operationId": "searchBodyStructure",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Bodystructure identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "Body site",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "morphology",
                        "description": "Kind of Structure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Who this is about",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search BodyStructure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/BodyStructure/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "BodyStructure"
                ],
                "summary": "Read specific version of a BodyStructure resource",
                "operationId": "vreadBodyStructure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read BodyStructure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BodyStructure"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/BodyStructure/{id}": {
            "get": {
                "tags": [
                    "BodyStructure"
                ],
                "summary": "Read a BodyStructure resource",
                "operationId": "readBodyStructure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read BodyStructure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BodyStructure"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "BodyStructure"
                ],
                "summary": "Update an existing BodyStructure resource",
                "operationId": "updateBodyStructure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update BodyStructure operation successful"
                    },
                    "201": {
                        "description": "Create BodyStructure operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BodyStructure"
                }
            }
        },
        "/BodyStructure/{id}/_history": {
            "get": {
                "tags": [
                    "BodyStructure"
                ],
                "summary": "Return the history of a BodyStructure resource",
                "operationId": "historyBodyStructure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History BodyStructure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CapabilityStatement": {
            "post": {
                "tags": [
                    "CapabilityStatement"
                ],
                "summary": "Create a CapabilityStatement resource",
                "operationId": "createCapabilityStatement",
                "responses": {
                    "201": {
                        "description": "Create CapabilityStatement operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CapabilityStatement"
                }
            },
            "get": {
                "tags": [
                    "CapabilityStatement"
                ],
                "summary": "Search for CapabilityStatement resources",
                "operationId": "searchCapabilityStatement",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fhirversion",
                        "description": "The version of FHIR",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "description": "formats supported (xml | json | ttl | mime type)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "guide",
                        "description": "Implementation guides supported",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mode",
                        "description": "Mode - restful (server/client) or messaging (sender/receiver)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "description": "Name of a resource mentioned in a capability statement",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource-profile",
                        "description": "A profile id invoked in a capability statement",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "security-service",
                        "description": "OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "software",
                        "description": "Part of the name of a software application",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supported-profile",
                        "description": "Profiles for use cases supported",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search CapabilityStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CapabilityStatement/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "CapabilityStatement"
                ],
                "summary": "Read specific version of a CapabilityStatement resource",
                "operationId": "vreadCapabilityStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read CapabilityStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CapabilityStatement"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CapabilityStatement/{id}": {
            "get": {
                "tags": [
                    "CapabilityStatement"
                ],
                "summary": "Read a CapabilityStatement resource",
                "operationId": "readCapabilityStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read CapabilityStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CapabilityStatement"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CapabilityStatement"
                ],
                "summary": "Update an existing CapabilityStatement resource",
                "operationId": "updateCapabilityStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update CapabilityStatement operation successful"
                    },
                    "201": {
                        "description": "Create CapabilityStatement operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CapabilityStatement"
                }
            }
        },
        "/CapabilityStatement/{id}/_history": {
            "get": {
                "tags": [
                    "CapabilityStatement"
                ],
                "summary": "Return the history of a CapabilityStatement resource",
                "operationId": "historyCapabilityStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History CapabilityStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CarePlan": {
            "post": {
                "tags": [
                    "CarePlan"
                ],
                "summary": "Create a CarePlan resource",
                "operationId": "createCarePlan",
                "responses": {
                    "201": {
                        "description": "Create CarePlan operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CarePlan"
                }
            },
            "get": {
                "tags": [
                    "CarePlan"
                ],
                "summary": "Search for CarePlan resources",
                "operationId": "searchCarePlan",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "activity-code",
                        "description": "Detail type of activity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "activity-date",
                        "description": "Specified date occurs within period specified by CarePlan.activity.detail.scheduled[x]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "activity-reference",
                        "description": "Activity details defined in specific resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "Fulfills CarePlan",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "care-team",
                        "description": "Who's involved in plan?",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Type of plan",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "condition",
                        "description": "Health issues this plan addresses",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounter created as part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "goal",
                        "description": "Desired outcome of plan",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-canonical",
                        "description": "Instantiates FHIR protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-uri",
                        "description": "Instantiates external protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intent",
                        "description": "proposal | plan | order | option",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "part-of",
                        "description": "Part of referenced CarePlan",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "Matches if the practitioner is listed as a performer in any of the \"simple\" activities.  (For performers of the detailed activities, chain through the activitydetail search parameter.)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "replaces",
                        "description": "CarePlan replaced by this CarePlan",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "draft | active | suspended | completed | entered-in-error | cancelled | unknown",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Who the care plan is for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search CarePlan operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CarePlan/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "CarePlan"
                ],
                "summary": "Read specific version of a CarePlan resource",
                "operationId": "vreadCarePlan",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read CarePlan operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarePlan"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CarePlan/{id}": {
            "get": {
                "tags": [
                    "CarePlan"
                ],
                "summary": "Read a CarePlan resource",
                "operationId": "readCarePlan",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read CarePlan operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarePlan"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CarePlan"
                ],
                "summary": "Update an existing CarePlan resource",
                "operationId": "updateCarePlan",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update CarePlan operation successful"
                    },
                    "201": {
                        "description": "Create CarePlan operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CarePlan"
                }
            }
        },
        "/CarePlan/{id}/_history": {
            "get": {
                "tags": [
                    "CarePlan"
                ],
                "summary": "Return the history of a CarePlan resource",
                "operationId": "historyCarePlan",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History CarePlan operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CareTeam": {
            "post": {
                "tags": [
                    "CareTeam"
                ],
                "summary": "Create a CareTeam resource",
                "operationId": "createCareTeam",
                "responses": {
                    "201": {
                        "description": "Create CareTeam operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CareTeam"
                }
            },
            "get": {
                "tags": [
                    "CareTeam"
                ],
                "summary": "Search for CareTeam resources",
                "operationId": "searchCareTeam",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Type of team",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounter created as part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participant",
                        "description": "Who is involved",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "proposed | active | suspended | inactive | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Who care team is for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search CareTeam operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CareTeam/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "CareTeam"
                ],
                "summary": "Read specific version of a CareTeam resource",
                "operationId": "vreadCareTeam",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read CareTeam operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CareTeam"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CareTeam/{id}": {
            "get": {
                "tags": [
                    "CareTeam"
                ],
                "summary": "Read a CareTeam resource",
                "operationId": "readCareTeam",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read CareTeam operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CareTeam"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CareTeam"
                ],
                "summary": "Update an existing CareTeam resource",
                "operationId": "updateCareTeam",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update CareTeam operation successful"
                    },
                    "201": {
                        "description": "Create CareTeam operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CareTeam"
                }
            }
        },
        "/CareTeam/{id}/_history": {
            "get": {
                "tags": [
                    "CareTeam"
                ],
                "summary": "Return the history of a CareTeam resource",
                "operationId": "historyCareTeam",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History CareTeam operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CatalogEntry": {
            "post": {
                "tags": [
                    "CatalogEntry"
                ],
                "summary": "Create a CatalogEntry resource",
                "operationId": "createCatalogEntry",
                "responses": {
                    "201": {
                        "description": "Create CatalogEntry operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CatalogEntry"
                }
            },
            "get": {
                "tags": [
                    "CatalogEntry"
                ],
                "summary": "Search for CatalogEntry resources",
                "operationId": "searchCatalogEntry",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search CatalogEntry operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CatalogEntry/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "CatalogEntry"
                ],
                "summary": "Read specific version of a CatalogEntry resource",
                "operationId": "vreadCatalogEntry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read CatalogEntry operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CatalogEntry"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CatalogEntry/{id}": {
            "get": {
                "tags": [
                    "CatalogEntry"
                ],
                "summary": "Read a CatalogEntry resource",
                "operationId": "readCatalogEntry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read CatalogEntry operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CatalogEntry"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CatalogEntry"
                ],
                "summary": "Update an existing CatalogEntry resource",
                "operationId": "updateCatalogEntry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update CatalogEntry operation successful"
                    },
                    "201": {
                        "description": "Create CatalogEntry operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CatalogEntry"
                }
            }
        },
        "/CatalogEntry/{id}/_history": {
            "get": {
                "tags": [
                    "CatalogEntry"
                ],
                "summary": "Return the history of a CatalogEntry resource",
                "operationId": "historyCatalogEntry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History CatalogEntry operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChargeItem": {
            "post": {
                "tags": [
                    "ChargeItem"
                ],
                "summary": "Create a ChargeItem resource",
                "operationId": "createChargeItem",
                "responses": {
                    "201": {
                        "description": "Create ChargeItem operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ChargeItem"
                }
            },
            "get": {
                "tags": [
                    "ChargeItem"
                ],
                "summary": "Search for ChargeItem resources",
                "operationId": "searchChargeItem",
                "parameters": [
                    {
                        "name": "account",
                        "description": "Account to place this charge",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "A code that identifies the charge, like a billing code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "Encounter / Episode associated with event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entered-date",
                        "description": "Date the charge item was entered",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enterer",
                        "description": "Individual who was entering",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "factor-override",
                        "description": "Factor overriding the associated rules",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Business Identifier for item",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "occurrence",
                        "description": "When the charged service was applied",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Individual service was done for/to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer-actor",
                        "description": "Individual who was performing",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer-function",
                        "description": "What type of performance was done",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performing-organization",
                        "description": "Organization providing the charged service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price-override",
                        "description": "Price overriding the associated rules",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quantity",
                        "description": "Quantity of which the charge item has been serviced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requesting-organization",
                        "description": "Organization requesting the charged service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service",
                        "description": "Which rendered service is being charged?",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Individual service was done for/to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ChargeItem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChargeItem/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ChargeItem"
                ],
                "summary": "Read specific version of a ChargeItem resource",
                "operationId": "vreadChargeItem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ChargeItem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChargeItem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChargeItem/{id}": {
            "get": {
                "tags": [
                    "ChargeItem"
                ],
                "summary": "Read a ChargeItem resource",
                "operationId": "readChargeItem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ChargeItem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChargeItem"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ChargeItem"
                ],
                "summary": "Update an existing ChargeItem resource",
                "operationId": "updateChargeItem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ChargeItem operation successful"
                    },
                    "201": {
                        "description": "Create ChargeItem operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ChargeItem"
                }
            }
        },
        "/ChargeItem/{id}/_history": {
            "get": {
                "tags": [
                    "ChargeItem"
                ],
                "summary": "Return the history of a ChargeItem resource",
                "operationId": "historyChargeItem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ChargeItem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChargeItemDefinition": {
            "post": {
                "tags": [
                    "ChargeItemDefinition"
                ],
                "summary": "Create a ChargeItemDefinition resource",
                "operationId": "createChargeItemDefinition",
                "responses": {
                    "201": {
                        "description": "Create ChargeItemDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ChargeItemDefinition"
                }
            },
            "get": {
                "tags": [
                    "ChargeItemDefinition"
                ],
                "summary": "Search for ChargeItemDefinition resources",
                "operationId": "searchChargeItemDefinition",
                "parameters": [
                    {
                        "name": "context",
                        "description": "A use context assigned to the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The charge item definition publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the charge item definition is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the charge item definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ChargeItemDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChargeItemDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ChargeItemDefinition"
                ],
                "summary": "Read specific version of a ChargeItemDefinition resource",
                "operationId": "vreadChargeItemDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ChargeItemDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChargeItemDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ChargeItemDefinition/{id}": {
            "get": {
                "tags": [
                    "ChargeItemDefinition"
                ],
                "summary": "Read a ChargeItemDefinition resource",
                "operationId": "readChargeItemDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ChargeItemDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChargeItemDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ChargeItemDefinition"
                ],
                "summary": "Update an existing ChargeItemDefinition resource",
                "operationId": "updateChargeItemDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ChargeItemDefinition operation successful"
                    },
                    "201": {
                        "description": "Create ChargeItemDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ChargeItemDefinition"
                }
            }
        },
        "/ChargeItemDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "ChargeItemDefinition"
                ],
                "summary": "Return the history of a ChargeItemDefinition resource",
                "operationId": "historyChargeItemDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ChargeItemDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Claim": {
            "post": {
                "tags": [
                    "Claim"
                ],
                "summary": "Create a Claim resource",
                "operationId": "createClaim",
                "responses": {
                    "201": {
                        "description": "Create Claim operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Claim"
                }
            },
            "get": {
                "tags": [
                    "Claim"
                ],
                "summary": "Search for Claim resources",
                "operationId": "searchClaim",
                "parameters": [
                    {
                        "name": "care-team",
                        "description": "Member of the CareTeam",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created",
                        "description": "The creation date for the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "detail-udi",
                        "description": "UDI associated with a line item, detail product or service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounters associated with a billed line item",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enterer",
                        "description": "The party responsible for the entry of the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "facility",
                        "description": "Facility where the products or services have been or will be provided",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The primary identifier of the financial resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "insurer",
                        "description": "The target payor/insurer for the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "item-udi",
                        "description": "UDI associated with a line item product or service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Patient receiving the products or services",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payee",
                        "description": "The party receiving any payment for the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "description": "Processing priority requested",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "procedure-udi",
                        "description": "UDI associated with a procedure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provider",
                        "description": "Provider responsible for the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the Claim instance.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subdetail-udi",
                        "description": "UDI associated with a line item, detail, subdetail product or service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "use",
                        "description": "The kind of financial resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Claim operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Claim/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Claim"
                ],
                "summary": "Read specific version of a Claim resource",
                "operationId": "vreadClaim",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Claim operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Claim"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Claim/{id}": {
            "get": {
                "tags": [
                    "Claim"
                ],
                "summary": "Read a Claim resource",
                "operationId": "readClaim",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Claim operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Claim"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Claim"
                ],
                "summary": "Update an existing Claim resource",
                "operationId": "updateClaim",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Claim operation successful"
                    },
                    "201": {
                        "description": "Create Claim operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Claim"
                }
            }
        },
        "/Claim/{id}/_history": {
            "get": {
                "tags": [
                    "Claim"
                ],
                "summary": "Return the history of a Claim resource",
                "operationId": "historyClaim",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Claim operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ClaimResponse": {
            "post": {
                "tags": [
                    "ClaimResponse"
                ],
                "summary": "Create a ClaimResponse resource",
                "operationId": "createClaimResponse",
                "responses": {
                    "201": {
                        "description": "Create ClaimResponse operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ClaimResponse"
                }
            },
            "get": {
                "tags": [
                    "ClaimResponse"
                ],
                "summary": "Search for ClaimResponse resources",
                "operationId": "searchClaimResponse",
                "parameters": [
                    {
                        "name": "created",
                        "description": "The creation date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disposition",
                        "description": "The contents of the disposition message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The identity of the ClaimResponse",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "insurer",
                        "description": "The organization which generated this resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "outcome",
                        "description": "The processing outcome",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The subject of care",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payment-date",
                        "description": "The expected payment date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request",
                        "description": "The claim reference",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestor",
                        "description": "The Provider of the claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the ClaimResponse",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "use",
                        "description": "The type of claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ClaimResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ClaimResponse/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ClaimResponse"
                ],
                "summary": "Read specific version of a ClaimResponse resource",
                "operationId": "vreadClaimResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ClaimResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClaimResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ClaimResponse/{id}": {
            "get": {
                "tags": [
                    "ClaimResponse"
                ],
                "summary": "Read a ClaimResponse resource",
                "operationId": "readClaimResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ClaimResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClaimResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ClaimResponse"
                ],
                "summary": "Update an existing ClaimResponse resource",
                "operationId": "updateClaimResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ClaimResponse operation successful"
                    },
                    "201": {
                        "description": "Create ClaimResponse operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ClaimResponse"
                }
            }
        },
        "/ClaimResponse/{id}/_history": {
            "get": {
                "tags": [
                    "ClaimResponse"
                ],
                "summary": "Return the history of a ClaimResponse resource",
                "operationId": "historyClaimResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ClaimResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ClinicalImpression": {
            "post": {
                "tags": [
                    "ClinicalImpression"
                ],
                "summary": "Create a ClinicalImpression resource",
                "operationId": "createClinicalImpression",
                "responses": {
                    "201": {
                        "description": "Create ClinicalImpression operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ClinicalImpression"
                }
            },
            "get": {
                "tags": [
                    "ClinicalImpression"
                ],
                "summary": "Search for ClinicalImpression resources",
                "operationId": "searchClinicalImpression",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assessor",
                        "description": "The clinician performing the assessment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounter created as part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finding-code",
                        "description": "What was found",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finding-ref",
                        "description": "What was found",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Business identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investigation",
                        "description": "Record of a specific investigation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "previous",
                        "description": "Reference to last assessment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "problem",
                        "description": "Relevant impressions of patient state",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "draft | completed | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Patient or group assessed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supporting-info",
                        "description": "Information supporting the clinical impression",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ClinicalImpression operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ClinicalImpression/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ClinicalImpression"
                ],
                "summary": "Read specific version of a ClinicalImpression resource",
                "operationId": "vreadClinicalImpression",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ClinicalImpression operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClinicalImpression"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ClinicalImpression/{id}": {
            "get": {
                "tags": [
                    "ClinicalImpression"
                ],
                "summary": "Read a ClinicalImpression resource",
                "operationId": "readClinicalImpression",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ClinicalImpression operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClinicalImpression"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ClinicalImpression"
                ],
                "summary": "Update an existing ClinicalImpression resource",
                "operationId": "updateClinicalImpression",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ClinicalImpression operation successful"
                    },
                    "201": {
                        "description": "Create ClinicalImpression operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ClinicalImpression"
                }
            }
        },
        "/ClinicalImpression/{id}/_history": {
            "get": {
                "tags": [
                    "ClinicalImpression"
                ],
                "summary": "Return the history of a ClinicalImpression resource",
                "operationId": "historyClinicalImpression",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ClinicalImpression operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CodeSystem": {
            "post": {
                "tags": [
                    "CodeSystem"
                ],
                "summary": "Create a CodeSystem resource",
                "operationId": "createCodeSystem",
                "responses": {
                    "201": {
                        "description": "Create CodeSystem operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CodeSystem"
                }
            },
            "get": {
                "tags": [
                    "CodeSystem"
                ],
                "summary": "Search for CodeSystem resources",
                "operationId": "searchCodeSystem",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "A code defined in the code system",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content-mode",
                        "description": "not-present | example | fragment | complete | supplement",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [CodeSystem](codesystem.html): External identifier for the code system\r\n* [ConceptMap](conceptmap.html): External identifier for the concept map\r\n* [MessageDefinition](messagedefinition.html): External identifier for the message definition\r\n* [StructureDefinition](structuredefinition.html): External identifier for the structure definition\r\n* [StructureMap](structuremap.html): External identifier for the structure map\r\n* [ValueSet](valueset.html): External identifier for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "language",
                        "description": "A language in which a designation is provided",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplements",
                        "description": "Find code system supplements for the referenced code system",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "system",
                        "description": "The system for any codes defined by this code system (same as 'url')",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search CodeSystem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CodeSystem/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "CodeSystem"
                ],
                "summary": "Read specific version of a CodeSystem resource",
                "operationId": "vreadCodeSystem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read CodeSystem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CodeSystem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CodeSystem/{id}": {
            "get": {
                "tags": [
                    "CodeSystem"
                ],
                "summary": "Read a CodeSystem resource",
                "operationId": "readCodeSystem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read CodeSystem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CodeSystem"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CodeSystem"
                ],
                "summary": "Update an existing CodeSystem resource",
                "operationId": "updateCodeSystem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update CodeSystem operation successful"
                    },
                    "201": {
                        "description": "Create CodeSystem operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CodeSystem"
                }
            }
        },
        "/CodeSystem/{id}/_history": {
            "get": {
                "tags": [
                    "CodeSystem"
                ],
                "summary": "Return the history of a CodeSystem resource",
                "operationId": "historyCodeSystem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History CodeSystem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Communication": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "summary": "Create a Communication resource",
                "operationId": "createCommunication",
                "responses": {
                    "201": {
                        "description": "Create Communication operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Communication"
                }
            },
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Search for Communication resources",
                "operationId": "searchCommunication",
                "parameters": [
                    {
                        "name": "based-on",
                        "description": "Request fulfilled by this communication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Message category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounter created as part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Unique identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-canonical",
                        "description": "Instantiates FHIR protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-uri",
                        "description": "Instantiates external protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "medium",
                        "description": "A channel of communication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "part-of",
                        "description": "Part of this action",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Focus of message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "received",
                        "description": "When received",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recipient",
                        "description": "Message recipient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sender",
                        "description": "Message sender",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sent",
                        "description": "When sent",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "preparation | in-progress | not-done | suspended | aborted | completed | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Focus of message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Communication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Communication/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Read specific version of a Communication resource",
                "operationId": "vreadCommunication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Communication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Communication"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Communication/{id}": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Read a Communication resource",
                "operationId": "readCommunication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Communication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Communication"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Communication"
                ],
                "summary": "Update an existing Communication resource",
                "operationId": "updateCommunication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Communication operation successful"
                    },
                    "201": {
                        "description": "Create Communication operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Communication"
                }
            }
        },
        "/Communication/{id}/_history": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Return the history of a Communication resource",
                "operationId": "historyCommunication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Communication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CommunicationRequest": {
            "post": {
                "tags": [
                    "CommunicationRequest"
                ],
                "summary": "Create a CommunicationRequest resource",
                "operationId": "createCommunicationRequest",
                "responses": {
                    "201": {
                        "description": "Create CommunicationRequest operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CommunicationRequest"
                }
            },
            "get": {
                "tags": [
                    "CommunicationRequest"
                ],
                "summary": "Search for CommunicationRequest resources",
                "operationId": "searchCommunicationRequest",
                "parameters": [
                    {
                        "name": "authored",
                        "description": "When request transitioned to being actionable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "Fulfills plan or proposal",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Message category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounter created as part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group-identifier",
                        "description": "Composite request this is part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Unique identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "medium",
                        "description": "A channel of communication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "occurrence",
                        "description": "When scheduled",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Focus of message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "description": "Message urgency",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recipient",
                        "description": "Message recipient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "replaces",
                        "description": "Request(s) replaced by this request",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requester",
                        "description": "Who/what is requesting service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sender",
                        "description": "Message sender",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "draft | active | suspended | cancelled | completed | entered-in-error | unknown",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Focus of message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search CommunicationRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CommunicationRequest/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "CommunicationRequest"
                ],
                "summary": "Read specific version of a CommunicationRequest resource",
                "operationId": "vreadCommunicationRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read CommunicationRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationRequest"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CommunicationRequest/{id}": {
            "get": {
                "tags": [
                    "CommunicationRequest"
                ],
                "summary": "Read a CommunicationRequest resource",
                "operationId": "readCommunicationRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read CommunicationRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationRequest"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CommunicationRequest"
                ],
                "summary": "Update an existing CommunicationRequest resource",
                "operationId": "updateCommunicationRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update CommunicationRequest operation successful"
                    },
                    "201": {
                        "description": "Create CommunicationRequest operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CommunicationRequest"
                }
            }
        },
        "/CommunicationRequest/{id}/_history": {
            "get": {
                "tags": [
                    "CommunicationRequest"
                ],
                "summary": "Return the history of a CommunicationRequest resource",
                "operationId": "historyCommunicationRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History CommunicationRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CompartmentDefinition": {
            "post": {
                "tags": [
                    "CompartmentDefinition"
                ],
                "summary": "Create a CompartmentDefinition resource",
                "operationId": "createCompartmentDefinition",
                "responses": {
                    "201": {
                        "description": "Create CompartmentDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CompartmentDefinition"
                }
            },
            "get": {
                "tags": [
                    "CompartmentDefinition"
                ],
                "summary": "Search for CompartmentDefinition resources",
                "operationId": "searchCompartmentDefinition",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "Patient | Encounter | RelatedPerson | Practitioner | Device",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "description": "Name of resource type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search CompartmentDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CompartmentDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "CompartmentDefinition"
                ],
                "summary": "Read specific version of a CompartmentDefinition resource",
                "operationId": "vreadCompartmentDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read CompartmentDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CompartmentDefinition/{id}": {
            "get": {
                "tags": [
                    "CompartmentDefinition"
                ],
                "summary": "Read a CompartmentDefinition resource",
                "operationId": "readCompartmentDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read CompartmentDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CompartmentDefinition"
                ],
                "summary": "Update an existing CompartmentDefinition resource",
                "operationId": "updateCompartmentDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update CompartmentDefinition operation successful"
                    },
                    "201": {
                        "description": "Create CompartmentDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CompartmentDefinition"
                }
            }
        },
        "/CompartmentDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "CompartmentDefinition"
                ],
                "summary": "Return the history of a CompartmentDefinition resource",
                "operationId": "historyCompartmentDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History CompartmentDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Composition": {
            "post": {
                "tags": [
                    "Composition"
                ],
                "summary": "Create a Composition resource",
                "operationId": "createComposition",
                "responses": {
                    "201": {
                        "description": "Create Composition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Composition"
                }
            },
            "get": {
                "tags": [
                    "Composition"
                ],
                "summary": "Search for Composition resources",
                "operationId": "searchComposition",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attester",
                        "description": "Who attested the composition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "description": "Who and/or what authored the composition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Categorization of Composition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "confidentiality",
                        "description": "As defined by affinity domain",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "Code(s) that apply to the event being documented",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entry",
                        "description": "A reference to data that supports this section",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "description": "The period covered by the documentation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "related-id",
                        "description": "Target of the relationship",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "related-ref",
                        "description": "Target of the relationship",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "section",
                        "description": "Classification of section (recommended)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "preliminary | final | amended | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Who and/or what the composition is about",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Human Readable name/title",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Composition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Composition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Composition"
                ],
                "summary": "Read specific version of a Composition resource",
                "operationId": "vreadComposition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Composition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Composition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Composition/{id}": {
            "get": {
                "tags": [
                    "Composition"
                ],
                "summary": "Read a Composition resource",
                "operationId": "readComposition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Composition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Composition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Composition"
                ],
                "summary": "Update an existing Composition resource",
                "operationId": "updateComposition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Composition operation successful"
                    },
                    "201": {
                        "description": "Create Composition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Composition"
                }
            }
        },
        "/Composition/{id}/_history": {
            "get": {
                "tags": [
                    "Composition"
                ],
                "summary": "Return the history of a Composition resource",
                "operationId": "historyComposition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Composition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ConceptMap": {
            "post": {
                "tags": [
                    "ConceptMap"
                ],
                "summary": "Create a ConceptMap resource",
                "operationId": "createConceptMap",
                "responses": {
                    "201": {
                        "description": "Create ConceptMap operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ConceptMap"
                }
            },
            "get": {
                "tags": [
                    "ConceptMap"
                ],
                "summary": "Search for ConceptMap resources",
                "operationId": "searchConceptMap",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [CodeSystem](codesystem.html): External identifier for the code system\r\n* [ConceptMap](conceptmap.html): External identifier for the concept map\r\n* [MessageDefinition](messagedefinition.html): External identifier for the message definition\r\n* [StructureDefinition](structuredefinition.html): External identifier for the structure definition\r\n* [StructureMap](structuremap.html): External identifier for the structure map\r\n* [ValueSet](valueset.html): External identifier for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dependson",
                        "description": "Reference to property mapping depends on",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "other",
                        "description": "canonical reference to an additional ConceptMap to use for mapping if the source concept is unmapped",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product",
                        "description": "Reference to property mapping depends on",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "The source value set that contains the concepts that are being mapped",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source-code",
                        "description": "Identifies element being mapped",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source-system",
                        "description": "Source system where concepts to be mapped are defined",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source-uri",
                        "description": "The source value set that contains the concepts that are being mapped",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target",
                        "description": "The target value set which provides context for the mappings",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target-code",
                        "description": "Code that identifies the target element",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target-system",
                        "description": "Target system that the concepts are to be mapped to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target-uri",
                        "description": "The target value set which provides context for the mappings",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ConceptMap operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ConceptMap/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ConceptMap"
                ],
                "summary": "Read specific version of a ConceptMap resource",
                "operationId": "vreadConceptMap",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ConceptMap operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConceptMap"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ConceptMap/{id}": {
            "get": {
                "tags": [
                    "ConceptMap"
                ],
                "summary": "Read a ConceptMap resource",
                "operationId": "readConceptMap",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ConceptMap operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConceptMap"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ConceptMap"
                ],
                "summary": "Update an existing ConceptMap resource",
                "operationId": "updateConceptMap",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ConceptMap operation successful"
                    },
                    "201": {
                        "description": "Create ConceptMap operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ConceptMap"
                }
            }
        },
        "/ConceptMap/{id}/_history": {
            "get": {
                "tags": [
                    "ConceptMap"
                ],
                "summary": "Return the history of a ConceptMap resource",
                "operationId": "historyConceptMap",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ConceptMap operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Condition": {
            "post": {
                "tags": [
                    "Condition"
                ],
                "summary": "Create a Condition resource",
                "operationId": "createCondition",
                "responses": {
                    "201": {
                        "description": "Create Condition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Condition"
                }
            },
            "get": {
                "tags": [
                    "Condition"
                ],
                "summary": "Search for Condition resources",
                "operationId": "searchCondition",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "abatement-age",
                        "description": "Abatement as age or age range",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "abatement-date",
                        "description": "Date-related abatements (dateTime and period)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "abatement-string",
                        "description": "Abatement as a string",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "asserter",
                        "description": "Person who asserts this condition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "body-site",
                        "description": "Anatomical location, if relevant",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "The category of the condition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clinical-status",
                        "description": "The clinical status of the condition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounter created as part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "evidence",
                        "description": "Manifestation/symptom",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "evidence-detail",
                        "description": "Supporting information found elsewhere",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onset-age",
                        "description": "Onsets as age or age range",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onset-date",
                        "description": "Date related onsets (dateTime and Period)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onset-info",
                        "description": "Onsets as a string",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recorded-date",
                        "description": "Date record was first recorded",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "severity",
                        "description": "The severity of the condition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stage",
                        "description": "Simple summary (disease specific)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Who has the condition?",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "verification-status",
                        "description": "unconfirmed | provisional | differential | confirmed | refuted | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Condition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Condition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Condition"
                ],
                "summary": "Read specific version of a Condition resource",
                "operationId": "vreadCondition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Condition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Condition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Condition/{id}": {
            "get": {
                "tags": [
                    "Condition"
                ],
                "summary": "Read a Condition resource",
                "operationId": "readCondition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Condition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Condition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Condition"
                ],
                "summary": "Update an existing Condition resource",
                "operationId": "updateCondition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Condition operation successful"
                    },
                    "201": {
                        "description": "Create Condition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Condition"
                }
            }
        },
        "/Condition/{id}/_history": {
            "get": {
                "tags": [
                    "Condition"
                ],
                "summary": "Return the history of a Condition resource",
                "operationId": "historyCondition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Condition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Consent": {
            "post": {
                "tags": [
                    "Consent"
                ],
                "summary": "Create a Consent resource",
                "operationId": "createConsent",
                "responses": {
                    "201": {
                        "description": "Create Consent operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Consent"
                }
            },
            "get": {
                "tags": [
                    "Consent"
                ],
                "summary": "Search for Consent resources",
                "operationId": "searchConsent",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "description": "Actions controlled by this rule",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "actor",
                        "description": "Resource for the actor (or group, by role)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Classification of the consent statement - for indexing/retrieval",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "consentor",
                        "description": "Who is agreeing to the policy and rules",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data",
                        "description": "The actual data reference",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organization",
                        "description": "Custodian of the consent",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "description": "Timeframe for this rule",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "purpose",
                        "description": "Context of activities covered by this rule",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scope",
                        "description": "Which of the four areas this resource covers (extensible)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "security-label",
                        "description": "Security Labels that define affected resources",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source-reference",
                        "description": "Search by reference to a Consent, DocumentReference, Contract  or QuestionnaireResponse",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "draft | proposed | active | rejected | inactive | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Consent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Consent/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Consent"
                ],
                "summary": "Read specific version of a Consent resource",
                "operationId": "vreadConsent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Consent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Consent/{id}": {
            "get": {
                "tags": [
                    "Consent"
                ],
                "summary": "Read a Consent resource",
                "operationId": "readConsent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Consent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Consent"
                ],
                "summary": "Update an existing Consent resource",
                "operationId": "updateConsent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Consent operation successful"
                    },
                    "201": {
                        "description": "Create Consent operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Consent"
                }
            }
        },
        "/Consent/{id}/_history": {
            "get": {
                "tags": [
                    "Consent"
                ],
                "summary": "Return the history of a Consent resource",
                "operationId": "historyConsent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Consent operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Contract": {
            "post": {
                "tags": [
                    "Contract"
                ],
                "summary": "Create a Contract resource",
                "operationId": "createContract",
                "responses": {
                    "201": {
                        "description": "Create Contract operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Contract"
                }
            },
            "get": {
                "tags": [
                    "Contract"
                ],
                "summary": "Search for Contract resources",
                "operationId": "searchContract",
                "parameters": [
                    {
                        "name": "authority",
                        "description": "The authority of the contract",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "description": "The domain of the contract",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The identity of the contract",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates",
                        "description": "A source definition of the contract",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "issued",
                        "description": "The date/time the contract was issued",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The identity of the subject of the contract (if a patient)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signer",
                        "description": "Contract Signatory Party",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the contract",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The identity of the subject of the contract",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The basal contract definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Contract operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Contract/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Contract"
                ],
                "summary": "Read specific version of a Contract resource",
                "operationId": "vreadContract",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Contract operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Contract/{id}": {
            "get": {
                "tags": [
                    "Contract"
                ],
                "summary": "Read a Contract resource",
                "operationId": "readContract",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Contract operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Contract"
                ],
                "summary": "Update an existing Contract resource",
                "operationId": "updateContract",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Contract operation successful"
                    },
                    "201": {
                        "description": "Create Contract operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Contract"
                }
            }
        },
        "/Contract/{id}/_history": {
            "get": {
                "tags": [
                    "Contract"
                ],
                "summary": "Return the history of a Contract resource",
                "operationId": "historyContract",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Contract operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Coverage": {
            "post": {
                "tags": [
                    "Coverage"
                ],
                "summary": "Create a Coverage resource",
                "operationId": "createCoverage",
                "responses": {
                    "201": {
                        "description": "Create Coverage operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Coverage"
                }
            },
            "get": {
                "tags": [
                    "Coverage"
                ],
                "summary": "Search for Coverage resources",
                "operationId": "searchCoverage",
                "parameters": [
                    {
                        "name": "beneficiary",
                        "description": "Covered party",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "class-type",
                        "description": "Coverage class (eg. plan, group)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "class-value",
                        "description": "Value of the class (eg. Plan number, group number)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dependent",
                        "description": "Dependent number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The primary identifier of the insured and the coverage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Retrieve coverages for a patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payor",
                        "description": "The identity of the insurer or party paying for services",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "policy-holder",
                        "description": "Reference to the policyholder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the Coverage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriber",
                        "description": "Reference to the subscriber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "The kind of coverage (health plan, auto, Workers Compensation)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Coverage operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Coverage/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Coverage"
                ],
                "summary": "Read specific version of a Coverage resource",
                "operationId": "vreadCoverage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Coverage operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coverage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Coverage/{id}": {
            "get": {
                "tags": [
                    "Coverage"
                ],
                "summary": "Read a Coverage resource",
                "operationId": "readCoverage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Coverage operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coverage"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Coverage"
                ],
                "summary": "Update an existing Coverage resource",
                "operationId": "updateCoverage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Coverage operation successful"
                    },
                    "201": {
                        "description": "Create Coverage operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Coverage"
                }
            }
        },
        "/Coverage/{id}/_history": {
            "get": {
                "tags": [
                    "Coverage"
                ],
                "summary": "Return the history of a Coverage resource",
                "operationId": "historyCoverage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Coverage operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CoverageEligibilityRequest": {
            "post": {
                "tags": [
                    "CoverageEligibilityRequest"
                ],
                "summary": "Create a CoverageEligibilityRequest resource",
                "operationId": "createCoverageEligibilityRequest",
                "responses": {
                    "201": {
                        "description": "Create CoverageEligibilityRequest operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CoverageEligibilityRequest"
                }
            },
            "get": {
                "tags": [
                    "CoverageEligibilityRequest"
                ],
                "summary": "Search for CoverageEligibilityRequest resources",
                "operationId": "searchCoverageEligibilityRequest",
                "parameters": [
                    {
                        "name": "created",
                        "description": "The creation date for the EOB",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enterer",
                        "description": "The party who is responsible for the request",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "facility",
                        "description": "Facility responsible for the goods and services",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The business identifier of the Eligibility",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The reference to the patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provider",
                        "description": "The reference to the provider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the EligibilityRequest",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search CoverageEligibilityRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CoverageEligibilityRequest/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "CoverageEligibilityRequest"
                ],
                "summary": "Read specific version of a CoverageEligibilityRequest resource",
                "operationId": "vreadCoverageEligibilityRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read CoverageEligibilityRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverageEligibilityRequest"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CoverageEligibilityRequest/{id}": {
            "get": {
                "tags": [
                    "CoverageEligibilityRequest"
                ],
                "summary": "Read a CoverageEligibilityRequest resource",
                "operationId": "readCoverageEligibilityRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read CoverageEligibilityRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverageEligibilityRequest"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CoverageEligibilityRequest"
                ],
                "summary": "Update an existing CoverageEligibilityRequest resource",
                "operationId": "updateCoverageEligibilityRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update CoverageEligibilityRequest operation successful"
                    },
                    "201": {
                        "description": "Create CoverageEligibilityRequest operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CoverageEligibilityRequest"
                }
            }
        },
        "/CoverageEligibilityRequest/{id}/_history": {
            "get": {
                "tags": [
                    "CoverageEligibilityRequest"
                ],
                "summary": "Return the history of a CoverageEligibilityRequest resource",
                "operationId": "historyCoverageEligibilityRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History CoverageEligibilityRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CoverageEligibilityResponse": {
            "post": {
                "tags": [
                    "CoverageEligibilityResponse"
                ],
                "summary": "Create a CoverageEligibilityResponse resource",
                "operationId": "createCoverageEligibilityResponse",
                "responses": {
                    "201": {
                        "description": "Create CoverageEligibilityResponse operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CoverageEligibilityResponse"
                }
            },
            "get": {
                "tags": [
                    "CoverageEligibilityResponse"
                ],
                "summary": "Search for CoverageEligibilityResponse resources",
                "operationId": "searchCoverageEligibilityResponse",
                "parameters": [
                    {
                        "name": "created",
                        "description": "The creation date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disposition",
                        "description": "The contents of the disposition message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The business identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "insurer",
                        "description": "The organization which generated this resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "outcome",
                        "description": "The processing outcome",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The reference to the patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request",
                        "description": "The EligibilityRequest reference",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestor",
                        "description": "The EligibilityRequest provider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The EligibilityRequest status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search CoverageEligibilityResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CoverageEligibilityResponse/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "CoverageEligibilityResponse"
                ],
                "summary": "Read specific version of a CoverageEligibilityResponse resource",
                "operationId": "vreadCoverageEligibilityResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read CoverageEligibilityResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverageEligibilityResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CoverageEligibilityResponse/{id}": {
            "get": {
                "tags": [
                    "CoverageEligibilityResponse"
                ],
                "summary": "Read a CoverageEligibilityResponse resource",
                "operationId": "readCoverageEligibilityResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read CoverageEligibilityResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverageEligibilityResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CoverageEligibilityResponse"
                ],
                "summary": "Update an existing CoverageEligibilityResponse resource",
                "operationId": "updateCoverageEligibilityResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update CoverageEligibilityResponse operation successful"
                    },
                    "201": {
                        "description": "Create CoverageEligibilityResponse operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CoverageEligibilityResponse"
                }
            }
        },
        "/CoverageEligibilityResponse/{id}/_history": {
            "get": {
                "tags": [
                    "CoverageEligibilityResponse"
                ],
                "summary": "Return the history of a CoverageEligibilityResponse resource",
                "operationId": "historyCoverageEligibilityResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History CoverageEligibilityResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DetectedIssue": {
            "post": {
                "tags": [
                    "DetectedIssue"
                ],
                "summary": "Create a DetectedIssue resource",
                "operationId": "createDetectedIssue",
                "responses": {
                    "201": {
                        "description": "Create DetectedIssue operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DetectedIssue"
                }
            },
            "get": {
                "tags": [
                    "DetectedIssue"
                ],
                "summary": "Search for DetectedIssue resources",
                "operationId": "searchDetectedIssue",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "description": "The provider or device that identified the issue",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "Issue Category, e.g. drug-drug, duplicate therapy, etc.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identified",
                        "description": "When identified",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "implicated",
                        "description": "Problem resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search DetectedIssue operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DetectedIssue/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "DetectedIssue"
                ],
                "summary": "Read specific version of a DetectedIssue resource",
                "operationId": "vreadDetectedIssue",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read DetectedIssue operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetectedIssue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DetectedIssue/{id}": {
            "get": {
                "tags": [
                    "DetectedIssue"
                ],
                "summary": "Read a DetectedIssue resource",
                "operationId": "readDetectedIssue",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read DetectedIssue operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetectedIssue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DetectedIssue"
                ],
                "summary": "Update an existing DetectedIssue resource",
                "operationId": "updateDetectedIssue",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update DetectedIssue operation successful"
                    },
                    "201": {
                        "description": "Create DetectedIssue operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DetectedIssue"
                }
            }
        },
        "/DetectedIssue/{id}/_history": {
            "get": {
                "tags": [
                    "DetectedIssue"
                ],
                "summary": "Return the history of a DetectedIssue resource",
                "operationId": "historyDetectedIssue",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History DetectedIssue operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Device": {
            "post": {
                "tags": [
                    "Device"
                ],
                "summary": "Create a Device resource",
                "operationId": "createDevice",
                "responses": {
                    "201": {
                        "description": "Create Device operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Device"
                }
            },
            "get": {
                "tags": [
                    "Device"
                ],
                "summary": "Search for Device resources",
                "operationId": "searchDevice",
                "parameters": [
                    {
                        "name": "device-name",
                        "description": "A server defined search that may match any of the string fields in Device.deviceName or Device.type.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Instance id from manufacturer, owner, and others",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "A location, where the resource is found",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "manufacturer",
                        "description": "The manufacturer of the device",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model",
                        "description": "The model of the device",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organization",
                        "description": "The organization responsible for the device",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Patient information, if the resource is affixed to a person",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "active | inactive | entered-in-error | unknown",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "The type of the device",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "udi-carrier",
                        "description": "UDI Barcode (RFID or other technology) string in *HRF* format.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "udi-di",
                        "description": "The udi Device Identifier (DI)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Network address to contact device",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Device operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Device/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Device"
                ],
                "summary": "Read specific version of a Device resource",
                "operationId": "vreadDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Device operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Device"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Device/{id}": {
            "get": {
                "tags": [
                    "Device"
                ],
                "summary": "Read a Device resource",
                "operationId": "readDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Device operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Device"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Device"
                ],
                "summary": "Update an existing Device resource",
                "operationId": "updateDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Device operation successful"
                    },
                    "201": {
                        "description": "Create Device operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Device"
                }
            }
        },
        "/Device/{id}/_history": {
            "get": {
                "tags": [
                    "Device"
                ],
                "summary": "Return the history of a Device resource",
                "operationId": "historyDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Device operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceDefinition": {
            "post": {
                "tags": [
                    "DeviceDefinition"
                ],
                "summary": "Create a DeviceDefinition resource",
                "operationId": "createDeviceDefinition",
                "responses": {
                    "201": {
                        "description": "Create DeviceDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeviceDefinition"
                }
            },
            "get": {
                "tags": [
                    "DeviceDefinition"
                ],
                "summary": "Search for DeviceDefinition resources",
                "operationId": "searchDeviceDefinition",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "The identifier of the component",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent",
                        "description": "The parent DeviceDefinition resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "The device component type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search DeviceDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "DeviceDefinition"
                ],
                "summary": "Read specific version of a DeviceDefinition resource",
                "operationId": "vreadDeviceDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read DeviceDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceDefinition/{id}": {
            "get": {
                "tags": [
                    "DeviceDefinition"
                ],
                "summary": "Read a DeviceDefinition resource",
                "operationId": "readDeviceDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read DeviceDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DeviceDefinition"
                ],
                "summary": "Update an existing DeviceDefinition resource",
                "operationId": "updateDeviceDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update DeviceDefinition operation successful"
                    },
                    "201": {
                        "description": "Create DeviceDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeviceDefinition"
                }
            }
        },
        "/DeviceDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "DeviceDefinition"
                ],
                "summary": "Return the history of a DeviceDefinition resource",
                "operationId": "historyDeviceDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History DeviceDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceMetric": {
            "post": {
                "tags": [
                    "DeviceMetric"
                ],
                "summary": "Create a DeviceMetric resource",
                "operationId": "createDeviceMetric",
                "responses": {
                    "201": {
                        "description": "Create DeviceMetric operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeviceMetric"
                }
            },
            "get": {
                "tags": [
                    "DeviceMetric"
                ],
                "summary": "Search for DeviceMetric resources",
                "operationId": "searchDeviceMetric",
                "parameters": [
                    {
                        "name": "category",
                        "description": "The category of the metric",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The identifier of the metric",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent",
                        "description": "The parent DeviceMetric resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "The device resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "The component type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search DeviceMetric operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceMetric/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "DeviceMetric"
                ],
                "summary": "Read specific version of a DeviceMetric resource",
                "operationId": "vreadDeviceMetric",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read DeviceMetric operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceMetric"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceMetric/{id}": {
            "get": {
                "tags": [
                    "DeviceMetric"
                ],
                "summary": "Read a DeviceMetric resource",
                "operationId": "readDeviceMetric",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read DeviceMetric operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceMetric"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DeviceMetric"
                ],
                "summary": "Update an existing DeviceMetric resource",
                "operationId": "updateDeviceMetric",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update DeviceMetric operation successful"
                    },
                    "201": {
                        "description": "Create DeviceMetric operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeviceMetric"
                }
            }
        },
        "/DeviceMetric/{id}/_history": {
            "get": {
                "tags": [
                    "DeviceMetric"
                ],
                "summary": "Return the history of a DeviceMetric resource",
                "operationId": "historyDeviceMetric",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History DeviceMetric operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceRequest": {
            "post": {
                "tags": [
                    "DeviceRequest"
                ],
                "summary": "Create a DeviceRequest resource",
                "operationId": "createDeviceRequest",
                "responses": {
                    "201": {
                        "description": "Create DeviceRequest operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeviceRequest"
                }
            },
            "get": {
                "tags": [
                    "DeviceRequest"
                ],
                "summary": "Search for DeviceRequest resources",
                "operationId": "searchDeviceRequest",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authored-on",
                        "description": "When the request transitioned to being actionable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "Plan/proposal/order fulfilled by this request",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device",
                        "description": "Reference to resource that is being requested/ordered",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event-date",
                        "description": "When service should occur",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group-identifier",
                        "description": "Composite request this is part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-canonical",
                        "description": "Instantiates FHIR protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-uri",
                        "description": "Instantiates external protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "insurance",
                        "description": "Associated insurance coverage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intent",
                        "description": "proposal | plan | original-order |reflex-order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "Desired performer for service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prior-request",
                        "description": "Request takes the place of referenced completed or terminated requests",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requester",
                        "description": "Who/what is requesting service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "entered-in-error | draft | active |suspended | completed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Individual the service is ordered for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search DeviceRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceRequest/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "DeviceRequest"
                ],
                "summary": "Read specific version of a DeviceRequest resource",
                "operationId": "vreadDeviceRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read DeviceRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceRequest"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceRequest/{id}": {
            "get": {
                "tags": [
                    "DeviceRequest"
                ],
                "summary": "Read a DeviceRequest resource",
                "operationId": "readDeviceRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read DeviceRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceRequest"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DeviceRequest"
                ],
                "summary": "Update an existing DeviceRequest resource",
                "operationId": "updateDeviceRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update DeviceRequest operation successful"
                    },
                    "201": {
                        "description": "Create DeviceRequest operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeviceRequest"
                }
            }
        },
        "/DeviceRequest/{id}/_history": {
            "get": {
                "tags": [
                    "DeviceRequest"
                ],
                "summary": "Return the history of a DeviceRequest resource",
                "operationId": "historyDeviceRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History DeviceRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceUseStatement": {
            "post": {
                "tags": [
                    "DeviceUseStatement"
                ],
                "summary": "Create a DeviceUseStatement resource",
                "operationId": "createDeviceUseStatement",
                "responses": {
                    "201": {
                        "description": "Create DeviceUseStatement operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeviceUseStatement"
                }
            },
            "get": {
                "tags": [
                    "DeviceUseStatement"
                ],
                "summary": "Search for DeviceUseStatement resources",
                "operationId": "searchDeviceUseStatement",
                "parameters": [
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device",
                        "description": "Search by device",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Search by identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Search by subject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search DeviceUseStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceUseStatement/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "DeviceUseStatement"
                ],
                "summary": "Read specific version of a DeviceUseStatement resource",
                "operationId": "vreadDeviceUseStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read DeviceUseStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceUseStatement"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceUseStatement/{id}": {
            "get": {
                "tags": [
                    "DeviceUseStatement"
                ],
                "summary": "Read a DeviceUseStatement resource",
                "operationId": "readDeviceUseStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read DeviceUseStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceUseStatement"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DeviceUseStatement"
                ],
                "summary": "Update an existing DeviceUseStatement resource",
                "operationId": "updateDeviceUseStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update DeviceUseStatement operation successful"
                    },
                    "201": {
                        "description": "Create DeviceUseStatement operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeviceUseStatement"
                }
            }
        },
        "/DeviceUseStatement/{id}/_history": {
            "get": {
                "tags": [
                    "DeviceUseStatement"
                ],
                "summary": "Return the history of a DeviceUseStatement resource",
                "operationId": "historyDeviceUseStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History DeviceUseStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DiagnosticReport": {
            "post": {
                "tags": [
                    "DiagnosticReport"
                ],
                "summary": "Create a DiagnosticReport resource",
                "operationId": "createDiagnosticReport",
                "responses": {
                    "201": {
                        "description": "Create DiagnosticReport operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DiagnosticReport"
                }
            },
            "get": {
                "tags": [
                    "DiagnosticReport"
                ],
                "summary": "Search for DiagnosticReport resources",
                "operationId": "searchDiagnosticReport",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "Reference to the service request.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Which diagnostic discipline/department created the report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "conclusion",
                        "description": "A coded conclusion (interpretation/impression) on the report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "issued",
                        "description": "When the report was issued",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "media",
                        "description": "A reference to the image source.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "Who is responsible for the report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "result",
                        "description": "Link to an atomic result (observation resource)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "results-interpreter",
                        "description": "Who was the source of the report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specimen",
                        "description": "The specimen details",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The subject of the report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search DiagnosticReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DiagnosticReport/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "DiagnosticReport"
                ],
                "summary": "Read specific version of a DiagnosticReport resource",
                "operationId": "vreadDiagnosticReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read DiagnosticReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiagnosticReport"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DiagnosticReport/{id}": {
            "get": {
                "tags": [
                    "DiagnosticReport"
                ],
                "summary": "Read a DiagnosticReport resource",
                "operationId": "readDiagnosticReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read DiagnosticReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiagnosticReport"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DiagnosticReport"
                ],
                "summary": "Update an existing DiagnosticReport resource",
                "operationId": "updateDiagnosticReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update DiagnosticReport operation successful"
                    },
                    "201": {
                        "description": "Create DiagnosticReport operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DiagnosticReport"
                }
            }
        },
        "/DiagnosticReport/{id}/_history": {
            "get": {
                "tags": [
                    "DiagnosticReport"
                ],
                "summary": "Return the history of a DiagnosticReport resource",
                "operationId": "historyDiagnosticReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History DiagnosticReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DocumentManifest": {
            "post": {
                "tags": [
                    "DocumentManifest"
                ],
                "summary": "Create a DocumentManifest resource",
                "operationId": "createDocumentManifest",
                "responses": {
                    "201": {
                        "description": "Create DocumentManifest operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DocumentManifest"
                }
            },
            "get": {
                "tags": [
                    "DocumentManifest"
                ],
                "summary": "Search for DocumentManifest resources",
                "operationId": "searchDocumentManifest",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "description": "Who and/or what authored the DocumentManifest",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created",
                        "description": "When this document manifest created",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Human-readable description (title)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "item",
                        "description": "Items in manifest",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recipient",
                        "description": "Intended to get notified about this set of documents",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "related-id",
                        "description": "Identifiers of things that are related",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "related-ref",
                        "description": "Related Resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "The source system/application/software",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "current | superseded | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The subject of the set of documents",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search DocumentManifest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DocumentManifest/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "DocumentManifest"
                ],
                "summary": "Read specific version of a DocumentManifest resource",
                "operationId": "vreadDocumentManifest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read DocumentManifest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentManifest"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DocumentManifest/{id}": {
            "get": {
                "tags": [
                    "DocumentManifest"
                ],
                "summary": "Read a DocumentManifest resource",
                "operationId": "readDocumentManifest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read DocumentManifest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentManifest"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DocumentManifest"
                ],
                "summary": "Update an existing DocumentManifest resource",
                "operationId": "updateDocumentManifest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update DocumentManifest operation successful"
                    },
                    "201": {
                        "description": "Create DocumentManifest operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DocumentManifest"
                }
            }
        },
        "/DocumentManifest/{id}/_history": {
            "get": {
                "tags": [
                    "DocumentManifest"
                ],
                "summary": "Return the history of a DocumentManifest resource",
                "operationId": "historyDocumentManifest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History DocumentManifest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DocumentReference": {
            "post": {
                "tags": [
                    "DocumentReference"
                ],
                "summary": "Create a DocumentReference resource",
                "operationId": "createDocumentReference",
                "responses": {
                    "201": {
                        "description": "Create DocumentReference operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DocumentReference"
                }
            },
            "get": {
                "tags": [
                    "DocumentReference"
                ],
                "summary": "Search for DocumentReference resources",
                "operationId": "searchDocumentReference",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authenticator",
                        "description": "Who/what authenticated the document",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "description": "Who and/or what authored the document",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Categorization of document",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contenttype",
                        "description": "Mime type of the content, with charset etc.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "custodian",
                        "description": "Organization which maintains the document",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "When this document reference was created",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Human-readable description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event",
                        "description": "Main clinical acts documented",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "facility",
                        "description": "Kind of facility where patient was seen",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "description": "Format/content rules for the document",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "language",
                        "description": "Human language of the content (BCP-47)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "Uri where the data can be found",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "description": "Time of service that is being documented",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "related",
                        "description": "Related identifiers or resources",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "relatesto",
                        "description": "Target of the relationship",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "relation",
                        "description": "replaces | transforms | signs | appends",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "security-label",
                        "description": "Document security-tags",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "setting",
                        "description": "Additional details about where the content was created (e.g. clinical specialty)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "current | superseded | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Who/what is the subject of the document",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "relationship",
                        "description": "Combination of relation and relatesTo",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search DocumentReference operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DocumentReference/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "DocumentReference"
                ],
                "summary": "Read specific version of a DocumentReference resource",
                "operationId": "vreadDocumentReference",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read DocumentReference operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentReference"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DocumentReference/{id}": {
            "get": {
                "tags": [
                    "DocumentReference"
                ],
                "summary": "Read a DocumentReference resource",
                "operationId": "readDocumentReference",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read DocumentReference operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentReference"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DocumentReference"
                ],
                "summary": "Update an existing DocumentReference resource",
                "operationId": "updateDocumentReference",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update DocumentReference operation successful"
                    },
                    "201": {
                        "description": "Create DocumentReference operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DocumentReference"
                }
            }
        },
        "/DocumentReference/{id}/_history": {
            "get": {
                "tags": [
                    "DocumentReference"
                ],
                "summary": "Return the history of a DocumentReference resource",
                "operationId": "historyDocumentReference",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History DocumentReference operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DomainResource": {
            "post": {
                "tags": [
                    "DomainResource"
                ],
                "summary": "Create a DomainResource resource",
                "operationId": "createDomainResource",
                "responses": {
                    "201": {
                        "description": "Create DomainResource operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DomainResource"
                }
            },
            "get": {
                "tags": [
                    "DomainResource"
                ],
                "summary": "Search for DomainResource resources",
                "operationId": "searchDomainResource",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/_textParam"
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search DomainResource operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DomainResource/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "DomainResource"
                ],
                "summary": "Read specific version of a DomainResource resource",
                "operationId": "vreadDomainResource",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read DomainResource operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DomainResource/{id}": {
            "get": {
                "tags": [
                    "DomainResource"
                ],
                "summary": "Read a DomainResource resource",
                "operationId": "readDomainResource",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read DomainResource operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainResource"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DomainResource"
                ],
                "summary": "Update an existing DomainResource resource",
                "operationId": "updateDomainResource",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update DomainResource operation successful"
                    },
                    "201": {
                        "description": "Create DomainResource operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DomainResource"
                }
            }
        },
        "/DomainResource/{id}/_history": {
            "get": {
                "tags": [
                    "DomainResource"
                ],
                "summary": "Return the history of a DomainResource resource",
                "operationId": "historyDomainResource",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History DomainResource operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EffectEvidenceSynthesis": {
            "post": {
                "tags": [
                    "EffectEvidenceSynthesis"
                ],
                "summary": "Create an EffectEvidenceSynthesis resource",
                "operationId": "createEffectEvidenceSynthesis",
                "responses": {
                    "201": {
                        "description": "Create EffectEvidenceSynthesis operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EffectEvidenceSynthesis"
                }
            },
            "get": {
                "tags": [
                    "EffectEvidenceSynthesis"
                ],
                "summary": "Search for EffectEvidenceSynthesis resources",
                "operationId": "searchEffectEvidenceSynthesis",
                "parameters": [
                    {
                        "name": "context",
                        "description": "A use context assigned to the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The effect evidence synthesis publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the effect evidence synthesis is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the effect evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search EffectEvidenceSynthesis operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EffectEvidenceSynthesis/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "EffectEvidenceSynthesis"
                ],
                "summary": "Read specific version of an EffectEvidenceSynthesis resource",
                "operationId": "vreadEffectEvidenceSynthesis",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read EffectEvidenceSynthesis operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EffectEvidenceSynthesis"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EffectEvidenceSynthesis/{id}": {
            "get": {
                "tags": [
                    "EffectEvidenceSynthesis"
                ],
                "summary": "Read an EffectEvidenceSynthesis resource",
                "operationId": "readEffectEvidenceSynthesis",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read EffectEvidenceSynthesis operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EffectEvidenceSynthesis"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "EffectEvidenceSynthesis"
                ],
                "summary": "Update an existing EffectEvidenceSynthesis resource",
                "operationId": "updateEffectEvidenceSynthesis",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update EffectEvidenceSynthesis operation successful"
                    },
                    "201": {
                        "description": "Create EffectEvidenceSynthesis operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EffectEvidenceSynthesis"
                }
            }
        },
        "/EffectEvidenceSynthesis/{id}/_history": {
            "get": {
                "tags": [
                    "EffectEvidenceSynthesis"
                ],
                "summary": "Return the history of an EffectEvidenceSynthesis resource",
                "operationId": "historyEffectEvidenceSynthesis",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History EffectEvidenceSynthesis operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Encounter": {
            "post": {
                "tags": [
                    "Encounter"
                ],
                "summary": "Create an Encounter resource",
                "operationId": "createEncounter",
                "responses": {
                    "201": {
                        "description": "Create Encounter operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Encounter"
                }
            },
            "get": {
                "tags": [
                    "Encounter"
                ],
                "summary": "Search for Encounter resources",
                "operationId": "searchEncounter",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "description": "The set of accounts that may be used for billing for this Encounter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "appointment",
                        "description": "The appointment that scheduled this encounter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "The ServiceRequest that initiated this encounter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "class",
                        "description": "Classification of patient encounter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "diagnosis",
                        "description": "The diagnosis or procedure relevant to the encounter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "episode-of-care",
                        "description": "Episode(s) of care that this encounter should be recorded against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "length",
                        "description": "Length of encounter in days",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "Location the encounter takes place",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location-period",
                        "description": "Time period during which the patient was present at the location",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "part-of",
                        "description": "Another Encounter this encounter is part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participant",
                        "description": "Persons involved in the encounter other than the patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participant-type",
                        "description": "Role of participant in encounter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "practitioner",
                        "description": "Persons involved in the encounter other than the patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason-code",
                        "description": "Coded reason the encounter takes place",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason-reference",
                        "description": "Reason the encounter takes place (reference)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service-provider",
                        "description": "The organization (facility) responsible for this encounter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "special-arrangement",
                        "description": "Wheelchair, translator, stretcher, etc.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "planned | arrived | triaged | in-progress | onleave | finished | cancelled +",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The patient or group present at the encounter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Encounter operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Encounter/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Encounter"
                ],
                "summary": "Read specific version of an Encounter resource",
                "operationId": "vreadEncounter",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Encounter operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Encounter"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Encounter/{id}": {
            "get": {
                "tags": [
                    "Encounter"
                ],
                "summary": "Read an Encounter resource",
                "operationId": "readEncounter",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Encounter operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Encounter"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Encounter"
                ],
                "summary": "Update an existing Encounter resource",
                "operationId": "updateEncounter",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Encounter operation successful"
                    },
                    "201": {
                        "description": "Create Encounter operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Encounter"
                }
            }
        },
        "/Encounter/{id}/_history": {
            "get": {
                "tags": [
                    "Encounter"
                ],
                "summary": "Return the history of an Encounter resource",
                "operationId": "historyEncounter",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Encounter operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Endpoint": {
            "post": {
                "tags": [
                    "Endpoint"
                ],
                "summary": "Create an Endpoint resource",
                "operationId": "createEndpoint",
                "responses": {
                    "201": {
                        "description": "Create Endpoint operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Endpoint"
                }
            },
            "get": {
                "tags": [
                    "Endpoint"
                ],
                "summary": "Search for Endpoint resources",
                "operationId": "searchEndpoint",
                "parameters": [
                    {
                        "name": "connection-type",
                        "description": "Protocol/Profile/Standard to be used with this endpoint connection",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Identifies this endpoint across multiple systems",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "A name that this endpoint can be identified by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organization",
                        "description": "The organization that is managing the endpoint",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payload-type",
                        "description": "The type of content that may be used at this endpoint (e.g. XDS Discharge summaries)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the Endpoint (usually expected to be active)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Endpoint operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Endpoint/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Endpoint"
                ],
                "summary": "Read specific version of an Endpoint resource",
                "operationId": "vreadEndpoint",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Endpoint operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Endpoint/{id}": {
            "get": {
                "tags": [
                    "Endpoint"
                ],
                "summary": "Read an Endpoint resource",
                "operationId": "readEndpoint",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Endpoint operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Endpoint"
                ],
                "summary": "Update an existing Endpoint resource",
                "operationId": "updateEndpoint",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Endpoint operation successful"
                    },
                    "201": {
                        "description": "Create Endpoint operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Endpoint"
                }
            }
        },
        "/Endpoint/{id}/_history": {
            "get": {
                "tags": [
                    "Endpoint"
                ],
                "summary": "Return the history of an Endpoint resource",
                "operationId": "historyEndpoint",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Endpoint operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EnrollmentRequest": {
            "post": {
                "tags": [
                    "EnrollmentRequest"
                ],
                "summary": "Create an EnrollmentRequest resource",
                "operationId": "createEnrollmentRequest",
                "responses": {
                    "201": {
                        "description": "Create EnrollmentRequest operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EnrollmentRequest"
                }
            },
            "get": {
                "tags": [
                    "EnrollmentRequest"
                ],
                "summary": "Search for EnrollmentRequest resources",
                "operationId": "searchEnrollmentRequest",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "The business identifier of the Enrollment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The party to be enrolled",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the enrollment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The party to be enrolled",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search EnrollmentRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EnrollmentRequest/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "EnrollmentRequest"
                ],
                "summary": "Read specific version of an EnrollmentRequest resource",
                "operationId": "vreadEnrollmentRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read EnrollmentRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnrollmentRequest"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EnrollmentRequest/{id}": {
            "get": {
                "tags": [
                    "EnrollmentRequest"
                ],
                "summary": "Read an EnrollmentRequest resource",
                "operationId": "readEnrollmentRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read EnrollmentRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnrollmentRequest"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "EnrollmentRequest"
                ],
                "summary": "Update an existing EnrollmentRequest resource",
                "operationId": "updateEnrollmentRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update EnrollmentRequest operation successful"
                    },
                    "201": {
                        "description": "Create EnrollmentRequest operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EnrollmentRequest"
                }
            }
        },
        "/EnrollmentRequest/{id}/_history": {
            "get": {
                "tags": [
                    "EnrollmentRequest"
                ],
                "summary": "Return the history of an EnrollmentRequest resource",
                "operationId": "historyEnrollmentRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History EnrollmentRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EnrollmentResponse": {
            "post": {
                "tags": [
                    "EnrollmentResponse"
                ],
                "summary": "Create an EnrollmentResponse resource",
                "operationId": "createEnrollmentResponse",
                "responses": {
                    "201": {
                        "description": "Create EnrollmentResponse operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EnrollmentResponse"
                }
            },
            "get": {
                "tags": [
                    "EnrollmentResponse"
                ],
                "summary": "Search for EnrollmentResponse resources",
                "operationId": "searchEnrollmentResponse",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "The business identifier of the EnrollmentResponse",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request",
                        "description": "The reference to the claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the enrollment response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search EnrollmentResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EnrollmentResponse/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "EnrollmentResponse"
                ],
                "summary": "Read specific version of an EnrollmentResponse resource",
                "operationId": "vreadEnrollmentResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read EnrollmentResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnrollmentResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EnrollmentResponse/{id}": {
            "get": {
                "tags": [
                    "EnrollmentResponse"
                ],
                "summary": "Read an EnrollmentResponse resource",
                "operationId": "readEnrollmentResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read EnrollmentResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnrollmentResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "EnrollmentResponse"
                ],
                "summary": "Update an existing EnrollmentResponse resource",
                "operationId": "updateEnrollmentResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update EnrollmentResponse operation successful"
                    },
                    "201": {
                        "description": "Create EnrollmentResponse operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EnrollmentResponse"
                }
            }
        },
        "/EnrollmentResponse/{id}/_history": {
            "get": {
                "tags": [
                    "EnrollmentResponse"
                ],
                "summary": "Return the history of an EnrollmentResponse resource",
                "operationId": "historyEnrollmentResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History EnrollmentResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EpisodeOfCare": {
            "post": {
                "tags": [
                    "EpisodeOfCare"
                ],
                "summary": "Create an EpisodeOfCare resource",
                "operationId": "createEpisodeOfCare",
                "responses": {
                    "201": {
                        "description": "Create EpisodeOfCare operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EpisodeOfCare"
                }
            },
            "get": {
                "tags": [
                    "EpisodeOfCare"
                ],
                "summary": "Search for EpisodeOfCare resources",
                "operationId": "searchEpisodeOfCare",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "care-manager",
                        "description": "Care manager/care coordinator for the patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "condition",
                        "description": "Conditions/problems/diagnoses this episode of care is for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "incoming-referral",
                        "description": "Incoming Referral Request",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organization",
                        "description": "The organization that has assumed the specific responsibilities of this EpisodeOfCare",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the Episode of Care as provided (does not check the status history collection)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search EpisodeOfCare operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EpisodeOfCare/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "EpisodeOfCare"
                ],
                "summary": "Read specific version of an EpisodeOfCare resource",
                "operationId": "vreadEpisodeOfCare",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read EpisodeOfCare operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EpisodeOfCare"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EpisodeOfCare/{id}": {
            "get": {
                "tags": [
                    "EpisodeOfCare"
                ],
                "summary": "Read an EpisodeOfCare resource",
                "operationId": "readEpisodeOfCare",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read EpisodeOfCare operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EpisodeOfCare"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "EpisodeOfCare"
                ],
                "summary": "Update an existing EpisodeOfCare resource",
                "operationId": "updateEpisodeOfCare",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update EpisodeOfCare operation successful"
                    },
                    "201": {
                        "description": "Create EpisodeOfCare operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EpisodeOfCare"
                }
            }
        },
        "/EpisodeOfCare/{id}/_history": {
            "get": {
                "tags": [
                    "EpisodeOfCare"
                ],
                "summary": "Return the history of an EpisodeOfCare resource",
                "operationId": "historyEpisodeOfCare",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History EpisodeOfCare operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EventDefinition": {
            "post": {
                "tags": [
                    "EventDefinition"
                ],
                "summary": "Create an EventDefinition resource",
                "operationId": "createEventDefinition",
                "responses": {
                    "201": {
                        "description": "Create EventDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EventDefinition"
                }
            },
            "get": {
                "tags": [
                    "EventDefinition"
                ],
                "summary": "Search for EventDefinition resources",
                "operationId": "searchEventDefinition",
                "parameters": [
                    {
                        "name": "composed-of",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The event definition publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depends-on",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the event definition is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "predecessor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic",
                        "description": "Topics associated with the module",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search EventDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EventDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "EventDefinition"
                ],
                "summary": "Read specific version of an EventDefinition resource",
                "operationId": "vreadEventDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read EventDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EventDefinition/{id}": {
            "get": {
                "tags": [
                    "EventDefinition"
                ],
                "summary": "Read an EventDefinition resource",
                "operationId": "readEventDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read EventDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "EventDefinition"
                ],
                "summary": "Update an existing EventDefinition resource",
                "operationId": "updateEventDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update EventDefinition operation successful"
                    },
                    "201": {
                        "description": "Create EventDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EventDefinition"
                }
            }
        },
        "/EventDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "EventDefinition"
                ],
                "summary": "Return the history of an EventDefinition resource",
                "operationId": "historyEventDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History EventDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Evidence": {
            "post": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Create an Evidence resource",
                "operationId": "createEvidence",
                "responses": {
                    "201": {
                        "description": "Create Evidence operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Evidence"
                }
            },
            "get": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Search for Evidence resources",
                "operationId": "searchEvidence",
                "parameters": [
                    {
                        "name": "composed-of",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The evidence publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depends-on",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the evidence is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "predecessor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic",
                        "description": "Topics associated with the Evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the evidence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Evidence operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Evidence/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Read specific version of an Evidence resource",
                "operationId": "vreadEvidence",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Evidence operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Evidence"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Evidence/{id}": {
            "get": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Read an Evidence resource",
                "operationId": "readEvidence",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Evidence operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Evidence"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Update an existing Evidence resource",
                "operationId": "updateEvidence",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Evidence operation successful"
                    },
                    "201": {
                        "description": "Create Evidence operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Evidence"
                }
            }
        },
        "/Evidence/{id}/_history": {
            "get": {
                "tags": [
                    "Evidence"
                ],
                "summary": "Return the history of an Evidence resource",
                "operationId": "historyEvidence",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Evidence operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EvidenceVariable": {
            "post": {
                "tags": [
                    "EvidenceVariable"
                ],
                "summary": "Create an EvidenceVariable resource",
                "operationId": "createEvidenceVariable",
                "responses": {
                    "201": {
                        "description": "Create EvidenceVariable operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EvidenceVariable"
                }
            },
            "get": {
                "tags": [
                    "EvidenceVariable"
                ],
                "summary": "Search for EvidenceVariable resources",
                "operationId": "searchEvidenceVariable",
                "parameters": [
                    {
                        "name": "composed-of",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The evidence variable publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depends-on",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the evidence variable is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "predecessor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic",
                        "description": "Topics associated with the EvidenceVariable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the evidence variable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search EvidenceVariable operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EvidenceVariable/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "EvidenceVariable"
                ],
                "summary": "Read specific version of an EvidenceVariable resource",
                "operationId": "vreadEvidenceVariable",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read EvidenceVariable operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvidenceVariable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EvidenceVariable/{id}": {
            "get": {
                "tags": [
                    "EvidenceVariable"
                ],
                "summary": "Read an EvidenceVariable resource",
                "operationId": "readEvidenceVariable",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read EvidenceVariable operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvidenceVariable"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "EvidenceVariable"
                ],
                "summary": "Update an existing EvidenceVariable resource",
                "operationId": "updateEvidenceVariable",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update EvidenceVariable operation successful"
                    },
                    "201": {
                        "description": "Create EvidenceVariable operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/EvidenceVariable"
                }
            }
        },
        "/EvidenceVariable/{id}/_history": {
            "get": {
                "tags": [
                    "EvidenceVariable"
                ],
                "summary": "Return the history of an EvidenceVariable resource",
                "operationId": "historyEvidenceVariable",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History EvidenceVariable operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ExampleScenario": {
            "post": {
                "tags": [
                    "ExampleScenario"
                ],
                "summary": "Create an ExampleScenario resource",
                "operationId": "createExampleScenario",
                "responses": {
                    "201": {
                        "description": "Create ExampleScenario operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ExampleScenario"
                }
            },
            "get": {
                "tags": [
                    "ExampleScenario"
                ],
                "summary": "Search for ExampleScenario resources",
                "operationId": "searchExampleScenario",
                "parameters": [
                    {
                        "name": "context",
                        "description": "A use context assigned to the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The example scenario publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the example scenario",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ExampleScenario operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ExampleScenario/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ExampleScenario"
                ],
                "summary": "Read specific version of an ExampleScenario resource",
                "operationId": "vreadExampleScenario",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ExampleScenario operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExampleScenario"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ExampleScenario/{id}": {
            "get": {
                "tags": [
                    "ExampleScenario"
                ],
                "summary": "Read an ExampleScenario resource",
                "operationId": "readExampleScenario",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ExampleScenario operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExampleScenario"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ExampleScenario"
                ],
                "summary": "Update an existing ExampleScenario resource",
                "operationId": "updateExampleScenario",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ExampleScenario operation successful"
                    },
                    "201": {
                        "description": "Create ExampleScenario operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ExampleScenario"
                }
            }
        },
        "/ExampleScenario/{id}/_history": {
            "get": {
                "tags": [
                    "ExampleScenario"
                ],
                "summary": "Return the history of an ExampleScenario resource",
                "operationId": "historyExampleScenario",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ExampleScenario operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ExplanationOfBenefit": {
            "post": {
                "tags": [
                    "ExplanationOfBenefit"
                ],
                "summary": "Create an ExplanationOfBenefit resource",
                "operationId": "createExplanationOfBenefit",
                "responses": {
                    "201": {
                        "description": "Create ExplanationOfBenefit operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ExplanationOfBenefit"
                }
            },
            "get": {
                "tags": [
                    "ExplanationOfBenefit"
                ],
                "summary": "Search for ExplanationOfBenefit resources",
                "operationId": "searchExplanationOfBenefit",
                "parameters": [
                    {
                        "name": "care-team",
                        "description": "Member of the CareTeam",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "claim",
                        "description": "The reference to the claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "coverage",
                        "description": "The plan under which the claim was adjudicated",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created",
                        "description": "The creation date for the EOB",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "detail-udi",
                        "description": "UDI associated with a line item detail product or service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disposition",
                        "description": "The contents of the disposition message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounters associated with a billed line item",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enterer",
                        "description": "The party responsible for the entry of the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "facility",
                        "description": "Facility responsible for the goods and services",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The business identifier of the Explanation of Benefit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "item-udi",
                        "description": "UDI associated with a line item product or service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The reference to the patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payee",
                        "description": "The party receiving any payment for the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "procedure-udi",
                        "description": "UDI associated with a procedure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provider",
                        "description": "The reference to the provider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Status of the instance",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subdetail-udi",
                        "description": "UDI associated with a line item detail subdetail product or service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ExplanationOfBenefit operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ExplanationOfBenefit/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ExplanationOfBenefit"
                ],
                "summary": "Read specific version of an ExplanationOfBenefit resource",
                "operationId": "vreadExplanationOfBenefit",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ExplanationOfBenefit operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExplanationOfBenefit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ExplanationOfBenefit/{id}": {
            "get": {
                "tags": [
                    "ExplanationOfBenefit"
                ],
                "summary": "Read an ExplanationOfBenefit resource",
                "operationId": "readExplanationOfBenefit",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ExplanationOfBenefit operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExplanationOfBenefit"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ExplanationOfBenefit"
                ],
                "summary": "Update an existing ExplanationOfBenefit resource",
                "operationId": "updateExplanationOfBenefit",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ExplanationOfBenefit operation successful"
                    },
                    "201": {
                        "description": "Create ExplanationOfBenefit operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ExplanationOfBenefit"
                }
            }
        },
        "/ExplanationOfBenefit/{id}/_history": {
            "get": {
                "tags": [
                    "ExplanationOfBenefit"
                ],
                "summary": "Return the history of an ExplanationOfBenefit resource",
                "operationId": "historyExplanationOfBenefit",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ExplanationOfBenefit operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/FamilyMemberHistory": {
            "post": {
                "tags": [
                    "FamilyMemberHistory"
                ],
                "summary": "Create a FamilyMemberHistory resource",
                "operationId": "createFamilyMemberHistory",
                "responses": {
                    "201": {
                        "description": "Create FamilyMemberHistory operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FamilyMemberHistory"
                }
            },
            "get": {
                "tags": [
                    "FamilyMemberHistory"
                ],
                "summary": "Search for FamilyMemberHistory resources",
                "operationId": "searchFamilyMemberHistory",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-canonical",
                        "description": "Instantiates FHIR protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-uri",
                        "description": "Instantiates external protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "relationship",
                        "description": "A search by a relationship type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sex",
                        "description": "A search by a sex code of a family member",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "partial | completed | entered-in-error | health-unknown",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search FamilyMemberHistory operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/FamilyMemberHistory/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "FamilyMemberHistory"
                ],
                "summary": "Read specific version of a FamilyMemberHistory resource",
                "operationId": "vreadFamilyMemberHistory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read FamilyMemberHistory operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FamilyMemberHistory"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/FamilyMemberHistory/{id}": {
            "get": {
                "tags": [
                    "FamilyMemberHistory"
                ],
                "summary": "Read a FamilyMemberHistory resource",
                "operationId": "readFamilyMemberHistory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read FamilyMemberHistory operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FamilyMemberHistory"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "FamilyMemberHistory"
                ],
                "summary": "Update an existing FamilyMemberHistory resource",
                "operationId": "updateFamilyMemberHistory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update FamilyMemberHistory operation successful"
                    },
                    "201": {
                        "description": "Create FamilyMemberHistory operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FamilyMemberHistory"
                }
            }
        },
        "/FamilyMemberHistory/{id}/_history": {
            "get": {
                "tags": [
                    "FamilyMemberHistory"
                ],
                "summary": "Return the history of a FamilyMemberHistory resource",
                "operationId": "historyFamilyMemberHistory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History FamilyMemberHistory operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Flag": {
            "post": {
                "tags": [
                    "Flag"
                ],
                "summary": "Create a Flag resource",
                "operationId": "createFlag",
                "responses": {
                    "201": {
                        "description": "Create Flag operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Flag"
                }
            },
            "get": {
                "tags": [
                    "Flag"
                ],
                "summary": "Search for Flag resources",
                "operationId": "searchFlag",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "description": "Flag creator",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Business identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The identity of a subject to list flags for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Flag operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Flag/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Flag"
                ],
                "summary": "Read specific version of a Flag resource",
                "operationId": "vreadFlag",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Flag operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Flag"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Flag/{id}": {
            "get": {
                "tags": [
                    "Flag"
                ],
                "summary": "Read a Flag resource",
                "operationId": "readFlag",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Flag operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Flag"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Flag"
                ],
                "summary": "Update an existing Flag resource",
                "operationId": "updateFlag",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Flag operation successful"
                    },
                    "201": {
                        "description": "Create Flag operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Flag"
                }
            }
        },
        "/Flag/{id}/_history": {
            "get": {
                "tags": [
                    "Flag"
                ],
                "summary": "Return the history of a Flag resource",
                "operationId": "historyFlag",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Flag operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Goal": {
            "post": {
                "tags": [
                    "Goal"
                ],
                "summary": "Create a Goal resource",
                "operationId": "createGoal",
                "responses": {
                    "201": {
                        "description": "Create Goal operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Goal"
                }
            },
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Search for Goal resources",
                "operationId": "searchGoal",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "achievement-status",
                        "description": "in-progress | improving | worsening | no-change | achieved | sustaining | not-achieved | no-progress | not-attainable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "E.g. Treatment, dietary, behavioral, etc.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lifecycle-status",
                        "description": "proposed | planned | accepted | active | on-hold | completed | cancelled | entered-in-error | rejected",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start-date",
                        "description": "When goal pursuit begins",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Who this goal is intended for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target-date",
                        "description": "Reach goal on or before",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Goal operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Goal/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Read specific version of a Goal resource",
                "operationId": "vreadGoal",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Goal operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Goal"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Goal/{id}": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Read a Goal resource",
                "operationId": "readGoal",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Goal operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Goal"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Goal"
                ],
                "summary": "Update an existing Goal resource",
                "operationId": "updateGoal",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Goal operation successful"
                    },
                    "201": {
                        "description": "Create Goal operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Goal"
                }
            }
        },
        "/Goal/{id}/_history": {
            "get": {
                "tags": [
                    "Goal"
                ],
                "summary": "Return the history of a Goal resource",
                "operationId": "historyGoal",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Goal operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GraphDefinition": {
            "post": {
                "tags": [
                    "GraphDefinition"
                ],
                "summary": "Create a GraphDefinition resource",
                "operationId": "createGraphDefinition",
                "responses": {
                    "201": {
                        "description": "Create GraphDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/GraphDefinition"
                }
            },
            "get": {
                "tags": [
                    "GraphDefinition"
                ],
                "summary": "Search for GraphDefinition resources",
                "operationId": "searchGraphDefinition",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "description": "Type of resource at which the graph starts",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search GraphDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GraphDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "GraphDefinition"
                ],
                "summary": "Read specific version of a GraphDefinition resource",
                "operationId": "vreadGraphDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read GraphDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GraphDefinition/{id}": {
            "get": {
                "tags": [
                    "GraphDefinition"
                ],
                "summary": "Read a GraphDefinition resource",
                "operationId": "readGraphDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read GraphDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "GraphDefinition"
                ],
                "summary": "Update an existing GraphDefinition resource",
                "operationId": "updateGraphDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update GraphDefinition operation successful"
                    },
                    "201": {
                        "description": "Create GraphDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/GraphDefinition"
                }
            }
        },
        "/GraphDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "GraphDefinition"
                ],
                "summary": "Return the history of a GraphDefinition resource",
                "operationId": "historyGraphDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History GraphDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Group": {
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "Create a Group resource",
                "operationId": "createGroup",
                "responses": {
                    "201": {
                        "description": "Create Group operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Group"
                }
            },
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Search for Group resources",
                "operationId": "searchGroup",
                "parameters": [
                    {
                        "name": "actual",
                        "description": "Descriptive or actual",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "characteristic",
                        "description": "Kind of characteristic",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "The kind of resources contained",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude",
                        "description": "Group includes or excludes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Unique id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "managing-entity",
                        "description": "Entity that is the custodian of the Group's definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "member",
                        "description": "Reference to the group member",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "The type of resources the group contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "value",
                        "description": "Value held by characteristic",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "characteristic-value",
                        "description": "A composite of both characteristic and value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Group operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Group/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Read specific version of a Group resource",
                "operationId": "vreadGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Group operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Group/{id}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Read a Group resource",
                "operationId": "readGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Group operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Group"
                ],
                "summary": "Update an existing Group resource",
                "operationId": "updateGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Group operation successful"
                    },
                    "201": {
                        "description": "Create Group operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Group"
                }
            }
        },
        "/Group/{id}/_history": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Return the history of a Group resource",
                "operationId": "historyGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Group operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GuidanceResponse": {
            "post": {
                "tags": [
                    "GuidanceResponse"
                ],
                "summary": "Create a GuidanceResponse resource",
                "operationId": "createGuidanceResponse",
                "responses": {
                    "201": {
                        "description": "Create GuidanceResponse operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/GuidanceResponse"
                }
            },
            "get": {
                "tags": [
                    "GuidanceResponse"
                ],
                "summary": "Search for GuidanceResponse resources",
                "operationId": "searchGuidanceResponse",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "The identifier of the guidance response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The identity of a patient to search for guidance response results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request",
                        "description": "The identifier of the request associated with the response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The subject that the guidance response is about",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search GuidanceResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GuidanceResponse/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "GuidanceResponse"
                ],
                "summary": "Read specific version of a GuidanceResponse resource",
                "operationId": "vreadGuidanceResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read GuidanceResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuidanceResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GuidanceResponse/{id}": {
            "get": {
                "tags": [
                    "GuidanceResponse"
                ],
                "summary": "Read a GuidanceResponse resource",
                "operationId": "readGuidanceResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read GuidanceResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuidanceResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "GuidanceResponse"
                ],
                "summary": "Update an existing GuidanceResponse resource",
                "operationId": "updateGuidanceResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update GuidanceResponse operation successful"
                    },
                    "201": {
                        "description": "Create GuidanceResponse operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/GuidanceResponse"
                }
            }
        },
        "/GuidanceResponse/{id}/_history": {
            "get": {
                "tags": [
                    "GuidanceResponse"
                ],
                "summary": "Return the history of a GuidanceResponse resource",
                "operationId": "historyGuidanceResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History GuidanceResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/HealthcareService": {
            "post": {
                "tags": [
                    "HealthcareService"
                ],
                "summary": "Create a HealthcareService resource",
                "operationId": "createHealthcareService",
                "responses": {
                    "201": {
                        "description": "Create HealthcareService operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/HealthcareService"
                }
            },
            "get": {
                "tags": [
                    "HealthcareService"
                ],
                "summary": "Search for HealthcareService resources",
                "operationId": "searchHealthcareService",
                "parameters": [
                    {
                        "name": "active",
                        "description": "The Healthcare Service is currently marked as active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "characteristic",
                        "description": "One of the HealthcareService's characteristics",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "coverage-area",
                        "description": "Location(s) service is intended for/available to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint",
                        "description": "Technical endpoints providing access to electronic services operated for the healthcare service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifiers for this item",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "The location of the Healthcare Service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "A portion of the Healthcare service name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organization",
                        "description": "The organization that provides this Healthcare Service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program",
                        "description": "One of the Programs supported by this HealthcareService",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service-category",
                        "description": "Service Category of the Healthcare Service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service-type",
                        "description": "The type of service provided by this healthcare service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specialty",
                        "description": "The specialty of the service provided by this healthcare service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search HealthcareService operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/HealthcareService/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "HealthcareService"
                ],
                "summary": "Read specific version of a HealthcareService resource",
                "operationId": "vreadHealthcareService",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read HealthcareService operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthcareService"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/HealthcareService/{id}": {
            "get": {
                "tags": [
                    "HealthcareService"
                ],
                "summary": "Read a HealthcareService resource",
                "operationId": "readHealthcareService",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read HealthcareService operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthcareService"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "HealthcareService"
                ],
                "summary": "Update an existing HealthcareService resource",
                "operationId": "updateHealthcareService",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update HealthcareService operation successful"
                    },
                    "201": {
                        "description": "Create HealthcareService operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/HealthcareService"
                }
            }
        },
        "/HealthcareService/{id}/_history": {
            "get": {
                "tags": [
                    "HealthcareService"
                ],
                "summary": "Return the history of a HealthcareService resource",
                "operationId": "historyHealthcareService",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History HealthcareService operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImagingStudy": {
            "post": {
                "tags": [
                    "ImagingStudy"
                ],
                "summary": "Create an ImagingStudy resource",
                "operationId": "createImagingStudy",
                "responses": {
                    "201": {
                        "description": "Create ImagingStudy operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ImagingStudy"
                }
            },
            "get": {
                "tags": [
                    "ImagingStudy"
                ],
                "summary": "Search for ImagingStudy resources",
                "operationId": "searchImagingStudy",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "basedon",
                        "description": "The order for the image",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bodysite",
                        "description": "The body site studied",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dicom-class",
                        "description": "The type of the instance",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "The context of the study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint",
                        "description": "The endpoint for the study or series",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instance",
                        "description": "SOP Instance UID for an instance",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "interpreter",
                        "description": "Who interpreted the images",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modality",
                        "description": "The modality of the series",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "The person who performed the study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason",
                        "description": "The reason for the study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "referrer",
                        "description": "The referring physician",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "series",
                        "description": "DICOM Series Instance UID for a series",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started",
                        "description": "When the study was started",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Who the study is about",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ImagingStudy operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImagingStudy/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ImagingStudy"
                ],
                "summary": "Read specific version of an ImagingStudy resource",
                "operationId": "vreadImagingStudy",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ImagingStudy operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImagingStudy"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImagingStudy/{id}": {
            "get": {
                "tags": [
                    "ImagingStudy"
                ],
                "summary": "Read an ImagingStudy resource",
                "operationId": "readImagingStudy",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ImagingStudy operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImagingStudy"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ImagingStudy"
                ],
                "summary": "Update an existing ImagingStudy resource",
                "operationId": "updateImagingStudy",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ImagingStudy operation successful"
                    },
                    "201": {
                        "description": "Create ImagingStudy operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ImagingStudy"
                }
            }
        },
        "/ImagingStudy/{id}/_history": {
            "get": {
                "tags": [
                    "ImagingStudy"
                ],
                "summary": "Return the history of an ImagingStudy resource",
                "operationId": "historyImagingStudy",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ImagingStudy operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Immunization": {
            "post": {
                "tags": [
                    "Immunization"
                ],
                "summary": "Create an Immunization resource",
                "operationId": "createImmunization",
                "responses": {
                    "201": {
                        "description": "Create Immunization operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Immunization"
                }
            },
            "get": {
                "tags": [
                    "Immunization"
                ],
                "summary": "Search for Immunization resources",
                "operationId": "searchImmunization",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "The service delivery location or facility in which the vaccine was / was to be administered",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lot-number",
                        "description": "Vaccine Lot Number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "manufacturer",
                        "description": "Vaccine Manufacturer",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "The practitioner or organization who played a role in the vaccination",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reaction",
                        "description": "Additional information on reaction",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reaction-date",
                        "description": "When reaction started",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason-code",
                        "description": "Reason why the vaccine was administered",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason-reference",
                        "description": "Why immunization occurred",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "series",
                        "description": "The series being followed by the provider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Immunization event status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status-reason",
                        "description": "Reason why the vaccine was not administered",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target-disease",
                        "description": "The target disease the dose is being administered against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vaccine-code",
                        "description": "Vaccine Product Administered",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Immunization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Immunization/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Immunization"
                ],
                "summary": "Read specific version of an Immunization resource",
                "operationId": "vreadImmunization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Immunization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Immunization"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Immunization/{id}": {
            "get": {
                "tags": [
                    "Immunization"
                ],
                "summary": "Read an Immunization resource",
                "operationId": "readImmunization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Immunization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Immunization"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Immunization"
                ],
                "summary": "Update an existing Immunization resource",
                "operationId": "updateImmunization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Immunization operation successful"
                    },
                    "201": {
                        "description": "Create Immunization operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Immunization"
                }
            }
        },
        "/Immunization/{id}/_history": {
            "get": {
                "tags": [
                    "Immunization"
                ],
                "summary": "Return the history of an Immunization resource",
                "operationId": "historyImmunization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Immunization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImmunizationEvaluation": {
            "post": {
                "tags": [
                    "ImmunizationEvaluation"
                ],
                "summary": "Create an ImmunizationEvaluation resource",
                "operationId": "createImmunizationEvaluation",
                "responses": {
                    "201": {
                        "description": "Create ImmunizationEvaluation operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ImmunizationEvaluation"
                }
            },
            "get": {
                "tags": [
                    "ImmunizationEvaluation"
                ],
                "summary": "Search for ImmunizationEvaluation resources",
                "operationId": "searchImmunizationEvaluation",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Date the evaluation was generated",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dose-status",
                        "description": "The status of the dose relative to published recommendations",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "ID of the evaluation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "immunization-event",
                        "description": "The vaccine administration event being evaluated",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The patient being evaluated",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Immunization evaluation status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target-disease",
                        "description": "The vaccine preventable disease being evaluated against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ImmunizationEvaluation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImmunizationEvaluation/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ImmunizationEvaluation"
                ],
                "summary": "Read specific version of an ImmunizationEvaluation resource",
                "operationId": "vreadImmunizationEvaluation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ImmunizationEvaluation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImmunizationEvaluation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImmunizationEvaluation/{id}": {
            "get": {
                "tags": [
                    "ImmunizationEvaluation"
                ],
                "summary": "Read an ImmunizationEvaluation resource",
                "operationId": "readImmunizationEvaluation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ImmunizationEvaluation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImmunizationEvaluation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ImmunizationEvaluation"
                ],
                "summary": "Update an existing ImmunizationEvaluation resource",
                "operationId": "updateImmunizationEvaluation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ImmunizationEvaluation operation successful"
                    },
                    "201": {
                        "description": "Create ImmunizationEvaluation operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ImmunizationEvaluation"
                }
            }
        },
        "/ImmunizationEvaluation/{id}/_history": {
            "get": {
                "tags": [
                    "ImmunizationEvaluation"
                ],
                "summary": "Return the history of an ImmunizationEvaluation resource",
                "operationId": "historyImmunizationEvaluation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ImmunizationEvaluation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImmunizationRecommendation": {
            "post": {
                "tags": [
                    "ImmunizationRecommendation"
                ],
                "summary": "Create an ImmunizationRecommendation resource",
                "operationId": "createImmunizationRecommendation",
                "responses": {
                    "201": {
                        "description": "Create ImmunizationRecommendation operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ImmunizationRecommendation"
                }
            },
            "get": {
                "tags": [
                    "ImmunizationRecommendation"
                ],
                "summary": "Search for ImmunizationRecommendation resources",
                "operationId": "searchImmunizationRecommendation",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Date recommendation(s) created",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Business identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "information",
                        "description": "Patient observations supporting recommendation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Who this profile is for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Vaccine recommendation status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "support",
                        "description": "Past immunizations supporting recommendation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target-disease",
                        "description": "Disease to be immunized against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vaccine-type",
                        "description": "Vaccine  or vaccine group recommendation applies to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ImmunizationRecommendation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImmunizationRecommendation/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ImmunizationRecommendation"
                ],
                "summary": "Read specific version of an ImmunizationRecommendation resource",
                "operationId": "vreadImmunizationRecommendation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ImmunizationRecommendation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImmunizationRecommendation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImmunizationRecommendation/{id}": {
            "get": {
                "tags": [
                    "ImmunizationRecommendation"
                ],
                "summary": "Read an ImmunizationRecommendation resource",
                "operationId": "readImmunizationRecommendation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ImmunizationRecommendation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImmunizationRecommendation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ImmunizationRecommendation"
                ],
                "summary": "Update an existing ImmunizationRecommendation resource",
                "operationId": "updateImmunizationRecommendation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ImmunizationRecommendation operation successful"
                    },
                    "201": {
                        "description": "Create ImmunizationRecommendation operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ImmunizationRecommendation"
                }
            }
        },
        "/ImmunizationRecommendation/{id}/_history": {
            "get": {
                "tags": [
                    "ImmunizationRecommendation"
                ],
                "summary": "Return the history of an ImmunizationRecommendation resource",
                "operationId": "historyImmunizationRecommendation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ImmunizationRecommendation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImplementationGuide": {
            "post": {
                "tags": [
                    "ImplementationGuide"
                ],
                "summary": "Create an ImplementationGuide resource",
                "operationId": "createImplementationGuide",
                "responses": {
                    "201": {
                        "description": "Create ImplementationGuide operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ImplementationGuide"
                }
            },
            "get": {
                "tags": [
                    "ImplementationGuide"
                ],
                "summary": "Search for ImplementationGuide resources",
                "operationId": "searchImplementationGuide",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depends-on",
                        "description": "Identity of the IG that this depends on",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "experimental",
                        "description": "For testing purposes, not real usage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "global",
                        "description": "Profile that all resources must conform to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "description": "Location of the resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ImplementationGuide operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImplementationGuide/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ImplementationGuide"
                ],
                "summary": "Read specific version of an ImplementationGuide resource",
                "operationId": "vreadImplementationGuide",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ImplementationGuide operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationGuide"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ImplementationGuide/{id}": {
            "get": {
                "tags": [
                    "ImplementationGuide"
                ],
                "summary": "Read an ImplementationGuide resource",
                "operationId": "readImplementationGuide",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ImplementationGuide operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationGuide"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ImplementationGuide"
                ],
                "summary": "Update an existing ImplementationGuide resource",
                "operationId": "updateImplementationGuide",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ImplementationGuide operation successful"
                    },
                    "201": {
                        "description": "Create ImplementationGuide operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ImplementationGuide"
                }
            }
        },
        "/ImplementationGuide/{id}/_history": {
            "get": {
                "tags": [
                    "ImplementationGuide"
                ],
                "summary": "Return the history of an ImplementationGuide resource",
                "operationId": "historyImplementationGuide",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ImplementationGuide operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/InsurancePlan": {
            "post": {
                "tags": [
                    "InsurancePlan"
                ],
                "summary": "Create an InsurancePlan resource",
                "operationId": "createInsurancePlan",
                "responses": {
                    "201": {
                        "description": "Create InsurancePlan operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/InsurancePlan"
                }
            },
            "get": {
                "tags": [
                    "InsurancePlan"
                ],
                "summary": "Search for InsurancePlan resources",
                "operationId": "searchInsurancePlan",
                "parameters": [
                    {
                        "name": "address",
                        "description": "A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-city",
                        "description": "A city specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-country",
                        "description": "A country specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-postalcode",
                        "description": "A postal code specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-state",
                        "description": "A state specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-use",
                        "description": "A use code specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "administered-by",
                        "description": "Product administrator",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint",
                        "description": "Technical endpoint",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Any identifier for the organization (not the accreditation issuer's identifier)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "A portion of the organization's name or alias",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "owned-by",
                        "description": "An organization of which this organization forms a part",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phonetic",
                        "description": "A portion of the organization's name using some kind of phonetic matching algorithm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Is the Organization record active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "A code for the type of organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search InsurancePlan operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/InsurancePlan/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "InsurancePlan"
                ],
                "summary": "Read specific version of an InsurancePlan resource",
                "operationId": "vreadInsurancePlan",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read InsurancePlan operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsurancePlan"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/InsurancePlan/{id}": {
            "get": {
                "tags": [
                    "InsurancePlan"
                ],
                "summary": "Read an InsurancePlan resource",
                "operationId": "readInsurancePlan",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read InsurancePlan operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsurancePlan"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "InsurancePlan"
                ],
                "summary": "Update an existing InsurancePlan resource",
                "operationId": "updateInsurancePlan",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update InsurancePlan operation successful"
                    },
                    "201": {
                        "description": "Create InsurancePlan operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/InsurancePlan"
                }
            }
        },
        "/InsurancePlan/{id}/_history": {
            "get": {
                "tags": [
                    "InsurancePlan"
                ],
                "summary": "Return the history of an InsurancePlan resource",
                "operationId": "historyInsurancePlan",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History InsurancePlan operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Invoice": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Create an Invoice resource",
                "operationId": "createInvoice",
                "responses": {
                    "201": {
                        "description": "Create Invoice operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Invoice"
                }
            },
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Search for Invoice resources",
                "operationId": "searchInvoice",
                "parameters": [
                    {
                        "name": "account",
                        "description": "Account that is being balanced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Invoice date / posting date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Business Identifier for item",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "issuer",
                        "description": "Issuing Organization of Invoice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participant",
                        "description": "Individual who was involved",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participant-role",
                        "description": "Type of involvement in creation of this Invoice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Recipient(s) of goods and services",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recipient",
                        "description": "Recipient of this invoice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "draft | issued | balanced | cancelled | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Recipient(s) of goods and services",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "totalgross",
                        "description": "Gross total of this Invoice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "totalnet",
                        "description": "Net total of this Invoice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Type of Invoice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Invoice operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Invoice/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Read specific version of an Invoice resource",
                "operationId": "vreadInvoice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Invoice operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Invoice/{id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Read an Invoice resource",
                "operationId": "readInvoice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Invoice operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Update an existing Invoice resource",
                "operationId": "updateInvoice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Invoice operation successful"
                    },
                    "201": {
                        "description": "Create Invoice operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Invoice"
                }
            }
        },
        "/Invoice/{id}/_history": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Return the history of an Invoice resource",
                "operationId": "historyInvoice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Invoice operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Library": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Create a Library resource",
                "operationId": "createLibrary",
                "responses": {
                    "201": {
                        "description": "Create Library operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Library"
                }
            },
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Search for Library resources",
                "operationId": "searchLibrary",
                "parameters": [
                    {
                        "name": "composed-of",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content-type",
                        "description": "The type of content in the library (e.g. text/cql)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The library publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depends-on",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the library is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "predecessor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic",
                        "description": "Topics associated with the module",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "The type of the library (e.g. logic-library, model-definition, asset-collection, module-definition)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the library",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Library operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Library/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Read specific version of a Library resource",
                "operationId": "vreadLibrary",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Library operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Library/{id}": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Read a Library resource",
                "operationId": "readLibrary",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Library operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Library"
                ],
                "summary": "Update an existing Library resource",
                "operationId": "updateLibrary",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Library operation successful"
                    },
                    "201": {
                        "description": "Create Library operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Library"
                }
            }
        },
        "/Library/{id}/_history": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Return the history of a Library resource",
                "operationId": "historyLibrary",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Library operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Linkage": {
            "post": {
                "tags": [
                    "Linkage"
                ],
                "summary": "Create a Linkage resource",
                "operationId": "createLinkage",
                "responses": {
                    "201": {
                        "description": "Create Linkage operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Linkage"
                }
            },
            "get": {
                "tags": [
                    "Linkage"
                ],
                "summary": "Search for Linkage resources",
                "operationId": "searchLinkage",
                "parameters": [
                    {
                        "name": "author",
                        "description": "Author of the Linkage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "item",
                        "description": "Matches on any item in the Linkage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "Matches on any item in the Linkage with a type of 'source'",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Linkage operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Linkage/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Linkage"
                ],
                "summary": "Read specific version of a Linkage resource",
                "operationId": "vreadLinkage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Linkage operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Linkage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Linkage/{id}": {
            "get": {
                "tags": [
                    "Linkage"
                ],
                "summary": "Read a Linkage resource",
                "operationId": "readLinkage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Linkage operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Linkage"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Linkage"
                ],
                "summary": "Update an existing Linkage resource",
                "operationId": "updateLinkage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Linkage operation successful"
                    },
                    "201": {
                        "description": "Create Linkage operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Linkage"
                }
            }
        },
        "/Linkage/{id}/_history": {
            "get": {
                "tags": [
                    "Linkage"
                ],
                "summary": "Return the history of a Linkage resource",
                "operationId": "historyLinkage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Linkage operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/List": {
            "post": {
                "tags": [
                    "List"
                ],
                "summary": "Create a List resource",
                "operationId": "createList",
                "responses": {
                    "201": {
                        "description": "Create List operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/List"
                }
            },
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "Search for List resources",
                "operationId": "searchList",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "empty-reason",
                        "description": "Why list is empty",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "item",
                        "description": "Actual entry",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "notes",
                        "description": "The annotation  - text content (as markdown)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "Who and/or what defined the list contents (aka Author)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "current | retired | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "If all resources have the same subject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Descriptive name for the list",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search List operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/List/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "Read specific version of a List resource",
                "operationId": "vreadList",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read List operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/List"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/List/{id}": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "Read a List resource",
                "operationId": "readList",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read List operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/List"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "List"
                ],
                "summary": "Update an existing List resource",
                "operationId": "updateList",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update List operation successful"
                    },
                    "201": {
                        "description": "Create List operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/List"
                }
            }
        },
        "/List/{id}/_history": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "Return the history of a List resource",
                "operationId": "historyList",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History List operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Location": {
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "Create a Location resource",
                "operationId": "createLocation",
                "responses": {
                    "201": {
                        "description": "Create Location operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Location"
                }
            },
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Search for Location resources",
                "operationId": "searchLocation",
                "parameters": [
                    {
                        "name": "address",
                        "description": "A (part of the) address of the location",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-city",
                        "description": "A city specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-country",
                        "description": "A country specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-postalcode",
                        "description": "A postal code specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-state",
                        "description": "A state specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-use",
                        "description": "A use code specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint",
                        "description": "Technical endpoints providing access to services operated for the location",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "An identifier for the location",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "A portion of the location's name or alias",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "near",
                        "description": "Search for locations where the location.position is near to, or within a specified distance of, the provided coordinates expressed as [latitude]|[longitude]|[distance]|[units] (using the WGS84 datum, see notes).\nIf the units are omitted, then kms should be assumed. If the distance is omitted, then the server can use its own discretion as to what distances should be considered near (and units are irrelevant)\n\nServers may search using various techniques that might have differing accuracies, depending on implementation efficiency.\n\nRequires the near-distance parameter to be provided also",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operational-status",
                        "description": "Searches for locations (typically bed/room) that have an operational status (e.g. contaminated, housekeeping)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organization",
                        "description": "Searches for locations that are managed by the provided organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partof",
                        "description": "A location of which this location is a part",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Searches for locations with a specific kind of status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "A code for the type of location",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Location operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Location/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Read specific version of a Location resource",
                "operationId": "vreadLocation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Location operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Location/{id}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Read a Location resource",
                "operationId": "readLocation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Location operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Location"
                ],
                "summary": "Update an existing Location resource",
                "operationId": "updateLocation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Location operation successful"
                    },
                    "201": {
                        "description": "Create Location operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Location"
                }
            }
        },
        "/Location/{id}/_history": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Return the history of a Location resource",
                "operationId": "historyLocation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Location operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Measure": {
            "post": {
                "tags": [
                    "Measure"
                ],
                "summary": "Create a Measure resource",
                "operationId": "createMeasure",
                "responses": {
                    "201": {
                        "description": "Create Measure operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Measure"
                }
            },
            "get": {
                "tags": [
                    "Measure"
                ],
                "summary": "Search for Measure resources",
                "operationId": "searchMeasure",
                "parameters": [
                    {
                        "name": "composed-of",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The measure publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depends-on",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the measure is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "predecessor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic",
                        "description": "Topics associated with the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the measure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Measure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Measure/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Measure"
                ],
                "summary": "Read specific version of a Measure resource",
                "operationId": "vreadMeasure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Measure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Measure/{id}": {
            "get": {
                "tags": [
                    "Measure"
                ],
                "summary": "Read a Measure resource",
                "operationId": "readMeasure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Measure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Measure"
                ],
                "summary": "Update an existing Measure resource",
                "operationId": "updateMeasure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Measure operation successful"
                    },
                    "201": {
                        "description": "Create Measure operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Measure"
                }
            }
        },
        "/Measure/{id}/_history": {
            "get": {
                "tags": [
                    "Measure"
                ],
                "summary": "Return the history of a Measure resource",
                "operationId": "historyMeasure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Measure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MeasureReport": {
            "post": {
                "tags": [
                    "MeasureReport"
                ],
                "summary": "Create a MeasureReport resource",
                "operationId": "createMeasureReport",
                "responses": {
                    "201": {
                        "description": "Create MeasureReport operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MeasureReport"
                }
            },
            "get": {
                "tags": [
                    "MeasureReport"
                ],
                "summary": "Search for MeasureReport resources",
                "operationId": "searchMeasureReport",
                "parameters": [
                    {
                        "name": "date",
                        "description": "The date of the measure report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "evaluated-resource",
                        "description": "An evaluated resource referenced by the measure report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier of the measure report to be returned",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "measure",
                        "description": "The measure to return measure report results for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The identity of a patient to search for individual measure report results for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "description": "The period of the measure report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reporter",
                        "description": "The reporter to return measure report results for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the measure report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The identity of a subject to search for individual measure report results for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MeasureReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MeasureReport/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MeasureReport"
                ],
                "summary": "Read specific version of a MeasureReport resource",
                "operationId": "vreadMeasureReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MeasureReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureReport"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MeasureReport/{id}": {
            "get": {
                "tags": [
                    "MeasureReport"
                ],
                "summary": "Read a MeasureReport resource",
                "operationId": "readMeasureReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MeasureReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureReport"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MeasureReport"
                ],
                "summary": "Update an existing MeasureReport resource",
                "operationId": "updateMeasureReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MeasureReport operation successful"
                    },
                    "201": {
                        "description": "Create MeasureReport operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MeasureReport"
                }
            }
        },
        "/MeasureReport/{id}/_history": {
            "get": {
                "tags": [
                    "MeasureReport"
                ],
                "summary": "Return the history of a MeasureReport resource",
                "operationId": "historyMeasureReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MeasureReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Media": {
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Create a Media resource",
                "operationId": "createMedia",
                "responses": {
                    "201": {
                        "description": "Create Media operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Media"
                }
            },
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Search for Media resources",
                "operationId": "searchMedia",
                "parameters": [
                    {
                        "name": "based-on",
                        "description": "Procedure that caused this media to be created",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created",
                        "description": "When Media was collected",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device",
                        "description": "Observing Device",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounter associated with media",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Identifier(s) for the image",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modality",
                        "description": "The type of acquisition equipment/process",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operator",
                        "description": "The person who generated the image",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Who/What this Media is a record of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site",
                        "description": "Observed body part",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "preparation | in-progress | not-done | suspended | aborted | completed | entered-in-error | unknown",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Who/What this Media is a record of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Classification of media as image, video, or audio",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "view",
                        "description": "Imaging view, e.g. Lateral or Antero-posterior",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Media operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Media/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Read specific version of a Media resource",
                "operationId": "vreadMedia",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Media operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Media"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Media/{id}": {
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Read a Media resource",
                "operationId": "readMedia",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Media operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Media"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Media"
                ],
                "summary": "Update an existing Media resource",
                "operationId": "updateMedia",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Media operation successful"
                    },
                    "201": {
                        "description": "Create Media operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Media"
                }
            }
        },
        "/Media/{id}/_history": {
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Return the history of a Media resource",
                "operationId": "historyMedia",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Media operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Medication": {
            "post": {
                "tags": [
                    "Medication"
                ],
                "summary": "Create a Medication resource",
                "operationId": "createMedication",
                "responses": {
                    "201": {
                        "description": "Create Medication operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Medication"
                }
            },
            "get": {
                "tags": [
                    "Medication"
                ],
                "summary": "Search for Medication resources",
                "operationId": "searchMedication",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expiration-date",
                        "description": "Returns medications in a batch with this expiration date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "form",
                        "description": "Returns medications for a specific dose form",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Returns medications with this external identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ingredient",
                        "description": "Returns medications for this ingredient reference",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ingredient-code",
                        "description": "Returns medications for this ingredient code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lot-number",
                        "description": "Returns medications in a batch with this lot number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "manufacturer",
                        "description": "Returns medications made or sold for this manufacturer",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Returns medications for this status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Medication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Medication/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Medication"
                ],
                "summary": "Read specific version of a Medication resource",
                "operationId": "vreadMedication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Medication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Medication"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Medication/{id}": {
            "get": {
                "tags": [
                    "Medication"
                ],
                "summary": "Read a Medication resource",
                "operationId": "readMedication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Medication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Medication"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Medication"
                ],
                "summary": "Update an existing Medication resource",
                "operationId": "updateMedication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Medication operation successful"
                    },
                    "201": {
                        "description": "Create Medication operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Medication"
                }
            }
        },
        "/Medication/{id}/_history": {
            "get": {
                "tags": [
                    "Medication"
                ],
                "summary": "Return the history of a Medication resource",
                "operationId": "historyMedication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Medication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationAdministration": {
            "post": {
                "tags": [
                    "MedicationAdministration"
                ],
                "summary": "Create a MedicationAdministration resource",
                "operationId": "createMedicationAdministration",
                "responses": {
                    "201": {
                        "description": "Create MedicationAdministration operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicationAdministration"
                }
            },
            "get": {
                "tags": [
                    "MedicationAdministration"
                ],
                "summary": "Search for MedicationAdministration resources",
                "operationId": "searchMedicationAdministration",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "Return administrations that share this encounter or episode of care",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device",
                        "description": "Return administrations with this administration device identity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective-time",
                        "description": "Date administration happened (or did not happen)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "medication",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "The identity of the individual who administered the medication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason-given",
                        "description": "Reasons for administering the medication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason-not-given",
                        "description": "Reasons for not administering the medication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request",
                        "description": "The identity of a request to list administrations from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The identity of the individual or group to list administrations for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicationAdministration operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationAdministration/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicationAdministration"
                ],
                "summary": "Read specific version of a MedicationAdministration resource",
                "operationId": "vreadMedicationAdministration",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicationAdministration operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationAdministration"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationAdministration/{id}": {
            "get": {
                "tags": [
                    "MedicationAdministration"
                ],
                "summary": "Read a MedicationAdministration resource",
                "operationId": "readMedicationAdministration",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicationAdministration operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationAdministration"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicationAdministration"
                ],
                "summary": "Update an existing MedicationAdministration resource",
                "operationId": "updateMedicationAdministration",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicationAdministration operation successful"
                    },
                    "201": {
                        "description": "Create MedicationAdministration operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicationAdministration"
                }
            }
        },
        "/MedicationAdministration/{id}/_history": {
            "get": {
                "tags": [
                    "MedicationAdministration"
                ],
                "summary": "Return the history of a MedicationAdministration resource",
                "operationId": "historyMedicationAdministration",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicationAdministration operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationDispense": {
            "post": {
                "tags": [
                    "MedicationDispense"
                ],
                "summary": "Create a MedicationDispense resource",
                "operationId": "createMedicationDispense",
                "responses": {
                    "201": {
                        "description": "Create MedicationDispense operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicationDispense"
                }
            },
            "get": {
                "tags": [
                    "MedicationDispense"
                ],
                "summary": "Search for MedicationDispense resources",
                "operationId": "searchMedicationDispense",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "medication",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "Returns dispenses with a specific context (episode or episode of care)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination",
                        "description": "Returns dispenses that should be sent to a specific destination",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "Returns dispenses performed by a specific individual",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prescription",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationDispense](medicationdispense.html): The identity of a prescription to list dispenses from\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "receiver",
                        "description": "The identity of a receiver to list dispenses for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "responsibleparty",
                        "description": "Returns dispenses with the specified responsible party",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The identity of a patient for whom to list dispenses",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Returns dispenses of a specific type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "whenhandedover",
                        "description": "Returns dispenses handed over on this date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "whenprepared",
                        "description": "Returns dispenses prepared on this date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicationDispense operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationDispense/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicationDispense"
                ],
                "summary": "Read specific version of a MedicationDispense resource",
                "operationId": "vreadMedicationDispense",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicationDispense operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationDispense"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationDispense/{id}": {
            "get": {
                "tags": [
                    "MedicationDispense"
                ],
                "summary": "Read a MedicationDispense resource",
                "operationId": "readMedicationDispense",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicationDispense operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationDispense"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicationDispense"
                ],
                "summary": "Update an existing MedicationDispense resource",
                "operationId": "updateMedicationDispense",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicationDispense operation successful"
                    },
                    "201": {
                        "description": "Create MedicationDispense operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicationDispense"
                }
            }
        },
        "/MedicationDispense/{id}/_history": {
            "get": {
                "tags": [
                    "MedicationDispense"
                ],
                "summary": "Return the history of a MedicationDispense resource",
                "operationId": "historyMedicationDispense",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicationDispense operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationKnowledge": {
            "post": {
                "tags": [
                    "MedicationKnowledge"
                ],
                "summary": "Create a MedicationKnowledge resource",
                "operationId": "createMedicationKnowledge",
                "responses": {
                    "201": {
                        "description": "Create MedicationKnowledge operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicationKnowledge"
                }
            },
            "get": {
                "tags": [
                    "MedicationKnowledge"
                ],
                "summary": "Search for MedicationKnowledge resources",
                "operationId": "searchMedicationKnowledge",
                "parameters": [
                    {
                        "name": "classification",
                        "description": "Specific category assigned to the medication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "classification-type",
                        "description": "The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "Code that identifies this medication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "doseform",
                        "description": "powder | tablets | capsule +",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ingredient",
                        "description": "Medication(s) or substance(s) contained in the medication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ingredient-code",
                        "description": "Medication(s) or substance(s) contained in the medication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "manufacturer",
                        "description": "Manufacturer of the item",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "monitoring-program-name",
                        "description": "Name of the reviewing program",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "monitoring-program-type",
                        "description": "Type of program under which the medication is monitored",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "monograph",
                        "description": "Associated documentation about the medication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "monograph-type",
                        "description": "The category of medication document",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source-cost",
                        "description": "The source or owner for the price information",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "active | inactive | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicationKnowledge operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationKnowledge/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicationKnowledge"
                ],
                "summary": "Read specific version of a MedicationKnowledge resource",
                "operationId": "vreadMedicationKnowledge",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicationKnowledge operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationKnowledge"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationKnowledge/{id}": {
            "get": {
                "tags": [
                    "MedicationKnowledge"
                ],
                "summary": "Read a MedicationKnowledge resource",
                "operationId": "readMedicationKnowledge",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicationKnowledge operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationKnowledge"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicationKnowledge"
                ],
                "summary": "Update an existing MedicationKnowledge resource",
                "operationId": "updateMedicationKnowledge",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicationKnowledge operation successful"
                    },
                    "201": {
                        "description": "Create MedicationKnowledge operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicationKnowledge"
                }
            }
        },
        "/MedicationKnowledge/{id}/_history": {
            "get": {
                "tags": [
                    "MedicationKnowledge"
                ],
                "summary": "Return the history of a MedicationKnowledge resource",
                "operationId": "historyMedicationKnowledge",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicationKnowledge operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationRequest": {
            "post": {
                "tags": [
                    "MedicationRequest"
                ],
                "summary": "Create a MedicationRequest resource",
                "operationId": "createMedicationRequest",
                "responses": {
                    "201": {
                        "description": "Create MedicationRequest operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicationRequest"
                }
            },
            "get": {
                "tags": [
                    "MedicationRequest"
                ],
                "summary": "Search for MedicationRequest resources",
                "operationId": "searchMedicationRequest",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "medication",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authoredon",
                        "description": "Return prescriptions written on this date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Returns prescriptions with different categories",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns medication request to be administered on a specific date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intended-dispenser",
                        "description": "Returns prescriptions intended to be dispensed by this Organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intended-performer",
                        "description": "Returns the intended performer of the administration of the medication request",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intended-performertype",
                        "description": "Returns requests for a specific type of performer",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intent",
                        "description": "Returns prescriptions with different intents",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "description": "Returns prescriptions with different priorities",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requester",
                        "description": "Returns prescriptions prescribed by this prescriber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The identity of a patient to list orders  for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicationRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationRequest/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicationRequest"
                ],
                "summary": "Read specific version of a MedicationRequest resource",
                "operationId": "vreadMedicationRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicationRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationRequest"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationRequest/{id}": {
            "get": {
                "tags": [
                    "MedicationRequest"
                ],
                "summary": "Read a MedicationRequest resource",
                "operationId": "readMedicationRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicationRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationRequest"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicationRequest"
                ],
                "summary": "Update an existing MedicationRequest resource",
                "operationId": "updateMedicationRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicationRequest operation successful"
                    },
                    "201": {
                        "description": "Create MedicationRequest operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicationRequest"
                }
            }
        },
        "/MedicationRequest/{id}/_history": {
            "get": {
                "tags": [
                    "MedicationRequest"
                ],
                "summary": "Return the history of a MedicationRequest resource",
                "operationId": "historyMedicationRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicationRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationStatement": {
            "post": {
                "tags": [
                    "MedicationStatement"
                ],
                "summary": "Create a MedicationStatement resource",
                "operationId": "createMedicationStatement",
                "responses": {
                    "201": {
                        "description": "Create MedicationStatement operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicationStatement"
                }
            },
            "get": {
                "tags": [
                    "MedicationStatement"
                ],
                "summary": "Search for MedicationStatement resources",
                "operationId": "searchMedicationStatement",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "medication",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Returns statements of this category of medicationstatement",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "Returns statements for a specific context (episode or episode of Care).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "Date when patient was taking (or not taking) the medication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "part-of",
                        "description": "Returns statements that are part of another event.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "Who or where the information in the statement came from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The identity of a patient, animal or group to list statements for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicationStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationStatement/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicationStatement"
                ],
                "summary": "Read specific version of a MedicationStatement resource",
                "operationId": "vreadMedicationStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicationStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationStatement"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationStatement/{id}": {
            "get": {
                "tags": [
                    "MedicationStatement"
                ],
                "summary": "Read a MedicationStatement resource",
                "operationId": "readMedicationStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicationStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationStatement"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicationStatement"
                ],
                "summary": "Update an existing MedicationStatement resource",
                "operationId": "updateMedicationStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicationStatement operation successful"
                    },
                    "201": {
                        "description": "Create MedicationStatement operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicationStatement"
                }
            }
        },
        "/MedicationStatement/{id}/_history": {
            "get": {
                "tags": [
                    "MedicationStatement"
                ],
                "summary": "Return the history of a MedicationStatement resource",
                "operationId": "historyMedicationStatement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicationStatement operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProduct": {
            "post": {
                "tags": [
                    "MedicinalProduct"
                ],
                "summary": "Create a MedicinalProduct resource",
                "operationId": "createMedicinalProduct",
                "responses": {
                    "201": {
                        "description": "Create MedicinalProduct operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProduct"
                }
            },
            "get": {
                "tags": [
                    "MedicinalProduct"
                ],
                "summary": "Search for MedicinalProduct resources",
                "operationId": "searchMedicinalProduct",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Business identifier for this product. Could be an MPID",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "The full product name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name-language",
                        "description": "Language code for this name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicinalProduct operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProduct/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicinalProduct"
                ],
                "summary": "Read specific version of a MedicinalProduct resource",
                "operationId": "vreadMedicinalProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicinalProduct operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProduct"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProduct/{id}": {
            "get": {
                "tags": [
                    "MedicinalProduct"
                ],
                "summary": "Read a MedicinalProduct resource",
                "operationId": "readMedicinalProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicinalProduct operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProduct"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicinalProduct"
                ],
                "summary": "Update an existing MedicinalProduct resource",
                "operationId": "updateMedicinalProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicinalProduct operation successful"
                    },
                    "201": {
                        "description": "Create MedicinalProduct operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProduct"
                }
            }
        },
        "/MedicinalProduct/{id}/_history": {
            "get": {
                "tags": [
                    "MedicinalProduct"
                ],
                "summary": "Return the history of a MedicinalProduct resource",
                "operationId": "historyMedicinalProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicinalProduct operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductAuthorization": {
            "post": {
                "tags": [
                    "MedicinalProductAuthorization"
                ],
                "summary": "Create a MedicinalProductAuthorization resource",
                "operationId": "createMedicinalProductAuthorization",
                "responses": {
                    "201": {
                        "description": "Create MedicinalProductAuthorization operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductAuthorization"
                }
            },
            "get": {
                "tags": [
                    "MedicinalProductAuthorization"
                ],
                "summary": "Search for MedicinalProductAuthorization resources",
                "operationId": "searchMedicinalProductAuthorization",
                "parameters": [
                    {
                        "name": "country",
                        "description": "The country in which the marketing authorization has been granted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "holder",
                        "description": "Marketing Authorization Holder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Business identifier for the marketing authorization, as assigned by a regulator",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the marketing authorization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The medicinal product that is being authorized",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicinalProductAuthorization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductAuthorization/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicinalProductAuthorization"
                ],
                "summary": "Read specific version of a MedicinalProductAuthorization resource",
                "operationId": "vreadMedicinalProductAuthorization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicinalProductAuthorization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductAuthorization"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductAuthorization/{id}": {
            "get": {
                "tags": [
                    "MedicinalProductAuthorization"
                ],
                "summary": "Read a MedicinalProductAuthorization resource",
                "operationId": "readMedicinalProductAuthorization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicinalProductAuthorization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductAuthorization"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicinalProductAuthorization"
                ],
                "summary": "Update an existing MedicinalProductAuthorization resource",
                "operationId": "updateMedicinalProductAuthorization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicinalProductAuthorization operation successful"
                    },
                    "201": {
                        "description": "Create MedicinalProductAuthorization operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductAuthorization"
                }
            }
        },
        "/MedicinalProductAuthorization/{id}/_history": {
            "get": {
                "tags": [
                    "MedicinalProductAuthorization"
                ],
                "summary": "Return the history of a MedicinalProductAuthorization resource",
                "operationId": "historyMedicinalProductAuthorization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicinalProductAuthorization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductContraindication": {
            "post": {
                "tags": [
                    "MedicinalProductContraindication"
                ],
                "summary": "Create a MedicinalProductContraindication resource",
                "operationId": "createMedicinalProductContraindication",
                "responses": {
                    "201": {
                        "description": "Create MedicinalProductContraindication operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductContraindication"
                }
            },
            "get": {
                "tags": [
                    "MedicinalProductContraindication"
                ],
                "summary": "Search for MedicinalProductContraindication resources",
                "operationId": "searchMedicinalProductContraindication",
                "parameters": [
                    {
                        "name": "subject",
                        "description": "The medication for which this is an contraindication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicinalProductContraindication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductContraindication/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicinalProductContraindication"
                ],
                "summary": "Read specific version of a MedicinalProductContraindication resource",
                "operationId": "vreadMedicinalProductContraindication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicinalProductContraindication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductContraindication"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductContraindication/{id}": {
            "get": {
                "tags": [
                    "MedicinalProductContraindication"
                ],
                "summary": "Read a MedicinalProductContraindication resource",
                "operationId": "readMedicinalProductContraindication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicinalProductContraindication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductContraindication"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicinalProductContraindication"
                ],
                "summary": "Update an existing MedicinalProductContraindication resource",
                "operationId": "updateMedicinalProductContraindication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicinalProductContraindication operation successful"
                    },
                    "201": {
                        "description": "Create MedicinalProductContraindication operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductContraindication"
                }
            }
        },
        "/MedicinalProductContraindication/{id}/_history": {
            "get": {
                "tags": [
                    "MedicinalProductContraindication"
                ],
                "summary": "Return the history of a MedicinalProductContraindication resource",
                "operationId": "historyMedicinalProductContraindication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicinalProductContraindication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductIndication": {
            "post": {
                "tags": [
                    "MedicinalProductIndication"
                ],
                "summary": "Create a MedicinalProductIndication resource",
                "operationId": "createMedicinalProductIndication",
                "responses": {
                    "201": {
                        "description": "Create MedicinalProductIndication operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductIndication"
                }
            },
            "get": {
                "tags": [
                    "MedicinalProductIndication"
                ],
                "summary": "Search for MedicinalProductIndication resources",
                "operationId": "searchMedicinalProductIndication",
                "parameters": [
                    {
                        "name": "subject",
                        "description": "The medication for which this is an indication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicinalProductIndication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductIndication/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicinalProductIndication"
                ],
                "summary": "Read specific version of a MedicinalProductIndication resource",
                "operationId": "vreadMedicinalProductIndication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicinalProductIndication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductIndication"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductIndication/{id}": {
            "get": {
                "tags": [
                    "MedicinalProductIndication"
                ],
                "summary": "Read a MedicinalProductIndication resource",
                "operationId": "readMedicinalProductIndication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicinalProductIndication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductIndication"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicinalProductIndication"
                ],
                "summary": "Update an existing MedicinalProductIndication resource",
                "operationId": "updateMedicinalProductIndication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicinalProductIndication operation successful"
                    },
                    "201": {
                        "description": "Create MedicinalProductIndication operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductIndication"
                }
            }
        },
        "/MedicinalProductIndication/{id}/_history": {
            "get": {
                "tags": [
                    "MedicinalProductIndication"
                ],
                "summary": "Return the history of a MedicinalProductIndication resource",
                "operationId": "historyMedicinalProductIndication",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicinalProductIndication operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductIngredient": {
            "post": {
                "tags": [
                    "MedicinalProductIngredient"
                ],
                "summary": "Create a MedicinalProductIngredient resource",
                "operationId": "createMedicinalProductIngredient",
                "responses": {
                    "201": {
                        "description": "Create MedicinalProductIngredient operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductIngredient"
                }
            },
            "get": {
                "tags": [
                    "MedicinalProductIngredient"
                ],
                "summary": "Search for MedicinalProductIngredient resources",
                "operationId": "searchMedicinalProductIngredient",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicinalProductIngredient operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductIngredient/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicinalProductIngredient"
                ],
                "summary": "Read specific version of a MedicinalProductIngredient resource",
                "operationId": "vreadMedicinalProductIngredient",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicinalProductIngredient operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductIngredient"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductIngredient/{id}": {
            "get": {
                "tags": [
                    "MedicinalProductIngredient"
                ],
                "summary": "Read a MedicinalProductIngredient resource",
                "operationId": "readMedicinalProductIngredient",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicinalProductIngredient operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductIngredient"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicinalProductIngredient"
                ],
                "summary": "Update an existing MedicinalProductIngredient resource",
                "operationId": "updateMedicinalProductIngredient",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicinalProductIngredient operation successful"
                    },
                    "201": {
                        "description": "Create MedicinalProductIngredient operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductIngredient"
                }
            }
        },
        "/MedicinalProductIngredient/{id}/_history": {
            "get": {
                "tags": [
                    "MedicinalProductIngredient"
                ],
                "summary": "Return the history of a MedicinalProductIngredient resource",
                "operationId": "historyMedicinalProductIngredient",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicinalProductIngredient operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductInteraction": {
            "post": {
                "tags": [
                    "MedicinalProductInteraction"
                ],
                "summary": "Create a MedicinalProductInteraction resource",
                "operationId": "createMedicinalProductInteraction",
                "responses": {
                    "201": {
                        "description": "Create MedicinalProductInteraction operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductInteraction"
                }
            },
            "get": {
                "tags": [
                    "MedicinalProductInteraction"
                ],
                "summary": "Search for MedicinalProductInteraction resources",
                "operationId": "searchMedicinalProductInteraction",
                "parameters": [
                    {
                        "name": "subject",
                        "description": "The medication for which this is an interaction",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicinalProductInteraction operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductInteraction/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicinalProductInteraction"
                ],
                "summary": "Read specific version of a MedicinalProductInteraction resource",
                "operationId": "vreadMedicinalProductInteraction",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicinalProductInteraction operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductInteraction"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductInteraction/{id}": {
            "get": {
                "tags": [
                    "MedicinalProductInteraction"
                ],
                "summary": "Read a MedicinalProductInteraction resource",
                "operationId": "readMedicinalProductInteraction",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicinalProductInteraction operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductInteraction"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicinalProductInteraction"
                ],
                "summary": "Update an existing MedicinalProductInteraction resource",
                "operationId": "updateMedicinalProductInteraction",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicinalProductInteraction operation successful"
                    },
                    "201": {
                        "description": "Create MedicinalProductInteraction operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductInteraction"
                }
            }
        },
        "/MedicinalProductInteraction/{id}/_history": {
            "get": {
                "tags": [
                    "MedicinalProductInteraction"
                ],
                "summary": "Return the history of a MedicinalProductInteraction resource",
                "operationId": "historyMedicinalProductInteraction",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicinalProductInteraction operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductManufactured": {
            "post": {
                "tags": [
                    "MedicinalProductManufactured"
                ],
                "summary": "Create a MedicinalProductManufactured resource",
                "operationId": "createMedicinalProductManufactured",
                "responses": {
                    "201": {
                        "description": "Create MedicinalProductManufactured operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductManufactured"
                }
            },
            "get": {
                "tags": [
                    "MedicinalProductManufactured"
                ],
                "summary": "Search for MedicinalProductManufactured resources",
                "operationId": "searchMedicinalProductManufactured",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicinalProductManufactured operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductManufactured/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicinalProductManufactured"
                ],
                "summary": "Read specific version of a MedicinalProductManufactured resource",
                "operationId": "vreadMedicinalProductManufactured",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicinalProductManufactured operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductManufactured"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductManufactured/{id}": {
            "get": {
                "tags": [
                    "MedicinalProductManufactured"
                ],
                "summary": "Read a MedicinalProductManufactured resource",
                "operationId": "readMedicinalProductManufactured",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicinalProductManufactured operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductManufactured"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicinalProductManufactured"
                ],
                "summary": "Update an existing MedicinalProductManufactured resource",
                "operationId": "updateMedicinalProductManufactured",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicinalProductManufactured operation successful"
                    },
                    "201": {
                        "description": "Create MedicinalProductManufactured operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductManufactured"
                }
            }
        },
        "/MedicinalProductManufactured/{id}/_history": {
            "get": {
                "tags": [
                    "MedicinalProductManufactured"
                ],
                "summary": "Return the history of a MedicinalProductManufactured resource",
                "operationId": "historyMedicinalProductManufactured",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicinalProductManufactured operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductPackaged": {
            "post": {
                "tags": [
                    "MedicinalProductPackaged"
                ],
                "summary": "Create a MedicinalProductPackaged resource",
                "operationId": "createMedicinalProductPackaged",
                "responses": {
                    "201": {
                        "description": "Create MedicinalProductPackaged operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductPackaged"
                }
            },
            "get": {
                "tags": [
                    "MedicinalProductPackaged"
                ],
                "summary": "Search for MedicinalProductPackaged resources",
                "operationId": "searchMedicinalProductPackaged",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Unique identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The product with this is a pack for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicinalProductPackaged operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductPackaged/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicinalProductPackaged"
                ],
                "summary": "Read specific version of a MedicinalProductPackaged resource",
                "operationId": "vreadMedicinalProductPackaged",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicinalProductPackaged operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductPackaged"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductPackaged/{id}": {
            "get": {
                "tags": [
                    "MedicinalProductPackaged"
                ],
                "summary": "Read a MedicinalProductPackaged resource",
                "operationId": "readMedicinalProductPackaged",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicinalProductPackaged operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductPackaged"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicinalProductPackaged"
                ],
                "summary": "Update an existing MedicinalProductPackaged resource",
                "operationId": "updateMedicinalProductPackaged",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicinalProductPackaged operation successful"
                    },
                    "201": {
                        "description": "Create MedicinalProductPackaged operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductPackaged"
                }
            }
        },
        "/MedicinalProductPackaged/{id}/_history": {
            "get": {
                "tags": [
                    "MedicinalProductPackaged"
                ],
                "summary": "Return the history of a MedicinalProductPackaged resource",
                "operationId": "historyMedicinalProductPackaged",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicinalProductPackaged operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductPharmaceutical": {
            "post": {
                "tags": [
                    "MedicinalProductPharmaceutical"
                ],
                "summary": "Create a MedicinalProductPharmaceutical resource",
                "operationId": "createMedicinalProductPharmaceutical",
                "responses": {
                    "201": {
                        "description": "Create MedicinalProductPharmaceutical operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductPharmaceutical"
                }
            },
            "get": {
                "tags": [
                    "MedicinalProductPharmaceutical"
                ],
                "summary": "Search for MedicinalProductPharmaceutical resources",
                "operationId": "searchMedicinalProductPharmaceutical",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "An identifier for the pharmaceutical medicinal product",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "route",
                        "description": "Coded expression for the route",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target-species",
                        "description": "Coded expression for the species",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicinalProductPharmaceutical operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductPharmaceutical/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicinalProductPharmaceutical"
                ],
                "summary": "Read specific version of a MedicinalProductPharmaceutical resource",
                "operationId": "vreadMedicinalProductPharmaceutical",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicinalProductPharmaceutical operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductPharmaceutical"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductPharmaceutical/{id}": {
            "get": {
                "tags": [
                    "MedicinalProductPharmaceutical"
                ],
                "summary": "Read a MedicinalProductPharmaceutical resource",
                "operationId": "readMedicinalProductPharmaceutical",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicinalProductPharmaceutical operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductPharmaceutical"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicinalProductPharmaceutical"
                ],
                "summary": "Update an existing MedicinalProductPharmaceutical resource",
                "operationId": "updateMedicinalProductPharmaceutical",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicinalProductPharmaceutical operation successful"
                    },
                    "201": {
                        "description": "Create MedicinalProductPharmaceutical operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductPharmaceutical"
                }
            }
        },
        "/MedicinalProductPharmaceutical/{id}/_history": {
            "get": {
                "tags": [
                    "MedicinalProductPharmaceutical"
                ],
                "summary": "Return the history of a MedicinalProductPharmaceutical resource",
                "operationId": "historyMedicinalProductPharmaceutical",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicinalProductPharmaceutical operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductUndesirableEffect": {
            "post": {
                "tags": [
                    "MedicinalProductUndesirableEffect"
                ],
                "summary": "Create a MedicinalProductUndesirableEffect resource",
                "operationId": "createMedicinalProductUndesirableEffect",
                "responses": {
                    "201": {
                        "description": "Create MedicinalProductUndesirableEffect operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductUndesirableEffect"
                }
            },
            "get": {
                "tags": [
                    "MedicinalProductUndesirableEffect"
                ],
                "summary": "Search for MedicinalProductUndesirableEffect resources",
                "operationId": "searchMedicinalProductUndesirableEffect",
                "parameters": [
                    {
                        "name": "subject",
                        "description": "The medication for which this is an undesirable effect",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MedicinalProductUndesirableEffect operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductUndesirableEffect/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MedicinalProductUndesirableEffect"
                ],
                "summary": "Read specific version of a MedicinalProductUndesirableEffect resource",
                "operationId": "vreadMedicinalProductUndesirableEffect",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MedicinalProductUndesirableEffect operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductUndesirableEffect"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicinalProductUndesirableEffect/{id}": {
            "get": {
                "tags": [
                    "MedicinalProductUndesirableEffect"
                ],
                "summary": "Read a MedicinalProductUndesirableEffect resource",
                "operationId": "readMedicinalProductUndesirableEffect",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MedicinalProductUndesirableEffect operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinalProductUndesirableEffect"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MedicinalProductUndesirableEffect"
                ],
                "summary": "Update an existing MedicinalProductUndesirableEffect resource",
                "operationId": "updateMedicinalProductUndesirableEffect",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MedicinalProductUndesirableEffect operation successful"
                    },
                    "201": {
                        "description": "Create MedicinalProductUndesirableEffect operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MedicinalProductUndesirableEffect"
                }
            }
        },
        "/MedicinalProductUndesirableEffect/{id}/_history": {
            "get": {
                "tags": [
                    "MedicinalProductUndesirableEffect"
                ],
                "summary": "Return the history of a MedicinalProductUndesirableEffect resource",
                "operationId": "historyMedicinalProductUndesirableEffect",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MedicinalProductUndesirableEffect operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MessageDefinition": {
            "post": {
                "tags": [
                    "MessageDefinition"
                ],
                "summary": "Create a MessageDefinition resource",
                "operationId": "createMessageDefinition",
                "responses": {
                    "201": {
                        "description": "Create MessageDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MessageDefinition"
                }
            },
            "get": {
                "tags": [
                    "MessageDefinition"
                ],
                "summary": "Search for MessageDefinition resources",
                "operationId": "searchMessageDefinition",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [CodeSystem](codesystem.html): External identifier for the code system\r\n* [ConceptMap](conceptmap.html): External identifier for the concept map\r\n* [MessageDefinition](messagedefinition.html): External identifier for the message definition\r\n* [StructureDefinition](structuredefinition.html): External identifier for the structure definition\r\n* [StructureMap](structuremap.html): External identifier for the structure map\r\n* [ValueSet](valueset.html): External identifier for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "The behavior associated with the message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event",
                        "description": "The event that triggers the message or link to the event definition.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "focus",
                        "description": "A resource that is a permitted focus of the message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent",
                        "description": "A resource that is the parent of the definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MessageDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MessageDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MessageDefinition"
                ],
                "summary": "Read specific version of a MessageDefinition resource",
                "operationId": "vreadMessageDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MessageDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MessageDefinition/{id}": {
            "get": {
                "tags": [
                    "MessageDefinition"
                ],
                "summary": "Read a MessageDefinition resource",
                "operationId": "readMessageDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MessageDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MessageDefinition"
                ],
                "summary": "Update an existing MessageDefinition resource",
                "operationId": "updateMessageDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MessageDefinition operation successful"
                    },
                    "201": {
                        "description": "Create MessageDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MessageDefinition"
                }
            }
        },
        "/MessageDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "MessageDefinition"
                ],
                "summary": "Return the history of a MessageDefinition resource",
                "operationId": "historyMessageDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MessageDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MessageHeader": {
            "post": {
                "tags": [
                    "MessageHeader"
                ],
                "summary": "Create a MessageHeader resource",
                "operationId": "createMessageHeader",
                "responses": {
                    "201": {
                        "description": "Create MessageHeader operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MessageHeader"
                }
            },
            "get": {
                "tags": [
                    "MessageHeader"
                ],
                "summary": "Search for MessageHeader resources",
                "operationId": "searchMessageHeader",
                "parameters": [
                    {
                        "name": "author",
                        "description": "The source of the decision",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "ok | transient-error | fatal-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination",
                        "description": "Name of system",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination-uri",
                        "description": "Actual destination address or id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enterer",
                        "description": "The source of the data entry",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event",
                        "description": "Code for the event this message represents or link to event definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "focus",
                        "description": "The actual content of the message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "receiver",
                        "description": "Intended \"real-world\" recipient for the data",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "response-id",
                        "description": "Id of original message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "responsible",
                        "description": "Final responsibility for event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sender",
                        "description": "Real world sender of the message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "Name of system",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source-uri",
                        "description": "Actual message source address or id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target",
                        "description": "Particular delivery destination within the destination",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MessageHeader operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MessageHeader/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MessageHeader"
                ],
                "summary": "Read specific version of a MessageHeader resource",
                "operationId": "vreadMessageHeader",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MessageHeader operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageHeader"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MessageHeader/{id}": {
            "get": {
                "tags": [
                    "MessageHeader"
                ],
                "summary": "Read a MessageHeader resource",
                "operationId": "readMessageHeader",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MessageHeader operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageHeader"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MessageHeader"
                ],
                "summary": "Update an existing MessageHeader resource",
                "operationId": "updateMessageHeader",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MessageHeader operation successful"
                    },
                    "201": {
                        "description": "Create MessageHeader operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MessageHeader"
                }
            }
        },
        "/MessageHeader/{id}/_history": {
            "get": {
                "tags": [
                    "MessageHeader"
                ],
                "summary": "Return the history of a MessageHeader resource",
                "operationId": "historyMessageHeader",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MessageHeader operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MolecularSequence": {
            "post": {
                "tags": [
                    "MolecularSequence"
                ],
                "summary": "Create a MolecularSequence resource",
                "operationId": "createMolecularSequence",
                "responses": {
                    "201": {
                        "description": "Create MolecularSequence operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MolecularSequence"
                }
            },
            "get": {
                "tags": [
                    "MolecularSequence"
                ],
                "summary": "Search for MolecularSequence resources",
                "operationId": "searchMolecularSequence",
                "parameters": [
                    {
                        "name": "chromosome",
                        "description": "Chromosome number of the reference sequence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The unique identity for a particular sequence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The subject that the observation is about",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "referenceseqid",
                        "description": "Reference Sequence of the sequence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Amino Acid Sequence/ DNA Sequence / RNA Sequence",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variant-end",
                        "description": "End position (0-based exclusive, which menas the acid at this position will not be included, 1-based inclusive, which means the acid at this position will be included) of the variant.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variant-start",
                        "description": "Start position (0-based inclusive, 1-based inclusive, that means the nucleic acid or amino acid at this position will be included) of the variant.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "window-end",
                        "description": "End position (0-based exclusive, which menas the acid at this position will not be included, 1-based inclusive, which means the acid at this position will be included) of the reference sequence.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "window-start",
                        "description": "Start position (0-based inclusive, 1-based inclusive, that means the nucleic acid or amino acid at this position will be included) of the reference sequence.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "chromosome-variant-coordinate",
                        "description": "Search parameter by chromosome and variant coordinate. This will refer to part of a locus or part of a gene where search region will be represented in 1-based system. Since the coordinateSystem can either be 0-based or 1-based, this search query will include the result of both coordinateSystem that contains the equivalent segment of the gene or whole genome sequence. For example, a search for sequence can be represented as `chromosome-variant-coordinate=1$lt345$gt123`, this means it will search for the MolecularSequence resource with variants on chromosome 1 and with position >123 and <345, where in 1-based system resource, all strings within region 1:124-344 will be revealed, while in 0-based system resource, all strings within region 1:123-344 will be revealed. You may want to check detail about 0-based v.s. 1-based above.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "chromosome-window-coordinate",
                        "description": "Search parameter by chromosome and window. This will refer to part of a locus or part of a gene where search region will be represented in 1-based system. Since the coordinateSystem can either be 0-based or 1-based, this search query will include the result of both coordinateSystem that contains the equivalent segment of the gene or whole genome sequence. For example, a search for sequence can be represented as `chromosome-window-coordinate=1$lt345$gt123`, this means it will search for the MolecularSequence resource with a window on chromosome 1 and with position >123 and <345, where in 1-based system resource, all strings within region 1:124-344 will be revealed, while in 0-based system resource, all strings within region 1:123-344 will be revealed. You may want to check detail about 0-based v.s. 1-based above.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "referenceseqid-variant-coordinate",
                        "description": "Search parameter by reference sequence and variant coordinate. This will refer to part of a locus or part of a gene where search region will be represented in 1-based system. Since the coordinateSystem can either be 0-based or 1-based, this search query will include the result of both coordinateSystem that contains the equivalent segment of the gene or whole genome sequence. For example, a search for sequence can be represented as `referenceSeqId-variant-coordinate=NC_000001.11$lt345$gt123`, this means it will search for the MolecularSequence resource with variants on NC_000001.11 and with position >123 and <345, where in 1-based system resource, all strings within region NC_000001.11:124-344 will be revealed, while in 0-based system resource, all strings within region NC_000001.11:123-344 will be revealed. You may want to check detail about 0-based v.s. 1-based above.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "referenceseqid-window-coordinate",
                        "description": "Search parameter by reference sequence and window. This will refer to part of a locus or part of a gene where search region will be represented in 1-based system. Since the coordinateSystem can either be 0-based or 1-based, this search query will include the result of both coordinateSystem that contains the equivalent segment of the gene or whole genome sequence. For example, a search for sequence can be represented as `referenceSeqId-window-coordinate=NC_000001.11$lt345$gt123`, this means it will search for the MolecularSequence resource with a window on NC_000001.11 and with position >123 and <345, where in 1-based system resource, all strings within region NC_000001.11:124-344 will be revealed, while in 0-based system resource, all strings within region NC_000001.11:123-344 will be revealed. You may want to check detail about 0-based v.s. 1-based above.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search MolecularSequence operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MolecularSequence/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "MolecularSequence"
                ],
                "summary": "Read specific version of a MolecularSequence resource",
                "operationId": "vreadMolecularSequence",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read MolecularSequence operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MolecularSequence"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MolecularSequence/{id}": {
            "get": {
                "tags": [
                    "MolecularSequence"
                ],
                "summary": "Read a MolecularSequence resource",
                "operationId": "readMolecularSequence",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read MolecularSequence operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MolecularSequence"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MolecularSequence"
                ],
                "summary": "Update an existing MolecularSequence resource",
                "operationId": "updateMolecularSequence",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update MolecularSequence operation successful"
                    },
                    "201": {
                        "description": "Create MolecularSequence operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MolecularSequence"
                }
            }
        },
        "/MolecularSequence/{id}/_history": {
            "get": {
                "tags": [
                    "MolecularSequence"
                ],
                "summary": "Return the history of a MolecularSequence resource",
                "operationId": "historyMolecularSequence",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History MolecularSequence operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/NamingSystem": {
            "post": {
                "tags": [
                    "NamingSystem"
                ],
                "summary": "Create a NamingSystem resource",
                "operationId": "createNamingSystem",
                "responses": {
                    "201": {
                        "description": "Create NamingSystem operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/NamingSystem"
                }
            },
            "get": {
                "tags": [
                    "NamingSystem"
                ],
                "summary": "Search for NamingSystem resources",
                "operationId": "searchNamingSystem",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contact",
                        "description": "Name of an individual to contact",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id-type",
                        "description": "oid | uuid | uri | other",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "kind",
                        "description": "codesystem | identifier | root",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "description": "When is identifier valid?",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "responsible",
                        "description": "Who maintains system namespace?",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "telecom",
                        "description": "Contact details for individual or organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "e.g. driver,  provider,  patient, bank etc.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "value",
                        "description": "The unique identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search NamingSystem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/NamingSystem/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "NamingSystem"
                ],
                "summary": "Read specific version of a NamingSystem resource",
                "operationId": "vreadNamingSystem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read NamingSystem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NamingSystem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/NamingSystem/{id}": {
            "get": {
                "tags": [
                    "NamingSystem"
                ],
                "summary": "Read a NamingSystem resource",
                "operationId": "readNamingSystem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read NamingSystem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NamingSystem"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "NamingSystem"
                ],
                "summary": "Update an existing NamingSystem resource",
                "operationId": "updateNamingSystem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update NamingSystem operation successful"
                    },
                    "201": {
                        "description": "Create NamingSystem operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/NamingSystem"
                }
            }
        },
        "/NamingSystem/{id}/_history": {
            "get": {
                "tags": [
                    "NamingSystem"
                ],
                "summary": "Return the history of a NamingSystem resource",
                "operationId": "historyNamingSystem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History NamingSystem operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/NutritionOrder": {
            "post": {
                "tags": [
                    "NutritionOrder"
                ],
                "summary": "Create a NutritionOrder resource",
                "operationId": "createNutritionOrder",
                "responses": {
                    "201": {
                        "description": "Create NutritionOrder operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/NutritionOrder"
                }
            },
            "get": {
                "tags": [
                    "NutritionOrder"
                ],
                "summary": "Search for NutritionOrder resources",
                "operationId": "searchNutritionOrder",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "additive",
                        "description": "Type of module component to add to the feeding",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "datetime",
                        "description": "Return nutrition orders requested on this date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "formula",
                        "description": "Type of enteral or infant formula",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-canonical",
                        "description": "Instantiates FHIR protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-uri",
                        "description": "Instantiates external protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "oraldiet",
                        "description": "Type of diet that can be consumed orally (i.e., take via the mouth).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provider",
                        "description": "The identity of the provider who placed the nutrition order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Status of the nutrition order.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplement",
                        "description": "Type of supplement product requested",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search NutritionOrder operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/NutritionOrder/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "NutritionOrder"
                ],
                "summary": "Read specific version of a NutritionOrder resource",
                "operationId": "vreadNutritionOrder",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read NutritionOrder operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NutritionOrder"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/NutritionOrder/{id}": {
            "get": {
                "tags": [
                    "NutritionOrder"
                ],
                "summary": "Read a NutritionOrder resource",
                "operationId": "readNutritionOrder",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read NutritionOrder operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NutritionOrder"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "NutritionOrder"
                ],
                "summary": "Update an existing NutritionOrder resource",
                "operationId": "updateNutritionOrder",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update NutritionOrder operation successful"
                    },
                    "201": {
                        "description": "Create NutritionOrder operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/NutritionOrder"
                }
            }
        },
        "/NutritionOrder/{id}/_history": {
            "get": {
                "tags": [
                    "NutritionOrder"
                ],
                "summary": "Return the history of a NutritionOrder resource",
                "operationId": "historyNutritionOrder",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History NutritionOrder operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Observation": {
            "post": {
                "tags": [
                    "Observation"
                ],
                "summary": "Create an Observation resource",
                "operationId": "createObservation",
                "responses": {
                    "201": {
                        "description": "Create Observation operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Observation"
                }
            },
            "get": {
                "tags": [
                    "Observation"
                ],
                "summary": "Search for Observation resources",
                "operationId": "searchObservation",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "Reference to the service request.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "The classification of the type of observation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "combo-code",
                        "description": "The code of the observation type or component type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "combo-data-absent-reason",
                        "description": "The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "combo-value-concept",
                        "description": "The value or component value of the observation, if the value is a CodeableConcept",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "combo-value-quantity",
                        "description": "The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "component-code",
                        "description": "The component code of the observation type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "component-data-absent-reason",
                        "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "component-value-concept",
                        "description": "The value of the component observation, if the value is a CodeableConcept",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "component-value-quantity",
                        "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data-absent-reason",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "Related measurements the observation is made from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device",
                        "description": "The Device that generated the observation data.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "focus",
                        "description": "The focus of an observation when the focus is not the patient of record.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "has-member",
                        "description": "Related resource that belongs to the Observation group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "description": "The method used for the observation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "part-of",
                        "description": "Part of referenced event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "Who performed the observation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specimen",
                        "description": "Specimen used for this observation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the observation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The subject that the observation is about",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "value-concept",
                        "description": "The value of the observation, if the value is a CodeableConcept",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "value-date",
                        "description": "The value of the observation, if the value is a date or period of time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "value-quantity",
                        "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "value-string",
                        "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code-value-concept",
                        "description": "Code and coded value parameter pair",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code-value-date",
                        "description": "Code and date/time value parameter pair",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code-value-quantity",
                        "description": "Code and quantity value parameter pair",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code-value-string",
                        "description": "Code and string value parameter pair",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "combo-code-value-concept",
                        "description": "Code and coded value parameter pair, including in components",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "combo-code-value-quantity",
                        "description": "Code and quantity value parameter pair, including in components",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "component-code-value-concept",
                        "description": "Component code and component coded value parameter pair",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "component-code-value-quantity",
                        "description": "Component code and component quantity value parameter pair",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Observation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Observation/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Observation"
                ],
                "summary": "Read specific version of an Observation resource",
                "operationId": "vreadObservation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Observation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Observation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Observation/{id}": {
            "get": {
                "tags": [
                    "Observation"
                ],
                "summary": "Read an Observation resource",
                "operationId": "readObservation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Observation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Observation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Observation"
                ],
                "summary": "Update an existing Observation resource",
                "operationId": "updateObservation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Observation operation successful"
                    },
                    "201": {
                        "description": "Create Observation operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Observation"
                }
            }
        },
        "/Observation/{id}/_history": {
            "get": {
                "tags": [
                    "Observation"
                ],
                "summary": "Return the history of an Observation resource",
                "operationId": "historyObservation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Observation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ObservationDefinition": {
            "post": {
                "tags": [
                    "ObservationDefinition"
                ],
                "summary": "Create an ObservationDefinition resource",
                "operationId": "createObservationDefinition",
                "responses": {
                    "201": {
                        "description": "Create ObservationDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ObservationDefinition"
                }
            },
            "get": {
                "tags": [
                    "ObservationDefinition"
                ],
                "summary": "Search for ObservationDefinition resources",
                "operationId": "searchObservationDefinition",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search ObservationDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ObservationDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ObservationDefinition"
                ],
                "summary": "Read specific version of an ObservationDefinition resource",
                "operationId": "vreadObservationDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ObservationDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObservationDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ObservationDefinition/{id}": {
            "get": {
                "tags": [
                    "ObservationDefinition"
                ],
                "summary": "Read an ObservationDefinition resource",
                "operationId": "readObservationDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ObservationDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObservationDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ObservationDefinition"
                ],
                "summary": "Update an existing ObservationDefinition resource",
                "operationId": "updateObservationDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ObservationDefinition operation successful"
                    },
                    "201": {
                        "description": "Create ObservationDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ObservationDefinition"
                }
            }
        },
        "/ObservationDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "ObservationDefinition"
                ],
                "summary": "Return the history of an ObservationDefinition resource",
                "operationId": "historyObservationDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ObservationDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationDefinition": {
            "post": {
                "tags": [
                    "OperationDefinition"
                ],
                "summary": "Create an OperationDefinition resource",
                "operationId": "createOperationDefinition",
                "responses": {
                    "201": {
                        "description": "Create OperationDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/OperationDefinition"
                }
            },
            "get": {
                "tags": [
                    "OperationDefinition"
                ],
                "summary": "Search for OperationDefinition resources",
                "operationId": "searchOperationDefinition",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base",
                        "description": "Marks this as a profile of the base",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "Name used to invoke the operation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "input-profile",
                        "description": "Validation information for in parameters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instance",
                        "description": "Invoke on an instance?",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "kind",
                        "description": "operation | query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "output-profile",
                        "description": "Validation information for out parameters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "system",
                        "description": "Invoke at the system level?",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Invoke at the type level?",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search OperationDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "OperationDefinition"
                ],
                "summary": "Read specific version of an OperationDefinition resource",
                "operationId": "vreadOperationDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read OperationDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationDefinition/{id}": {
            "get": {
                "tags": [
                    "OperationDefinition"
                ],
                "summary": "Read an OperationDefinition resource",
                "operationId": "readOperationDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read OperationDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OperationDefinition"
                ],
                "summary": "Update an existing OperationDefinition resource",
                "operationId": "updateOperationDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update OperationDefinition operation successful"
                    },
                    "201": {
                        "description": "Create OperationDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/OperationDefinition"
                }
            }
        },
        "/OperationDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "OperationDefinition"
                ],
                "summary": "Return the history of an OperationDefinition resource",
                "operationId": "historyOperationDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History OperationDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationOutcome": {
            "post": {
                "tags": [
                    "OperationOutcome"
                ],
                "summary": "Create an OperationOutcome resource",
                "operationId": "createOperationOutcome",
                "responses": {
                    "201": {
                        "description": "Create OperationOutcome operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/OperationOutcome"
                }
            },
            "get": {
                "tags": [
                    "OperationOutcome"
                ],
                "summary": "Search for OperationOutcome resources",
                "operationId": "searchOperationOutcome",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search OperationOutcome operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationOutcome/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "OperationOutcome"
                ],
                "summary": "Read specific version of an OperationOutcome resource",
                "operationId": "vreadOperationOutcome",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read OperationOutcome operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationOutcome/{id}": {
            "get": {
                "tags": [
                    "OperationOutcome"
                ],
                "summary": "Read an OperationOutcome resource",
                "operationId": "readOperationOutcome",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read OperationOutcome operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OperationOutcome"
                ],
                "summary": "Update an existing OperationOutcome resource",
                "operationId": "updateOperationOutcome",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update OperationOutcome operation successful"
                    },
                    "201": {
                        "description": "Create OperationOutcome operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/OperationOutcome"
                }
            }
        },
        "/OperationOutcome/{id}/_history": {
            "get": {
                "tags": [
                    "OperationOutcome"
                ],
                "summary": "Return the history of an OperationOutcome resource",
                "operationId": "historyOperationOutcome",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History OperationOutcome operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Organization": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Create an Organization resource",
                "operationId": "createOrganization",
                "responses": {
                    "201": {
                        "description": "Create Organization operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Organization"
                }
            },
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Search for Organization resources",
                "operationId": "searchOrganization",
                "parameters": [
                    {
                        "name": "active",
                        "description": "Is the Organization record active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "description": "A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-city",
                        "description": "A city specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-country",
                        "description": "A country specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-postalcode",
                        "description": "A postal code specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-state",
                        "description": "A state specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-use",
                        "description": "A use code specified in an address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint",
                        "description": "Technical endpoints providing access to services operated for the organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Any identifier for the organization (not the accreditation issuer's identifier)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "A portion of the organization's name or alias",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partof",
                        "description": "An organization of which this organization forms a part",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phonetic",
                        "description": "A portion of the organization's name using some kind of phonetic matching algorithm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "A code for the type of organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Organization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Organization/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Read specific version of an Organization resource",
                "operationId": "vreadOrganization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Organization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Organization/{id}": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Read an Organization resource",
                "operationId": "readOrganization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Organization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Organization"
                ],
                "summary": "Update an existing Organization resource",
                "operationId": "updateOrganization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Organization operation successful"
                    },
                    "201": {
                        "description": "Create Organization operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Organization"
                }
            }
        },
        "/Organization/{id}/_history": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Return the history of an Organization resource",
                "operationId": "historyOrganization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Organization operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OrganizationAffiliation": {
            "post": {
                "tags": [
                    "OrganizationAffiliation"
                ],
                "summary": "Create an OrganizationAffiliation resource",
                "operationId": "createOrganizationAffiliation",
                "responses": {
                    "201": {
                        "description": "Create OrganizationAffiliation operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/OrganizationAffiliation"
                }
            },
            "get": {
                "tags": [
                    "OrganizationAffiliation"
                ],
                "summary": "Search for OrganizationAffiliation resources",
                "operationId": "searchOrganizationAffiliation",
                "parameters": [
                    {
                        "name": "active",
                        "description": "Whether this organization affiliation record is in active use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The period during which the participatingOrganization is affiliated with the primary organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "description": "A value in an email contact",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint",
                        "description": "Technical endpoints providing access to services operated for this role",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "An organization affiliation's Identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "The location(s) at which the role occurs",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "network",
                        "description": "Health insurance provider network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participating-organization",
                        "description": "The organization that provides services to the primary organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "description": "A value in a phone contact",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "primary-organization",
                        "description": "The organization that receives the services from the participating organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "description": "Definition of the role the participatingOrganization plays",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service",
                        "description": "Healthcare services provided through the role",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specialty",
                        "description": "Specific specialty of the participatingOrganization in the context of the role",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "telecom",
                        "description": "The value in any kind of contact",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search OrganizationAffiliation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OrganizationAffiliation/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "OrganizationAffiliation"
                ],
                "summary": "Read specific version of an OrganizationAffiliation resource",
                "operationId": "vreadOrganizationAffiliation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read OrganizationAffiliation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationAffiliation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OrganizationAffiliation/{id}": {
            "get": {
                "tags": [
                    "OrganizationAffiliation"
                ],
                "summary": "Read an OrganizationAffiliation resource",
                "operationId": "readOrganizationAffiliation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read OrganizationAffiliation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationAffiliation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OrganizationAffiliation"
                ],
                "summary": "Update an existing OrganizationAffiliation resource",
                "operationId": "updateOrganizationAffiliation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update OrganizationAffiliation operation successful"
                    },
                    "201": {
                        "description": "Create OrganizationAffiliation operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/OrganizationAffiliation"
                }
            }
        },
        "/OrganizationAffiliation/{id}/_history": {
            "get": {
                "tags": [
                    "OrganizationAffiliation"
                ],
                "summary": "Return the history of an OrganizationAffiliation resource",
                "operationId": "historyOrganizationAffiliation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History OrganizationAffiliation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Patient": {
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "Create a Patient resource",
                "operationId": "createPatient",
                "responses": {
                    "201": {
                        "description": "Create Patient operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Patient"
                }
            },
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "Search for Patient resources",
                "operationId": "searchPatient",
                "parameters": [
                    {
                        "name": "active",
                        "description": "Whether the patient record is active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-city",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-country",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-postalcode",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-state",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-use",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "birthdate",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): The patient's date of birth\r\n* [Person](person.html): The person's date of birth\r\n* [RelatedPerson](relatedperson.html): The Related Person's date of birth\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "death-date",
                        "description": "The date of death has been provided and satisfies this search value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "deceased",
                        "description": "This patient has been marked as deceased, or as a death date entered",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "family",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A portion of the family name of the patient\r\n* [Practitioner](practitioner.html): A portion of the family name\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): Gender of the patient\r\n* [Person](person.html): The gender of the person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "general-practitioner",
                        "description": "Patient's nominated general practitioner, not the organization that manages the record",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "given",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A portion of the given name of the patient\r\n* [Practitioner](practitioner.html): A portion of the given name\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "A patient identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "language",
                        "description": "Language code (irrespective of use value)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "link",
                        "description": "All patients linked to the given patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organization",
                        "description": "The organization that is the custodian of the patient record",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phonetic",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "telecom",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n* [Person](person.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Patient operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Patient/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "Read specific version of a Patient resource",
                "operationId": "vreadPatient",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Patient operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Patient/{id}": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "Read a Patient resource",
                "operationId": "readPatient",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Patient operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "Update an existing Patient resource",
                "operationId": "updatePatient",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Patient operation successful"
                    },
                    "201": {
                        "description": "Create Patient operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Patient"
                }
            }
        },
        "/Patient/{id}/_history": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "Return the history of a Patient resource",
                "operationId": "historyPatient",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Patient operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PaymentNotice": {
            "post": {
                "tags": [
                    "PaymentNotice"
                ],
                "summary": "Create a PaymentNotice resource",
                "operationId": "createPaymentNotice",
                "responses": {
                    "201": {
                        "description": "Create PaymentNotice operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/PaymentNotice"
                }
            },
            "get": {
                "tags": [
                    "PaymentNotice"
                ],
                "summary": "Search for PaymentNotice resources",
                "operationId": "searchPaymentNotice",
                "parameters": [
                    {
                        "name": "created",
                        "description": "Creation date fro the notice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The business identifier of the notice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payment-status",
                        "description": "The type of payment notice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provider",
                        "description": "The reference to the provider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request",
                        "description": "The Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "response",
                        "description": "The ClaimResponse",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the payment notice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search PaymentNotice operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PaymentNotice/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "PaymentNotice"
                ],
                "summary": "Read specific version of a PaymentNotice resource",
                "operationId": "vreadPaymentNotice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read PaymentNotice operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentNotice"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PaymentNotice/{id}": {
            "get": {
                "tags": [
                    "PaymentNotice"
                ],
                "summary": "Read a PaymentNotice resource",
                "operationId": "readPaymentNotice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read PaymentNotice operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentNotice"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "PaymentNotice"
                ],
                "summary": "Update an existing PaymentNotice resource",
                "operationId": "updatePaymentNotice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update PaymentNotice operation successful"
                    },
                    "201": {
                        "description": "Create PaymentNotice operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/PaymentNotice"
                }
            }
        },
        "/PaymentNotice/{id}/_history": {
            "get": {
                "tags": [
                    "PaymentNotice"
                ],
                "summary": "Return the history of a PaymentNotice resource",
                "operationId": "historyPaymentNotice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History PaymentNotice operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PaymentReconciliation": {
            "post": {
                "tags": [
                    "PaymentReconciliation"
                ],
                "summary": "Create a PaymentReconciliation resource",
                "operationId": "createPaymentReconciliation",
                "responses": {
                    "201": {
                        "description": "Create PaymentReconciliation operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/PaymentReconciliation"
                }
            },
            "get": {
                "tags": [
                    "PaymentReconciliation"
                ],
                "summary": "Search for PaymentReconciliation resources",
                "operationId": "searchPaymentReconciliation",
                "parameters": [
                    {
                        "name": "created",
                        "description": "The creation date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disposition",
                        "description": "The contents of the disposition message",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The business identifier of the ExplanationOfBenefit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "outcome",
                        "description": "The processing outcome",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payment-issuer",
                        "description": "The organization which generated this resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request",
                        "description": "The reference to the claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestor",
                        "description": "The reference to the provider who submitted the claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the payment reconciliation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search PaymentReconciliation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PaymentReconciliation/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "PaymentReconciliation"
                ],
                "summary": "Read specific version of a PaymentReconciliation resource",
                "operationId": "vreadPaymentReconciliation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read PaymentReconciliation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentReconciliation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PaymentReconciliation/{id}": {
            "get": {
                "tags": [
                    "PaymentReconciliation"
                ],
                "summary": "Read a PaymentReconciliation resource",
                "operationId": "readPaymentReconciliation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read PaymentReconciliation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentReconciliation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "PaymentReconciliation"
                ],
                "summary": "Update an existing PaymentReconciliation resource",
                "operationId": "updatePaymentReconciliation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update PaymentReconciliation operation successful"
                    },
                    "201": {
                        "description": "Create PaymentReconciliation operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/PaymentReconciliation"
                }
            }
        },
        "/PaymentReconciliation/{id}/_history": {
            "get": {
                "tags": [
                    "PaymentReconciliation"
                ],
                "summary": "Return the history of a PaymentReconciliation resource",
                "operationId": "historyPaymentReconciliation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History PaymentReconciliation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Person": {
            "post": {
                "tags": [
                    "Person"
                ],
                "summary": "Create a Person resource",
                "operationId": "createPerson",
                "responses": {
                    "201": {
                        "description": "Create Person operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Person"
                }
            },
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Search for Person resources",
                "operationId": "searchPerson",
                "parameters": [
                    {
                        "name": "address",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-city",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-country",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-postalcode",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-state",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-use",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "birthdate",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): The patient's date of birth\r\n* [Person](person.html): The person's date of birth\r\n* [RelatedPerson](relatedperson.html): The Related Person's date of birth\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): Gender of the patient\r\n* [Person](person.html): The gender of the person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phonetic",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "telecom",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n* [Person](person.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "A person Identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "link",
                        "description": "Any link has this Patient, Person, RelatedPerson or Practitioner reference",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organization",
                        "description": "The organization at which this person record is being managed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The Person links to this Patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "practitioner",
                        "description": "The Person links to this Practitioner",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "relatedperson",
                        "description": "The Person links to this RelatedPerson",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Person operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Person/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Read specific version of a Person resource",
                "operationId": "vreadPerson",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Person operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Person/{id}": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Read a Person resource",
                "operationId": "readPerson",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Person operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Person"
                ],
                "summary": "Update an existing Person resource",
                "operationId": "updatePerson",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Person operation successful"
                    },
                    "201": {
                        "description": "Create Person operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Person"
                }
            }
        },
        "/Person/{id}/_history": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Return the history of a Person resource",
                "operationId": "historyPerson",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Person operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PlanDefinition": {
            "post": {
                "tags": [
                    "PlanDefinition"
                ],
                "summary": "Create a PlanDefinition resource",
                "operationId": "createPlanDefinition",
                "responses": {
                    "201": {
                        "description": "Create PlanDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/PlanDefinition"
                }
            },
            "get": {
                "tags": [
                    "PlanDefinition"
                ],
                "summary": "Search for PlanDefinition resources",
                "operationId": "searchPlanDefinition",
                "parameters": [
                    {
                        "name": "composed-of",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The plan definition publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definition",
                        "description": "Activity or plan definitions used by plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depends-on",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the plan definition is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "predecessor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic",
                        "description": "Topics associated with the module",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "The type of artifact the plan (e.g. order-set, eca-rule, protocol)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the plan definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search PlanDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PlanDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "PlanDefinition"
                ],
                "summary": "Read specific version of a PlanDefinition resource",
                "operationId": "vreadPlanDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read PlanDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PlanDefinition/{id}": {
            "get": {
                "tags": [
                    "PlanDefinition"
                ],
                "summary": "Read a PlanDefinition resource",
                "operationId": "readPlanDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read PlanDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "PlanDefinition"
                ],
                "summary": "Update an existing PlanDefinition resource",
                "operationId": "updatePlanDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update PlanDefinition operation successful"
                    },
                    "201": {
                        "description": "Create PlanDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/PlanDefinition"
                }
            }
        },
        "/PlanDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "PlanDefinition"
                ],
                "summary": "Return the history of a PlanDefinition resource",
                "operationId": "historyPlanDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History PlanDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Practitioner": {
            "post": {
                "tags": [
                    "Practitioner"
                ],
                "summary": "Create a Practitioner resource",
                "operationId": "createPractitioner",
                "responses": {
                    "201": {
                        "description": "Create Practitioner operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Practitioner"
                }
            },
            "get": {
                "tags": [
                    "Practitioner"
                ],
                "summary": "Search for Practitioner resources",
                "operationId": "searchPractitioner",
                "parameters": [
                    {
                        "name": "address",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-city",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-country",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-postalcode",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-state",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-use",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "family",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A portion of the family name of the patient\r\n* [Practitioner](practitioner.html): A portion of the family name\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): Gender of the patient\r\n* [Person](person.html): The gender of the person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "given",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A portion of the given name of the patient\r\n* [Practitioner](practitioner.html): A portion of the given name\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phonetic",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "telecom",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n* [Person](person.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "active",
                        "description": "Whether the practitioner record is active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "communication",
                        "description": "One of the languages that the practitioner can communicate with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "A practitioner's Identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Practitioner operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Practitioner/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Practitioner"
                ],
                "summary": "Read specific version of a Practitioner resource",
                "operationId": "vreadPractitioner",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Practitioner operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Practitioner"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Practitioner/{id}": {
            "get": {
                "tags": [
                    "Practitioner"
                ],
                "summary": "Read a Practitioner resource",
                "operationId": "readPractitioner",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Practitioner operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Practitioner"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Practitioner"
                ],
                "summary": "Update an existing Practitioner resource",
                "operationId": "updatePractitioner",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Practitioner operation successful"
                    },
                    "201": {
                        "description": "Create Practitioner operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Practitioner"
                }
            }
        },
        "/Practitioner/{id}/_history": {
            "get": {
                "tags": [
                    "Practitioner"
                ],
                "summary": "Return the history of a Practitioner resource",
                "operationId": "historyPractitioner",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Practitioner operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PractitionerRole": {
            "post": {
                "tags": [
                    "PractitionerRole"
                ],
                "summary": "Create a PractitionerRole resource",
                "operationId": "createPractitionerRole",
                "responses": {
                    "201": {
                        "description": "Create PractitionerRole operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/PractitionerRole"
                }
            },
            "get": {
                "tags": [
                    "PractitionerRole"
                ],
                "summary": "Search for PractitionerRole resources",
                "operationId": "searchPractitionerRole",
                "parameters": [
                    {
                        "name": "email",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "telecom",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n* [Person](person.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "active",
                        "description": "Whether this practitioner role record is in active use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The period during which the practitioner is authorized to perform in these role(s)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint",
                        "description": "Technical endpoints providing access to services operated for the practitioner with this role",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "A practitioner's Identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "One of the locations at which this practitioner provides care",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organization",
                        "description": "The identity of the organization the practitioner represents / acts on behalf of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "practitioner",
                        "description": "Practitioner that is able to provide the defined services for the organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "description": "The practitioner can perform this role at for the organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service",
                        "description": "The list of healthcare services that this worker provides for this role's Organization/Location(s)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specialty",
                        "description": "The practitioner has this specialty at an organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search PractitionerRole operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PractitionerRole/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "PractitionerRole"
                ],
                "summary": "Read specific version of a PractitionerRole resource",
                "operationId": "vreadPractitionerRole",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read PractitionerRole operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PractitionerRole"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PractitionerRole/{id}": {
            "get": {
                "tags": [
                    "PractitionerRole"
                ],
                "summary": "Read a PractitionerRole resource",
                "operationId": "readPractitionerRole",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read PractitionerRole operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PractitionerRole"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "PractitionerRole"
                ],
                "summary": "Update an existing PractitionerRole resource",
                "operationId": "updatePractitionerRole",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update PractitionerRole operation successful"
                    },
                    "201": {
                        "description": "Create PractitionerRole operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/PractitionerRole"
                }
            }
        },
        "/PractitionerRole/{id}/_history": {
            "get": {
                "tags": [
                    "PractitionerRole"
                ],
                "summary": "Return the history of a PractitionerRole resource",
                "operationId": "historyPractitionerRole",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History PractitionerRole operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure": {
            "post": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Create a Procedure resource",
                "operationId": "createProcedure",
                "responses": {
                    "201": {
                        "description": "Create Procedure operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Procedure"
                }
            },
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Search for Procedure resources",
                "operationId": "searchProcedure",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "A request for this procedure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Classification of the procedure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-canonical",
                        "description": "Instantiates FHIR protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-uri",
                        "description": "Instantiates external protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "Where the procedure happened",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "part-of",
                        "description": "Part of referenced event",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "The reference to the practitioner",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason-code",
                        "description": "Coded reason procedure performed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reason-reference",
                        "description": "The justification that the procedure was performed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "preparation | in-progress | not-done | suspended | aborted | completed | entered-in-error | unknown",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Search by subject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Procedure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Read specific version of a Procedure resource",
                "operationId": "vreadProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Procedure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Procedure"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure/{id}": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Read a Procedure resource",
                "operationId": "readProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Procedure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Procedure"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Update an existing Procedure resource",
                "operationId": "updateProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Procedure operation successful"
                    },
                    "201": {
                        "description": "Create Procedure operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Procedure"
                }
            }
        },
        "/Procedure/{id}/_history": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Return the history of a Procedure resource",
                "operationId": "historyProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Procedure operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Provenance": {
            "post": {
                "tags": [
                    "Provenance"
                ],
                "summary": "Create a Provenance resource",
                "operationId": "createProvenance",
                "responses": {
                    "201": {
                        "description": "Create Provenance operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Provenance"
                }
            },
            "get": {
                "tags": [
                    "Provenance"
                ],
                "summary": "Search for Provenance resources",
                "operationId": "searchProvenance",
                "parameters": [
                    {
                        "name": "agent",
                        "description": "Who participated",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agent-role",
                        "description": "What the agents role was",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agent-type",
                        "description": "How the agent participated",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity",
                        "description": "Identity of entity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "Where the activity occurred, if relevant",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Target Reference(s) (usually version specific)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recorded",
                        "description": "When the activity was recorded / updated",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signature-type",
                        "description": "Indication of the reason the entity signed the object(s)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target",
                        "description": "Target Reference(s) (usually version specific)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "when",
                        "description": "When the activity occurred",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Provenance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Provenance/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Provenance"
                ],
                "summary": "Read specific version of a Provenance resource",
                "operationId": "vreadProvenance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Provenance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provenance"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Provenance/{id}": {
            "get": {
                "tags": [
                    "Provenance"
                ],
                "summary": "Read a Provenance resource",
                "operationId": "readProvenance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Provenance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provenance"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Provenance"
                ],
                "summary": "Update an existing Provenance resource",
                "operationId": "updateProvenance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Provenance operation successful"
                    },
                    "201": {
                        "description": "Create Provenance operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Provenance"
                }
            }
        },
        "/Provenance/{id}/_history": {
            "get": {
                "tags": [
                    "Provenance"
                ],
                "summary": "Return the history of a Provenance resource",
                "operationId": "historyProvenance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Provenance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Questionnaire": {
            "post": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Create a Questionnaire resource",
                "operationId": "createQuestionnaire",
                "responses": {
                    "201": {
                        "description": "Create Questionnaire operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Questionnaire"
                }
            },
            "get": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Search for Questionnaire resources",
                "operationId": "searchQuestionnaire",
                "parameters": [
                    {
                        "name": "code",
                        "description": "A code that corresponds to one of its items in the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The questionnaire publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definition",
                        "description": "ElementDefinition - details for the item",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the questionnaire is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject-type",
                        "description": "Resource that can be subject of QuestionnaireResponse",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the questionnaire",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Questionnaire operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Questionnaire/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Read specific version of a Questionnaire resource",
                "operationId": "vreadQuestionnaire",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Questionnaire operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Questionnaire"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Questionnaire/{id}": {
            "get": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Read a Questionnaire resource",
                "operationId": "readQuestionnaire",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Questionnaire operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Questionnaire"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Update an existing Questionnaire resource",
                "operationId": "updateQuestionnaire",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Questionnaire operation successful"
                    },
                    "201": {
                        "description": "Create Questionnaire operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Questionnaire"
                }
            }
        },
        "/Questionnaire/{id}/_history": {
            "get": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Return the history of a Questionnaire resource",
                "operationId": "historyQuestionnaire",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Questionnaire operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/QuestionnaireResponse": {
            "post": {
                "tags": [
                    "QuestionnaireResponse"
                ],
                "summary": "Create a QuestionnaireResponse resource",
                "operationId": "createQuestionnaireResponse",
                "responses": {
                    "201": {
                        "description": "Create QuestionnaireResponse operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/QuestionnaireResponse"
                }
            },
            "get": {
                "tags": [
                    "QuestionnaireResponse"
                ],
                "summary": "Search for QuestionnaireResponse resources",
                "operationId": "searchQuestionnaireResponse",
                "parameters": [
                    {
                        "name": "author",
                        "description": "The author of the questionnaire response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authored",
                        "description": "When the questionnaire response was last changed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "Plan/proposal/order fulfilled by this questionnaire response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounter associated with the questionnaire response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The unique identifier for the questionnaire response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "part-of",
                        "description": "Procedure or observation this questionnaire response was performed as a part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The patient that is the subject of the questionnaire response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "questionnaire",
                        "description": "The questionnaire the answers are provided for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "The individual providing the information reflected in the questionnaire respose",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the questionnaire response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The subject of the questionnaire response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search QuestionnaireResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/QuestionnaireResponse/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "QuestionnaireResponse"
                ],
                "summary": "Read specific version of a QuestionnaireResponse resource",
                "operationId": "vreadQuestionnaireResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read QuestionnaireResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionnaireResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/QuestionnaireResponse/{id}": {
            "get": {
                "tags": [
                    "QuestionnaireResponse"
                ],
                "summary": "Read a QuestionnaireResponse resource",
                "operationId": "readQuestionnaireResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read QuestionnaireResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionnaireResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "QuestionnaireResponse"
                ],
                "summary": "Update an existing QuestionnaireResponse resource",
                "operationId": "updateQuestionnaireResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update QuestionnaireResponse operation successful"
                    },
                    "201": {
                        "description": "Create QuestionnaireResponse operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/QuestionnaireResponse"
                }
            }
        },
        "/QuestionnaireResponse/{id}/_history": {
            "get": {
                "tags": [
                    "QuestionnaireResponse"
                ],
                "summary": "Return the history of a QuestionnaireResponse resource",
                "operationId": "historyQuestionnaireResponse",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History QuestionnaireResponse operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RelatedPerson": {
            "post": {
                "tags": [
                    "RelatedPerson"
                ],
                "summary": "Create a RelatedPerson resource",
                "operationId": "createRelatedPerson",
                "responses": {
                    "201": {
                        "description": "Create RelatedPerson operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RelatedPerson"
                }
            },
            "get": {
                "tags": [
                    "RelatedPerson"
                ],
                "summary": "Search for RelatedPerson resources",
                "operationId": "searchRelatedPerson",
                "parameters": [
                    {
                        "name": "address",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-city",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-country",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-postalcode",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-state",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-use",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "birthdate",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): The patient's date of birth\r\n* [Person](person.html): The person's date of birth\r\n* [RelatedPerson](relatedperson.html): The Related Person's date of birth\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): Gender of the patient\r\n* [Person](person.html): The gender of the person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phonetic",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "telecom",
                        "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n* [Person](person.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "active",
                        "description": "Indicates if the related person record is active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "An Identifier of the RelatedPerson",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The patient this related person is related to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "relationship",
                        "description": "The relationship between the patient and the relatedperson",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search RelatedPerson operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RelatedPerson/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "RelatedPerson"
                ],
                "summary": "Read specific version of a RelatedPerson resource",
                "operationId": "vreadRelatedPerson",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read RelatedPerson operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelatedPerson"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RelatedPerson/{id}": {
            "get": {
                "tags": [
                    "RelatedPerson"
                ],
                "summary": "Read a RelatedPerson resource",
                "operationId": "readRelatedPerson",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read RelatedPerson operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelatedPerson"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "RelatedPerson"
                ],
                "summary": "Update an existing RelatedPerson resource",
                "operationId": "updateRelatedPerson",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update RelatedPerson operation successful"
                    },
                    "201": {
                        "description": "Create RelatedPerson operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RelatedPerson"
                }
            }
        },
        "/RelatedPerson/{id}/_history": {
            "get": {
                "tags": [
                    "RelatedPerson"
                ],
                "summary": "Return the history of a RelatedPerson resource",
                "operationId": "historyRelatedPerson",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History RelatedPerson operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RequestGroup": {
            "post": {
                "tags": [
                    "RequestGroup"
                ],
                "summary": "Create a RequestGroup resource",
                "operationId": "createRequestGroup",
                "responses": {
                    "201": {
                        "description": "Create RequestGroup operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RequestGroup"
                }
            },
            "get": {
                "tags": [
                    "RequestGroup"
                ],
                "summary": "Search for RequestGroup resources",
                "operationId": "searchRequestGroup",
                "parameters": [
                    {
                        "name": "author",
                        "description": "The author of the request group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authored",
                        "description": "The date the request group was authored",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "The code of the request group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "The encounter the request group applies to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group-identifier",
                        "description": "The group identifier for the request group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifiers for the request group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-canonical",
                        "description": "The FHIR-based definition from which the request group is realized",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-uri",
                        "description": "The external definition from which the request group is realized",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intent",
                        "description": "The intent of the request group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participant",
                        "description": "The participant in the requests in the group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The identity of a patient to search for request groups",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "description": "The priority of the request group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the request group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The subject that the request group is about",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search RequestGroup operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RequestGroup/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "RequestGroup"
                ],
                "summary": "Read specific version of a RequestGroup resource",
                "operationId": "vreadRequestGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read RequestGroup operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestGroup"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RequestGroup/{id}": {
            "get": {
                "tags": [
                    "RequestGroup"
                ],
                "summary": "Read a RequestGroup resource",
                "operationId": "readRequestGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read RequestGroup operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestGroup"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "RequestGroup"
                ],
                "summary": "Update an existing RequestGroup resource",
                "operationId": "updateRequestGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update RequestGroup operation successful"
                    },
                    "201": {
                        "description": "Create RequestGroup operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RequestGroup"
                }
            }
        },
        "/RequestGroup/{id}/_history": {
            "get": {
                "tags": [
                    "RequestGroup"
                ],
                "summary": "Return the history of a RequestGroup resource",
                "operationId": "historyRequestGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History RequestGroup operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchDefinition": {
            "post": {
                "tags": [
                    "ResearchDefinition"
                ],
                "summary": "Create a ResearchDefinition resource",
                "operationId": "createResearchDefinition",
                "responses": {
                    "201": {
                        "description": "Create ResearchDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResearchDefinition"
                }
            },
            "get": {
                "tags": [
                    "ResearchDefinition"
                ],
                "summary": "Search for ResearchDefinition resources",
                "operationId": "searchResearchDefinition",
                "parameters": [
                    {
                        "name": "composed-of",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The research definition publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depends-on",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the research definition is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "predecessor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic",
                        "description": "Topics associated with the ResearchDefinition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the research definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ResearchDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ResearchDefinition"
                ],
                "summary": "Read specific version of a ResearchDefinition resource",
                "operationId": "vreadResearchDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ResearchDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResearchDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchDefinition/{id}": {
            "get": {
                "tags": [
                    "ResearchDefinition"
                ],
                "summary": "Read a ResearchDefinition resource",
                "operationId": "readResearchDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ResearchDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResearchDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ResearchDefinition"
                ],
                "summary": "Update an existing ResearchDefinition resource",
                "operationId": "updateResearchDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ResearchDefinition operation successful"
                    },
                    "201": {
                        "description": "Create ResearchDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResearchDefinition"
                }
            }
        },
        "/ResearchDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "ResearchDefinition"
                ],
                "summary": "Return the history of a ResearchDefinition resource",
                "operationId": "historyResearchDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ResearchDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchElementDefinition": {
            "post": {
                "tags": [
                    "ResearchElementDefinition"
                ],
                "summary": "Create a ResearchElementDefinition resource",
                "operationId": "createResearchElementDefinition",
                "responses": {
                    "201": {
                        "description": "Create ResearchElementDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResearchElementDefinition"
                }
            },
            "get": {
                "tags": [
                    "ResearchElementDefinition"
                ],
                "summary": "Search for ResearchElementDefinition resources",
                "operationId": "searchResearchElementDefinition",
                "parameters": [
                    {
                        "name": "composed-of",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "description": "A use context assigned to the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The research element definition publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depends-on",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the research element definition is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "predecessor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successor",
                        "description": "What resource is being referenced",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic",
                        "description": "Topics associated with the ResearchElementDefinition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the research element definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ResearchElementDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchElementDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ResearchElementDefinition"
                ],
                "summary": "Read specific version of a ResearchElementDefinition resource",
                "operationId": "vreadResearchElementDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ResearchElementDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResearchElementDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchElementDefinition/{id}": {
            "get": {
                "tags": [
                    "ResearchElementDefinition"
                ],
                "summary": "Read a ResearchElementDefinition resource",
                "operationId": "readResearchElementDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ResearchElementDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResearchElementDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ResearchElementDefinition"
                ],
                "summary": "Update an existing ResearchElementDefinition resource",
                "operationId": "updateResearchElementDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ResearchElementDefinition operation successful"
                    },
                    "201": {
                        "description": "Create ResearchElementDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResearchElementDefinition"
                }
            }
        },
        "/ResearchElementDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "ResearchElementDefinition"
                ],
                "summary": "Return the history of a ResearchElementDefinition resource",
                "operationId": "historyResearchElementDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ResearchElementDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchStudy": {
            "post": {
                "tags": [
                    "ResearchStudy"
                ],
                "summary": "Create a ResearchStudy resource",
                "operationId": "createResearchStudy",
                "responses": {
                    "201": {
                        "description": "Create ResearchStudy operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResearchStudy"
                }
            },
            "get": {
                "tags": [
                    "ResearchStudy"
                ],
                "summary": "Search for ResearchStudy resources",
                "operationId": "searchResearchStudy",
                "parameters": [
                    {
                        "name": "category",
                        "description": "Classifications for the study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "When the study began and ended",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "focus",
                        "description": "Drugs, devices, etc. under study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Business Identifier for study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "keyword",
                        "description": "Used to search for the study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "Geographic region(s) for study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partof",
                        "description": "Part of larger study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "principalinvestigator",
                        "description": "Researcher who oversees multiple aspects of the study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "protocol",
                        "description": "Steps followed in executing study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site",
                        "description": "Facility where study activities are conducted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sponsor",
                        "description": "Organization that initiates and is legally responsible for the study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "active | administratively-completed | approved | closed-to-accrual | closed-to-accrual-and-intervention | completed | disapproved | in-review | temporarily-closed-to-accrual | temporarily-closed-to-accrual-and-intervention | withdrawn",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Name for this study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ResearchStudy operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchStudy/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ResearchStudy"
                ],
                "summary": "Read specific version of a ResearchStudy resource",
                "operationId": "vreadResearchStudy",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ResearchStudy operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResearchStudy"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchStudy/{id}": {
            "get": {
                "tags": [
                    "ResearchStudy"
                ],
                "summary": "Read a ResearchStudy resource",
                "operationId": "readResearchStudy",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ResearchStudy operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResearchStudy"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ResearchStudy"
                ],
                "summary": "Update an existing ResearchStudy resource",
                "operationId": "updateResearchStudy",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ResearchStudy operation successful"
                    },
                    "201": {
                        "description": "Create ResearchStudy operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResearchStudy"
                }
            }
        },
        "/ResearchStudy/{id}/_history": {
            "get": {
                "tags": [
                    "ResearchStudy"
                ],
                "summary": "Return the history of a ResearchStudy resource",
                "operationId": "historyResearchStudy",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ResearchStudy operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchSubject": {
            "post": {
                "tags": [
                    "ResearchSubject"
                ],
                "summary": "Create a ResearchSubject resource",
                "operationId": "createResearchSubject",
                "responses": {
                    "201": {
                        "description": "Create ResearchSubject operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResearchSubject"
                }
            },
            "get": {
                "tags": [
                    "ResearchSubject"
                ],
                "summary": "Search for ResearchSubject resources",
                "operationId": "searchResearchSubject",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Start and end of participation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Business Identifier for research subject in a study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "individual",
                        "description": "Who is part of study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Who is part of study",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "study",
                        "description": "Study subject is part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ResearchSubject operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchSubject/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ResearchSubject"
                ],
                "summary": "Read specific version of a ResearchSubject resource",
                "operationId": "vreadResearchSubject",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ResearchSubject operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResearchSubject"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResearchSubject/{id}": {
            "get": {
                "tags": [
                    "ResearchSubject"
                ],
                "summary": "Read a ResearchSubject resource",
                "operationId": "readResearchSubject",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ResearchSubject operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResearchSubject"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ResearchSubject"
                ],
                "summary": "Update an existing ResearchSubject resource",
                "operationId": "updateResearchSubject",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ResearchSubject operation successful"
                    },
                    "201": {
                        "description": "Create ResearchSubject operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResearchSubject"
                }
            }
        },
        "/ResearchSubject/{id}/_history": {
            "get": {
                "tags": [
                    "ResearchSubject"
                ],
                "summary": "Return the history of a ResearchSubject resource",
                "operationId": "historyResearchSubject",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ResearchSubject operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RiskAssessment": {
            "post": {
                "tags": [
                    "RiskAssessment"
                ],
                "summary": "Create a RiskAssessment resource",
                "operationId": "createRiskAssessment",
                "responses": {
                    "201": {
                        "description": "Create RiskAssessment operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RiskAssessment"
                }
            },
            "get": {
                "tags": [
                    "RiskAssessment"
                ],
                "summary": "Search for RiskAssessment resources",
                "operationId": "searchRiskAssessment",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "condition",
                        "description": "Condition assessed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "description": "Evaluation mechanism",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "Who did assessment?",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "probability",
                        "description": "Likelihood of specified outcome",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "risk",
                        "description": "Likelihood of specified outcome as a qualitative value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Who/what does assessment apply to?",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search RiskAssessment operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RiskAssessment/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "RiskAssessment"
                ],
                "summary": "Read specific version of a RiskAssessment resource",
                "operationId": "vreadRiskAssessment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read RiskAssessment operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RiskAssessment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RiskAssessment/{id}": {
            "get": {
                "tags": [
                    "RiskAssessment"
                ],
                "summary": "Read a RiskAssessment resource",
                "operationId": "readRiskAssessment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read RiskAssessment operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RiskAssessment"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "RiskAssessment"
                ],
                "summary": "Update an existing RiskAssessment resource",
                "operationId": "updateRiskAssessment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update RiskAssessment operation successful"
                    },
                    "201": {
                        "description": "Create RiskAssessment operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RiskAssessment"
                }
            }
        },
        "/RiskAssessment/{id}/_history": {
            "get": {
                "tags": [
                    "RiskAssessment"
                ],
                "summary": "Return the history of a RiskAssessment resource",
                "operationId": "historyRiskAssessment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History RiskAssessment operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RiskEvidenceSynthesis": {
            "post": {
                "tags": [
                    "RiskEvidenceSynthesis"
                ],
                "summary": "Create a RiskEvidenceSynthesis resource",
                "operationId": "createRiskEvidenceSynthesis",
                "responses": {
                    "201": {
                        "description": "Create RiskEvidenceSynthesis operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RiskEvidenceSynthesis"
                }
            },
            "get": {
                "tags": [
                    "RiskEvidenceSynthesis"
                ],
                "summary": "Search for RiskEvidenceSynthesis resources",
                "operationId": "searchRiskEvidenceSynthesis",
                "parameters": [
                    {
                        "name": "context",
                        "description": "A use context assigned to the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The risk evidence synthesis publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective",
                        "description": "The time during which the risk evidence synthesis is intended to be in use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the risk evidence synthesis",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search RiskEvidenceSynthesis operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RiskEvidenceSynthesis/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "RiskEvidenceSynthesis"
                ],
                "summary": "Read specific version of a RiskEvidenceSynthesis resource",
                "operationId": "vreadRiskEvidenceSynthesis",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read RiskEvidenceSynthesis operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RiskEvidenceSynthesis"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RiskEvidenceSynthesis/{id}": {
            "get": {
                "tags": [
                    "RiskEvidenceSynthesis"
                ],
                "summary": "Read a RiskEvidenceSynthesis resource",
                "operationId": "readRiskEvidenceSynthesis",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read RiskEvidenceSynthesis operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RiskEvidenceSynthesis"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "RiskEvidenceSynthesis"
                ],
                "summary": "Update an existing RiskEvidenceSynthesis resource",
                "operationId": "updateRiskEvidenceSynthesis",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update RiskEvidenceSynthesis operation successful"
                    },
                    "201": {
                        "description": "Create RiskEvidenceSynthesis operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RiskEvidenceSynthesis"
                }
            }
        },
        "/RiskEvidenceSynthesis/{id}/_history": {
            "get": {
                "tags": [
                    "RiskEvidenceSynthesis"
                ],
                "summary": "Return the history of a RiskEvidenceSynthesis resource",
                "operationId": "historyRiskEvidenceSynthesis",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History RiskEvidenceSynthesis operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Schedule": {
            "post": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Create a Schedule resource",
                "operationId": "createSchedule",
                "responses": {
                    "201": {
                        "description": "Create Schedule operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Schedule"
                }
            },
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Search for Schedule resources",
                "operationId": "searchSchedule",
                "parameters": [
                    {
                        "name": "active",
                        "description": "Is the schedule in active use",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "actor",
                        "description": "The individual(HealthcareService, Practitioner, Location, ...) to find a Schedule for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Search for Schedule resources that have a period that contains this date specified",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "A Schedule Identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service-category",
                        "description": "High-level category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service-type",
                        "description": "The type of appointments that can be booked into associated slot(s)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specialty",
                        "description": "Type of specialty needed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Schedule operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Schedule/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Read specific version of a Schedule resource",
                "operationId": "vreadSchedule",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Schedule operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Schedule"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Schedule/{id}": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Read a Schedule resource",
                "operationId": "readSchedule",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Schedule operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Schedule"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Update an existing Schedule resource",
                "operationId": "updateSchedule",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Schedule operation successful"
                    },
                    "201": {
                        "description": "Create Schedule operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Schedule"
                }
            }
        },
        "/Schedule/{id}/_history": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Return the history of a Schedule resource",
                "operationId": "historySchedule",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Schedule operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SearchParameter": {
            "post": {
                "tags": [
                    "SearchParameter"
                ],
                "summary": "Create a SearchParameter resource",
                "operationId": "createSearchParameter",
                "responses": {
                    "201": {
                        "description": "Create SearchParameter operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SearchParameter"
                }
            },
            "get": {
                "tags": [
                    "SearchParameter"
                ],
                "summary": "Search for SearchParameter resources",
                "operationId": "searchSearchParameter",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base",
                        "description": "The resource type(s) this search parameter applies to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "Code used in URL",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "component",
                        "description": "Defines how the part works",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived-from",
                        "description": "Original definition for the search parameter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target",
                        "description": "Types of resource (if a resource reference)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "number | date | string | token | reference | composite | quantity | uri | special",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search SearchParameter operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SearchParameter/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "SearchParameter"
                ],
                "summary": "Read specific version of a SearchParameter resource",
                "operationId": "vreadSearchParameter",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read SearchParameter operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchParameter"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SearchParameter/{id}": {
            "get": {
                "tags": [
                    "SearchParameter"
                ],
                "summary": "Read a SearchParameter resource",
                "operationId": "readSearchParameter",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read SearchParameter operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchParameter"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SearchParameter"
                ],
                "summary": "Update an existing SearchParameter resource",
                "operationId": "updateSearchParameter",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update SearchParameter operation successful"
                    },
                    "201": {
                        "description": "Create SearchParameter operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SearchParameter"
                }
            }
        },
        "/SearchParameter/{id}/_history": {
            "get": {
                "tags": [
                    "SearchParameter"
                ],
                "summary": "Return the history of a SearchParameter resource",
                "operationId": "historySearchParameter",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History SearchParameter operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ServiceRequest": {
            "post": {
                "tags": [
                    "ServiceRequest"
                ],
                "summary": "Create a ServiceRequest resource",
                "operationId": "createServiceRequest",
                "responses": {
                    "201": {
                        "description": "Create ServiceRequest operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ServiceRequest"
                }
            },
            "get": {
                "tags": [
                    "ServiceRequest"
                ],
                "summary": "Search for ServiceRequest resources",
                "operationId": "searchServiceRequest",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authored",
                        "description": "Date request signed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "What request fulfills",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "body-site",
                        "description": "Where procedure is going to be done",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "Classification of service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-canonical",
                        "description": "Instantiates FHIR protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instantiates-uri",
                        "description": "Instantiates external protocol or definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intent",
                        "description": "proposal | plan | order +",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "occurrence",
                        "description": "When service should occur",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "Requested performer",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer-type",
                        "description": "Performer role",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "description": "routine | urgent | asap | stat",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "replaces",
                        "description": "What request replaces",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requester",
                        "description": "Who/what is requesting service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requisition",
                        "description": "Composite Request ID",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specimen",
                        "description": "Specimen to be tested",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "draft | active | suspended | completed | entered-in-error | cancelled",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Search by subject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ServiceRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ServiceRequest/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ServiceRequest"
                ],
                "summary": "Read specific version of a ServiceRequest resource",
                "operationId": "vreadServiceRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ServiceRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRequest"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ServiceRequest/{id}": {
            "get": {
                "tags": [
                    "ServiceRequest"
                ],
                "summary": "Read a ServiceRequest resource",
                "operationId": "readServiceRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ServiceRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRequest"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ServiceRequest"
                ],
                "summary": "Update an existing ServiceRequest resource",
                "operationId": "updateServiceRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ServiceRequest operation successful"
                    },
                    "201": {
                        "description": "Create ServiceRequest operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ServiceRequest"
                }
            }
        },
        "/ServiceRequest/{id}/_history": {
            "get": {
                "tags": [
                    "ServiceRequest"
                ],
                "summary": "Return the history of a ServiceRequest resource",
                "operationId": "historyServiceRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ServiceRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Slot": {
            "post": {
                "tags": [
                    "Slot"
                ],
                "summary": "Create a Slot resource",
                "operationId": "createSlot",
                "responses": {
                    "201": {
                        "description": "Create Slot operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Slot"
                }
            },
            "get": {
                "tags": [
                    "Slot"
                ],
                "summary": "Search for Slot resources",
                "operationId": "searchSlot",
                "parameters": [
                    {
                        "name": "appointment-type",
                        "description": "The style of appointment or patient that may be booked in the slot (not service type)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "A Slot Identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "schedule",
                        "description": "The Schedule Resource that we are seeking a slot within",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service-category",
                        "description": "A broad categorization of the service that is to be performed during this appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service-type",
                        "description": "The type of appointments that can be booked into the slot",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specialty",
                        "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "description": "Appointment date/time.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The free/busy status of the appointment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Slot operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Slot/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Slot"
                ],
                "summary": "Read specific version of a Slot resource",
                "operationId": "vreadSlot",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Slot operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slot"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Slot/{id}": {
            "get": {
                "tags": [
                    "Slot"
                ],
                "summary": "Read a Slot resource",
                "operationId": "readSlot",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Slot operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slot"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Slot"
                ],
                "summary": "Update an existing Slot resource",
                "operationId": "updateSlot",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Slot operation successful"
                    },
                    "201": {
                        "description": "Create Slot operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Slot"
                }
            }
        },
        "/Slot/{id}/_history": {
            "get": {
                "tags": [
                    "Slot"
                ],
                "summary": "Return the history of a Slot resource",
                "operationId": "historySlot",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Slot operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Specimen": {
            "post": {
                "tags": [
                    "Specimen"
                ],
                "summary": "Create a Specimen resource",
                "operationId": "createSpecimen",
                "responses": {
                    "201": {
                        "description": "Create Specimen operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Specimen"
                }
            },
            "get": {
                "tags": [
                    "Specimen"
                ],
                "summary": "Search for Specimen resources",
                "operationId": "searchSpecimen",
                "parameters": [
                    {
                        "name": "accession",
                        "description": "The accession number associated with the specimen",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bodysite",
                        "description": "The code for the body site from where the specimen originated",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collected",
                        "description": "The date the specimen was collected",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collector",
                        "description": "Who collected the specimen",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "container",
                        "description": "The kind of specimen container",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "container-id",
                        "description": "The unique identifier associated with the specimen container",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The unique identifier associated with the specimen",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent",
                        "description": "The parent of the specimen",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "The patient the specimen comes from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "available | unavailable | unsatisfactory | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The subject of the specimen",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "The specimen type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Specimen operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Specimen/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Specimen"
                ],
                "summary": "Read specific version of a Specimen resource",
                "operationId": "vreadSpecimen",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Specimen operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specimen"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Specimen/{id}": {
            "get": {
                "tags": [
                    "Specimen"
                ],
                "summary": "Read a Specimen resource",
                "operationId": "readSpecimen",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Specimen operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specimen"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Specimen"
                ],
                "summary": "Update an existing Specimen resource",
                "operationId": "updateSpecimen",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Specimen operation successful"
                    },
                    "201": {
                        "description": "Create Specimen operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Specimen"
                }
            }
        },
        "/Specimen/{id}/_history": {
            "get": {
                "tags": [
                    "Specimen"
                ],
                "summary": "Return the history of a Specimen resource",
                "operationId": "historySpecimen",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Specimen operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SpecimenDefinition": {
            "post": {
                "tags": [
                    "SpecimenDefinition"
                ],
                "summary": "Create a SpecimenDefinition resource",
                "operationId": "createSpecimenDefinition",
                "responses": {
                    "201": {
                        "description": "Create SpecimenDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SpecimenDefinition"
                }
            },
            "get": {
                "tags": [
                    "SpecimenDefinition"
                ],
                "summary": "Search for SpecimenDefinition resources",
                "operationId": "searchSpecimenDefinition",
                "parameters": [
                    {
                        "name": "container",
                        "description": "The type of specimen conditioned in container expected by the lab",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The unique identifier associated with the specimen",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "The type of collected specimen",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search SpecimenDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SpecimenDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "SpecimenDefinition"
                ],
                "summary": "Read specific version of a SpecimenDefinition resource",
                "operationId": "vreadSpecimenDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read SpecimenDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecimenDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SpecimenDefinition/{id}": {
            "get": {
                "tags": [
                    "SpecimenDefinition"
                ],
                "summary": "Read a SpecimenDefinition resource",
                "operationId": "readSpecimenDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read SpecimenDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecimenDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SpecimenDefinition"
                ],
                "summary": "Update an existing SpecimenDefinition resource",
                "operationId": "updateSpecimenDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update SpecimenDefinition operation successful"
                    },
                    "201": {
                        "description": "Create SpecimenDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SpecimenDefinition"
                }
            }
        },
        "/SpecimenDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "SpecimenDefinition"
                ],
                "summary": "Return the history of a SpecimenDefinition resource",
                "operationId": "historySpecimenDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History SpecimenDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StructureDefinition": {
            "post": {
                "tags": [
                    "StructureDefinition"
                ],
                "summary": "Create a StructureDefinition resource",
                "operationId": "createStructureDefinition",
                "responses": {
                    "201": {
                        "description": "Create StructureDefinition operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/StructureDefinition"
                }
            },
            "get": {
                "tags": [
                    "StructureDefinition"
                ],
                "summary": "Search for StructureDefinition resources",
                "operationId": "searchStructureDefinition",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [CodeSystem](codesystem.html): External identifier for the code system\r\n* [ConceptMap](conceptmap.html): External identifier for the concept map\r\n* [MessageDefinition](messagedefinition.html): External identifier for the message definition\r\n* [StructureDefinition](structuredefinition.html): External identifier for the structure definition\r\n* [StructureMap](structuremap.html): External identifier for the structure map\r\n* [ValueSet](valueset.html): External identifier for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "abstract",
                        "description": "Whether the structure is abstract",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base",
                        "description": "Definition that this type is constrained/specialized from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base-path",
                        "description": "Path that identifies the base element",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derivation",
                        "description": "specialization | constraint - How relates to base definition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "experimental",
                        "description": "For testing purposes, not real usage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ext-context",
                        "description": "The system is the URL for the context-type: e.g. http://hl7.org/fhir/extension-context-type#element|CodeableConcept.text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "keyword",
                        "description": "A code for the StructureDefinition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "kind",
                        "description": "primitive-type | complex-type | resource | logical",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "path",
                        "description": "A path that is constrained in the StructureDefinition",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Type defined or constrained by this structure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "valueset",
                        "description": "A vocabulary binding reference",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search StructureDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StructureDefinition/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "StructureDefinition"
                ],
                "summary": "Read specific version of a StructureDefinition resource",
                "operationId": "vreadStructureDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read StructureDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StructureDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StructureDefinition/{id}": {
            "get": {
                "tags": [
                    "StructureDefinition"
                ],
                "summary": "Read a StructureDefinition resource",
                "operationId": "readStructureDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read StructureDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StructureDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "StructureDefinition"
                ],
                "summary": "Update an existing StructureDefinition resource",
                "operationId": "updateStructureDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update StructureDefinition operation successful"
                    },
                    "201": {
                        "description": "Create StructureDefinition operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/StructureDefinition"
                }
            }
        },
        "/StructureDefinition/{id}/_history": {
            "get": {
                "tags": [
                    "StructureDefinition"
                ],
                "summary": "Return the history of a StructureDefinition resource",
                "operationId": "historyStructureDefinition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History StructureDefinition operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StructureMap": {
            "post": {
                "tags": [
                    "StructureMap"
                ],
                "summary": "Create a StructureMap resource",
                "operationId": "createStructureMap",
                "responses": {
                    "201": {
                        "description": "Create StructureMap operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/StructureMap"
                }
            },
            "get": {
                "tags": [
                    "StructureMap"
                ],
                "summary": "Search for StructureMap resources",
                "operationId": "searchStructureMap",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [CodeSystem](codesystem.html): External identifier for the code system\r\n* [ConceptMap](conceptmap.html): External identifier for the concept map\r\n* [MessageDefinition](messagedefinition.html): External identifier for the message definition\r\n* [StructureDefinition](structuredefinition.html): External identifier for the structure definition\r\n* [StructureMap](structuremap.html): External identifier for the structure map\r\n* [ValueSet](valueset.html): External identifier for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search StructureMap operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StructureMap/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "StructureMap"
                ],
                "summary": "Read specific version of a StructureMap resource",
                "operationId": "vreadStructureMap",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read StructureMap operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StructureMap"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StructureMap/{id}": {
            "get": {
                "tags": [
                    "StructureMap"
                ],
                "summary": "Read a StructureMap resource",
                "operationId": "readStructureMap",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read StructureMap operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StructureMap"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "StructureMap"
                ],
                "summary": "Update an existing StructureMap resource",
                "operationId": "updateStructureMap",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update StructureMap operation successful"
                    },
                    "201": {
                        "description": "Create StructureMap operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/StructureMap"
                }
            }
        },
        "/StructureMap/{id}/_history": {
            "get": {
                "tags": [
                    "StructureMap"
                ],
                "summary": "Return the history of a StructureMap resource",
                "operationId": "historyStructureMap",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History StructureMap operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Subscription": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Create a Subscription resource",
                "operationId": "createSubscription",
                "responses": {
                    "201": {
                        "description": "Create Subscription operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Subscription"
                }
            },
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Search for Subscription resources",
                "operationId": "searchSubscription",
                "parameters": [
                    {
                        "name": "contact",
                        "description": "Contact details for the subscription",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "criteria",
                        "description": "The search rules used to determine when to send a notification",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payload",
                        "description": "The mime-type of the notification payload",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current state of the subscription",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "The type of channel for the sent notifications",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that will receive the notifications",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Subscription operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Subscription/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Read specific version of a Subscription resource",
                "operationId": "vreadSubscription",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Subscription operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Subscription/{id}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Read a Subscription resource",
                "operationId": "readSubscription",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Subscription operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Update an existing Subscription resource",
                "operationId": "updateSubscription",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Subscription operation successful"
                    },
                    "201": {
                        "description": "Create Subscription operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Subscription"
                }
            }
        },
        "/Subscription/{id}/_history": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Return the history of a Subscription resource",
                "operationId": "historySubscription",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Subscription operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Substance": {
            "post": {
                "tags": [
                    "Substance"
                ],
                "summary": "Create a Substance resource",
                "operationId": "createSubstance",
                "responses": {
                    "201": {
                        "description": "Create Substance operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Substance"
                }
            },
            "get": {
                "tags": [
                    "Substance"
                ],
                "summary": "Search for Substance resources",
                "operationId": "searchSubstance",
                "parameters": [
                    {
                        "name": "category",
                        "description": "The category of the substance",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "The code of the substance or ingredient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "container-identifier",
                        "description": "Identifier of the package/container",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expiry",
                        "description": "Expiry date of package or container of substance",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Unique identifier for the substance",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quantity",
                        "description": "Amount of substance in the package",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "active | inactive | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "substance-reference",
                        "description": "A component of the substance",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Substance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Substance/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Substance"
                ],
                "summary": "Read specific version of a Substance resource",
                "operationId": "vreadSubstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Substance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Substance"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Substance/{id}": {
            "get": {
                "tags": [
                    "Substance"
                ],
                "summary": "Read a Substance resource",
                "operationId": "readSubstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Substance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Substance"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Substance"
                ],
                "summary": "Update an existing Substance resource",
                "operationId": "updateSubstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Substance operation successful"
                    },
                    "201": {
                        "description": "Create Substance operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Substance"
                }
            }
        },
        "/Substance/{id}/_history": {
            "get": {
                "tags": [
                    "Substance"
                ],
                "summary": "Return the history of a Substance resource",
                "operationId": "historySubstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Substance operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceNucleicAcid": {
            "post": {
                "tags": [
                    "SubstanceNucleicAcid"
                ],
                "summary": "Create a SubstanceNucleicAcid resource",
                "operationId": "createSubstanceNucleicAcid",
                "responses": {
                    "201": {
                        "description": "Create SubstanceNucleicAcid operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstanceNucleicAcid"
                }
            },
            "get": {
                "tags": [
                    "SubstanceNucleicAcid"
                ],
                "summary": "Search for SubstanceNucleicAcid resources",
                "operationId": "searchSubstanceNucleicAcid",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search SubstanceNucleicAcid operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceNucleicAcid/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "SubstanceNucleicAcid"
                ],
                "summary": "Read specific version of a SubstanceNucleicAcid resource",
                "operationId": "vreadSubstanceNucleicAcid",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read SubstanceNucleicAcid operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstanceNucleicAcid"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceNucleicAcid/{id}": {
            "get": {
                "tags": [
                    "SubstanceNucleicAcid"
                ],
                "summary": "Read a SubstanceNucleicAcid resource",
                "operationId": "readSubstanceNucleicAcid",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read SubstanceNucleicAcid operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstanceNucleicAcid"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SubstanceNucleicAcid"
                ],
                "summary": "Update an existing SubstanceNucleicAcid resource",
                "operationId": "updateSubstanceNucleicAcid",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update SubstanceNucleicAcid operation successful"
                    },
                    "201": {
                        "description": "Create SubstanceNucleicAcid operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstanceNucleicAcid"
                }
            }
        },
        "/SubstanceNucleicAcid/{id}/_history": {
            "get": {
                "tags": [
                    "SubstanceNucleicAcid"
                ],
                "summary": "Return the history of a SubstanceNucleicAcid resource",
                "operationId": "historySubstanceNucleicAcid",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History SubstanceNucleicAcid operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstancePolymer": {
            "post": {
                "tags": [
                    "SubstancePolymer"
                ],
                "summary": "Create a SubstancePolymer resource",
                "operationId": "createSubstancePolymer",
                "responses": {
                    "201": {
                        "description": "Create SubstancePolymer operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstancePolymer"
                }
            },
            "get": {
                "tags": [
                    "SubstancePolymer"
                ],
                "summary": "Search for SubstancePolymer resources",
                "operationId": "searchSubstancePolymer",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search SubstancePolymer operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstancePolymer/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "SubstancePolymer"
                ],
                "summary": "Read specific version of a SubstancePolymer resource",
                "operationId": "vreadSubstancePolymer",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read SubstancePolymer operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstancePolymer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstancePolymer/{id}": {
            "get": {
                "tags": [
                    "SubstancePolymer"
                ],
                "summary": "Read a SubstancePolymer resource",
                "operationId": "readSubstancePolymer",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read SubstancePolymer operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstancePolymer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SubstancePolymer"
                ],
                "summary": "Update an existing SubstancePolymer resource",
                "operationId": "updateSubstancePolymer",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update SubstancePolymer operation successful"
                    },
                    "201": {
                        "description": "Create SubstancePolymer operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstancePolymer"
                }
            }
        },
        "/SubstancePolymer/{id}/_history": {
            "get": {
                "tags": [
                    "SubstancePolymer"
                ],
                "summary": "Return the history of a SubstancePolymer resource",
                "operationId": "historySubstancePolymer",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History SubstancePolymer operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceProtein": {
            "post": {
                "tags": [
                    "SubstanceProtein"
                ],
                "summary": "Create a SubstanceProtein resource",
                "operationId": "createSubstanceProtein",
                "responses": {
                    "201": {
                        "description": "Create SubstanceProtein operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstanceProtein"
                }
            },
            "get": {
                "tags": [
                    "SubstanceProtein"
                ],
                "summary": "Search for SubstanceProtein resources",
                "operationId": "searchSubstanceProtein",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search SubstanceProtein operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceProtein/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "SubstanceProtein"
                ],
                "summary": "Read specific version of a SubstanceProtein resource",
                "operationId": "vreadSubstanceProtein",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read SubstanceProtein operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstanceProtein"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceProtein/{id}": {
            "get": {
                "tags": [
                    "SubstanceProtein"
                ],
                "summary": "Read a SubstanceProtein resource",
                "operationId": "readSubstanceProtein",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read SubstanceProtein operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstanceProtein"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SubstanceProtein"
                ],
                "summary": "Update an existing SubstanceProtein resource",
                "operationId": "updateSubstanceProtein",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update SubstanceProtein operation successful"
                    },
                    "201": {
                        "description": "Create SubstanceProtein operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstanceProtein"
                }
            }
        },
        "/SubstanceProtein/{id}/_history": {
            "get": {
                "tags": [
                    "SubstanceProtein"
                ],
                "summary": "Return the history of a SubstanceProtein resource",
                "operationId": "historySubstanceProtein",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History SubstanceProtein operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceReferenceInformation": {
            "post": {
                "tags": [
                    "SubstanceReferenceInformation"
                ],
                "summary": "Create a SubstanceReferenceInformation resource",
                "operationId": "createSubstanceReferenceInformation",
                "responses": {
                    "201": {
                        "description": "Create SubstanceReferenceInformation operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstanceReferenceInformation"
                }
            },
            "get": {
                "tags": [
                    "SubstanceReferenceInformation"
                ],
                "summary": "Search for SubstanceReferenceInformation resources",
                "operationId": "searchSubstanceReferenceInformation",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search SubstanceReferenceInformation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceReferenceInformation/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "SubstanceReferenceInformation"
                ],
                "summary": "Read specific version of a SubstanceReferenceInformation resource",
                "operationId": "vreadSubstanceReferenceInformation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read SubstanceReferenceInformation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstanceReferenceInformation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceReferenceInformation/{id}": {
            "get": {
                "tags": [
                    "SubstanceReferenceInformation"
                ],
                "summary": "Read a SubstanceReferenceInformation resource",
                "operationId": "readSubstanceReferenceInformation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read SubstanceReferenceInformation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstanceReferenceInformation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SubstanceReferenceInformation"
                ],
                "summary": "Update an existing SubstanceReferenceInformation resource",
                "operationId": "updateSubstanceReferenceInformation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update SubstanceReferenceInformation operation successful"
                    },
                    "201": {
                        "description": "Create SubstanceReferenceInformation operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstanceReferenceInformation"
                }
            }
        },
        "/SubstanceReferenceInformation/{id}/_history": {
            "get": {
                "tags": [
                    "SubstanceReferenceInformation"
                ],
                "summary": "Return the history of a SubstanceReferenceInformation resource",
                "operationId": "historySubstanceReferenceInformation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History SubstanceReferenceInformation operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceSourceMaterial": {
            "post": {
                "tags": [
                    "SubstanceSourceMaterial"
                ],
                "summary": "Create a SubstanceSourceMaterial resource",
                "operationId": "createSubstanceSourceMaterial",
                "responses": {
                    "201": {
                        "description": "Create SubstanceSourceMaterial operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstanceSourceMaterial"
                }
            },
            "get": {
                "tags": [
                    "SubstanceSourceMaterial"
                ],
                "summary": "Search for SubstanceSourceMaterial resources",
                "operationId": "searchSubstanceSourceMaterial",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "Search SubstanceSourceMaterial operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceSourceMaterial/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "SubstanceSourceMaterial"
                ],
                "summary": "Read specific version of a SubstanceSourceMaterial resource",
                "operationId": "vreadSubstanceSourceMaterial",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read SubstanceSourceMaterial operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstanceSourceMaterial"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceSourceMaterial/{id}": {
            "get": {
                "tags": [
                    "SubstanceSourceMaterial"
                ],
                "summary": "Read a SubstanceSourceMaterial resource",
                "operationId": "readSubstanceSourceMaterial",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read SubstanceSourceMaterial operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstanceSourceMaterial"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SubstanceSourceMaterial"
                ],
                "summary": "Update an existing SubstanceSourceMaterial resource",
                "operationId": "updateSubstanceSourceMaterial",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update SubstanceSourceMaterial operation successful"
                    },
                    "201": {
                        "description": "Create SubstanceSourceMaterial operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstanceSourceMaterial"
                }
            }
        },
        "/SubstanceSourceMaterial/{id}/_history": {
            "get": {
                "tags": [
                    "SubstanceSourceMaterial"
                ],
                "summary": "Return the history of a SubstanceSourceMaterial resource",
                "operationId": "historySubstanceSourceMaterial",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History SubstanceSourceMaterial operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceSpecification": {
            "post": {
                "tags": [
                    "SubstanceSpecification"
                ],
                "summary": "Create a SubstanceSpecification resource",
                "operationId": "createSubstanceSpecification",
                "responses": {
                    "201": {
                        "description": "Create SubstanceSpecification operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstanceSpecification"
                }
            },
            "get": {
                "tags": [
                    "SubstanceSpecification"
                ],
                "summary": "Search for SubstanceSpecification resources",
                "operationId": "searchSubstanceSpecification",
                "parameters": [
                    {
                        "name": "code",
                        "description": "Codes associated with the substance",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search SubstanceSpecification operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceSpecification/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "SubstanceSpecification"
                ],
                "summary": "Read specific version of a SubstanceSpecification resource",
                "operationId": "vreadSubstanceSpecification",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read SubstanceSpecification operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstanceSpecification"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubstanceSpecification/{id}": {
            "get": {
                "tags": [
                    "SubstanceSpecification"
                ],
                "summary": "Read a SubstanceSpecification resource",
                "operationId": "readSubstanceSpecification",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read SubstanceSpecification operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubstanceSpecification"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SubstanceSpecification"
                ],
                "summary": "Update an existing SubstanceSpecification resource",
                "operationId": "updateSubstanceSpecification",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update SubstanceSpecification operation successful"
                    },
                    "201": {
                        "description": "Create SubstanceSpecification operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SubstanceSpecification"
                }
            }
        },
        "/SubstanceSpecification/{id}/_history": {
            "get": {
                "tags": [
                    "SubstanceSpecification"
                ],
                "summary": "Return the history of a SubstanceSpecification resource",
                "operationId": "historySubstanceSpecification",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History SubstanceSpecification operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SupplyDelivery": {
            "post": {
                "tags": [
                    "SupplyDelivery"
                ],
                "summary": "Create a SupplyDelivery resource",
                "operationId": "createSupplyDelivery",
                "responses": {
                    "201": {
                        "description": "Create SupplyDelivery operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SupplyDelivery"
                }
            },
            "get": {
                "tags": [
                    "SupplyDelivery"
                ],
                "summary": "Search for SupplyDelivery resources",
                "operationId": "searchSupplyDelivery",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "receiver",
                        "description": "Who collected the Supply",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "in-progress | completed | abandoned | entered-in-error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplier",
                        "description": "Dispenser",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search SupplyDelivery operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SupplyDelivery/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "SupplyDelivery"
                ],
                "summary": "Read specific version of a SupplyDelivery resource",
                "operationId": "vreadSupplyDelivery",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read SupplyDelivery operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplyDelivery"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SupplyDelivery/{id}": {
            "get": {
                "tags": [
                    "SupplyDelivery"
                ],
                "summary": "Read a SupplyDelivery resource",
                "operationId": "readSupplyDelivery",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read SupplyDelivery operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplyDelivery"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SupplyDelivery"
                ],
                "summary": "Update an existing SupplyDelivery resource",
                "operationId": "updateSupplyDelivery",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update SupplyDelivery operation successful"
                    },
                    "201": {
                        "description": "Create SupplyDelivery operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SupplyDelivery"
                }
            }
        },
        "/SupplyDelivery/{id}/_history": {
            "get": {
                "tags": [
                    "SupplyDelivery"
                ],
                "summary": "Return the history of a SupplyDelivery resource",
                "operationId": "historySupplyDelivery",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History SupplyDelivery operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SupplyRequest": {
            "post": {
                "tags": [
                    "SupplyRequest"
                ],
                "summary": "Create a SupplyRequest resource",
                "operationId": "createSupplyRequest",
                "responses": {
                    "201": {
                        "description": "Create SupplyRequest operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SupplyRequest"
                }
            },
            "get": {
                "tags": [
                    "SupplyRequest"
                ],
                "summary": "Search for SupplyRequest resources",
                "operationId": "searchSupplyRequest",
                "parameters": [
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n* [Composition](composition.html): Composition editing time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [Procedure](procedure.html): When the procedure was performed\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "description": "The kind of supply (central, non-stock, etc.)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requester",
                        "description": "Individual making the request",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "draft | active | suspended +",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "The destination of the supply",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplier",
                        "description": "Who is intended to fulfill the request",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search SupplyRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SupplyRequest/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "SupplyRequest"
                ],
                "summary": "Read specific version of a SupplyRequest resource",
                "operationId": "vreadSupplyRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read SupplyRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplyRequest"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SupplyRequest/{id}": {
            "get": {
                "tags": [
                    "SupplyRequest"
                ],
                "summary": "Read a SupplyRequest resource",
                "operationId": "readSupplyRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read SupplyRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplyRequest"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SupplyRequest"
                ],
                "summary": "Update an existing SupplyRequest resource",
                "operationId": "updateSupplyRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update SupplyRequest operation successful"
                    },
                    "201": {
                        "description": "Create SupplyRequest operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SupplyRequest"
                }
            }
        },
        "/SupplyRequest/{id}/_history": {
            "get": {
                "tags": [
                    "SupplyRequest"
                ],
                "summary": "Return the history of a SupplyRequest resource",
                "operationId": "historySupplyRequest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History SupplyRequest operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Task": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Create a Task resource",
                "operationId": "createTask",
                "responses": {
                    "201": {
                        "description": "Create Task operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Task"
                }
            },
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Search for Task resources",
                "operationId": "searchTask",
                "parameters": [
                    {
                        "name": "authored-on",
                        "description": "Search by creation date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "based-on",
                        "description": "Search by requests this task is based on",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "business-status",
                        "description": "Search by business status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "Search by task code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Search by encounter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "focus",
                        "description": "Search by task focus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group-identifier",
                        "description": "Search by group identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Search for a task instance by its business identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intent",
                        "description": "Search by task intent",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified",
                        "description": "Search by last modification date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "owner",
                        "description": "Search by task owner",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "part-of",
                        "description": "Search by task this task is part of",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Search by patient",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "performer",
                        "description": "Search by recommended type of performer (e.g., Requester, Performer, Scheduler).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "description": "Search by period Task is/was underway",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "description": "Search by task priority",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requester",
                        "description": "Search by task requester",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Search by task status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "description": "Search by subject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Task operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Task/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Read specific version of a Task resource",
                "operationId": "vreadTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Task operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Task/{id}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Read a Task resource",
                "operationId": "readTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Task operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Task"
                ],
                "summary": "Update an existing Task resource",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Task operation successful"
                    },
                    "201": {
                        "description": "Create Task operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Task"
                }
            }
        },
        "/Task/{id}/_history": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Return the history of a Task resource",
                "operationId": "historyTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Task operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TerminologyCapabilities": {
            "post": {
                "tags": [
                    "TerminologyCapabilities"
                ],
                "summary": "Create a TerminologyCapabilities resource",
                "operationId": "createTerminologyCapabilities",
                "responses": {
                    "201": {
                        "description": "Create TerminologyCapabilities operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/TerminologyCapabilities"
                }
            },
            "get": {
                "tags": [
                    "TerminologyCapabilities"
                ],
                "summary": "Search for TerminologyCapabilities resources",
                "operationId": "searchTerminologyCapabilities",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search TerminologyCapabilities operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TerminologyCapabilities/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "TerminologyCapabilities"
                ],
                "summary": "Read specific version of a TerminologyCapabilities resource",
                "operationId": "vreadTerminologyCapabilities",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read TerminologyCapabilities operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TerminologyCapabilities"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TerminologyCapabilities/{id}": {
            "get": {
                "tags": [
                    "TerminologyCapabilities"
                ],
                "summary": "Read a TerminologyCapabilities resource",
                "operationId": "readTerminologyCapabilities",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read TerminologyCapabilities operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TerminologyCapabilities"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TerminologyCapabilities"
                ],
                "summary": "Update an existing TerminologyCapabilities resource",
                "operationId": "updateTerminologyCapabilities",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update TerminologyCapabilities operation successful"
                    },
                    "201": {
                        "description": "Create TerminologyCapabilities operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/TerminologyCapabilities"
                }
            }
        },
        "/TerminologyCapabilities/{id}/_history": {
            "get": {
                "tags": [
                    "TerminologyCapabilities"
                ],
                "summary": "Return the history of a TerminologyCapabilities resource",
                "operationId": "historyTerminologyCapabilities",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History TerminologyCapabilities operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TestReport": {
            "post": {
                "tags": [
                    "TestReport"
                ],
                "summary": "Create a TestReport resource",
                "operationId": "createTestReport",
                "responses": {
                    "201": {
                        "description": "Create TestReport operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/TestReport"
                }
            },
            "get": {
                "tags": [
                    "TestReport"
                ],
                "summary": "Search for TestReport resources",
                "operationId": "searchTestReport",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "An external identifier for the test report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "issued",
                        "description": "The test report generation date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participant",
                        "description": "The reference to a participant in the test execution",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "result",
                        "description": "The result disposition of the test execution",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tester",
                        "description": "The name of the testing organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "testscript",
                        "description": "The test script executed to produce this report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search TestReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TestReport/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "TestReport"
                ],
                "summary": "Read specific version of a TestReport resource",
                "operationId": "vreadTestReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read TestReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestReport"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TestReport/{id}": {
            "get": {
                "tags": [
                    "TestReport"
                ],
                "summary": "Read a TestReport resource",
                "operationId": "readTestReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read TestReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestReport"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TestReport"
                ],
                "summary": "Update an existing TestReport resource",
                "operationId": "updateTestReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update TestReport operation successful"
                    },
                    "201": {
                        "description": "Create TestReport operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/TestReport"
                }
            }
        },
        "/TestReport/{id}/_history": {
            "get": {
                "tags": [
                    "TestReport"
                ],
                "summary": "Return the history of a TestReport resource",
                "operationId": "historyTestReport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History TestReport operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TestScript": {
            "post": {
                "tags": [
                    "TestScript"
                ],
                "summary": "Create a TestScript resource",
                "operationId": "createTestScript",
                "responses": {
                    "201": {
                        "description": "Create TestScript operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/TestScript"
                }
            },
            "get": {
                "tags": [
                    "TestScript"
                ],
                "summary": "Search for TestScript resources",
                "operationId": "searchTestScript",
                "parameters": [
                    {
                        "name": "context",
                        "description": "A use context assigned to the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "A quantity- or range-valued use context assigned to the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "A type of use context assigned to the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "The test script publication date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "The description of the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "External identifier for the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Intended jurisdiction for the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Computationally friendly name of the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Name of the publisher of the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "testscript-capability",
                        "description": "TestScript required and validated capability",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "The human-friendly name of the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "The uri that identifies the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "The business version of the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "A use context type and quantity- or range-based value assigned to the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "A use context type and value assigned to the test script",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search TestScript operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TestScript/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "TestScript"
                ],
                "summary": "Read specific version of a TestScript resource",
                "operationId": "vreadTestScript",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read TestScript operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestScript"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TestScript/{id}": {
            "get": {
                "tags": [
                    "TestScript"
                ],
                "summary": "Read a TestScript resource",
                "operationId": "readTestScript",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read TestScript operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestScript"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TestScript"
                ],
                "summary": "Update an existing TestScript resource",
                "operationId": "updateTestScript",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update TestScript operation successful"
                    },
                    "201": {
                        "description": "Create TestScript operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/TestScript"
                }
            }
        },
        "/TestScript/{id}/_history": {
            "get": {
                "tags": [
                    "TestScript"
                ],
                "summary": "Return the history of a TestScript resource",
                "operationId": "historyTestScript",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History TestScript operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ValueSet": {
            "post": {
                "tags": [
                    "ValueSet"
                ],
                "summary": "Create a ValueSet resource",
                "operationId": "createValueSet",
                "responses": {
                    "201": {
                        "description": "Create ValueSet operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ValueSet"
                }
            },
            "get": {
                "tags": [
                    "ValueSet"
                ],
                "summary": "Search for ValueSet resources",
                "operationId": "searchValueSet",
                "parameters": [
                    {
                        "name": "context",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A type of use context assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition\r\n* [StructureMap](structuremap.html): A type of use context assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A type of use context assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The description of the capability statement\r\n* [CodeSystem](codesystem.html): The description of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition\r\n* [ConceptMap](conceptmap.html): The description of the concept map\r\n* [GraphDefinition](graphdefinition.html): The description of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The description of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The description of the message definition\r\n* [NamingSystem](namingsystem.html): The description of the naming system\r\n* [OperationDefinition](operationdefinition.html): The description of the operation definition\r\n* [SearchParameter](searchparameter.html): The description of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The description of the structure definition\r\n* [StructureMap](structuremap.html): The description of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities\r\n* [ValueSet](valueset.html): The description of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jurisdiction",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement\r\n* [CodeSystem](codesystem.html): Intended jurisdiction for the code system\r\n* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map\r\n* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition\r\n* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition\r\n* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system\r\n* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition\r\n* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter\r\n* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition\r\n* [StructureMap](structuremap.html): Intended jurisdiction for the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities\r\n* [ValueSet](valueset.html): Intended jurisdiction for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): Computationally friendly name of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition\r\n* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map\r\n* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition\r\n* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system\r\n* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition\r\n* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition\r\n* [StructureMap](structuremap.html): Computationally friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): Computationally friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publisher",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement\r\n* [CodeSystem](codesystem.html): Name of the publisher of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition\r\n* [ConceptMap](conceptmap.html): Name of the publisher of the concept map\r\n* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition\r\n* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition\r\n* [NamingSystem](namingsystem.html): Name of the publisher of the naming system\r\n* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition\r\n* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter\r\n* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition\r\n* [StructureMap](structuremap.html): Name of the publisher of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities\r\n* [ValueSet](valueset.html): Name of the publisher of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement\r\n* [CodeSystem](codesystem.html): The uri that identifies the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition\r\n* [ConceptMap](conceptmap.html): The uri that identifies the concept map\r\n* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition\r\n* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition\r\n* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition\r\n* [SearchParameter](searchparameter.html): The uri that identifies the search parameter\r\n* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition\r\n* [StructureMap](structuremap.html): The uri that identifies the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities\r\n* [ValueSet](valueset.html): The uri that identifies the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The business version of the capability statement\r\n* [CodeSystem](codesystem.html): The business version of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition\r\n* [ConceptMap](conceptmap.html): The business version of the concept map\r\n* [GraphDefinition](graphdefinition.html): The business version of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The business version of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The business version of the message definition\r\n* [OperationDefinition](operationdefinition.html): The business version of the operation definition\r\n* [SearchParameter](searchparameter.html): The business version of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The business version of the structure definition\r\n* [StructureMap](structuremap.html): The business version of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities\r\n* [ValueSet](valueset.html): The business version of the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-quantity",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context-type-value",
                        "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement\r\n* [CodeSystem](codesystem.html): A use context type and value assigned to the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition\r\n* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map\r\n* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition\r\n* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide\r\n* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition\r\n* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system\r\n* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition\r\n* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter\r\n* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition\r\n* [StructureMap](structuremap.html): A use context type and value assigned to the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities\r\n* [ValueSet](valueset.html): A use context type and value assigned to the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [CodeSystem](codesystem.html): External identifier for the code system\r\n* [ConceptMap](conceptmap.html): External identifier for the concept map\r\n* [MessageDefinition](messagedefinition.html): External identifier for the message definition\r\n* [StructureDefinition](structuredefinition.html): External identifier for the structure definition\r\n* [StructureMap](structuremap.html): External identifier for the structure map\r\n* [ValueSet](valueset.html): External identifier for the value set\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "description": "This special parameter searches for codes in the value set. See additional notes on the ValueSet resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expansion",
                        "description": "Identifies the value set expansion (business identifier)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reference",
                        "description": "A code system included or excluded in the value set or an imported value set",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search ValueSet operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ValueSet/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "ValueSet"
                ],
                "summary": "Read specific version of a ValueSet resource",
                "operationId": "vreadValueSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read ValueSet operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValueSet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ValueSet/{id}": {
            "get": {
                "tags": [
                    "ValueSet"
                ],
                "summary": "Read a ValueSet resource",
                "operationId": "readValueSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read ValueSet operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValueSet"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ValueSet"
                ],
                "summary": "Update an existing ValueSet resource",
                "operationId": "updateValueSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ValueSet operation successful"
                    },
                    "201": {
                        "description": "Create ValueSet operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ValueSet"
                }
            }
        },
        "/ValueSet/{id}/_history": {
            "get": {
                "tags": [
                    "ValueSet"
                ],
                "summary": "Return the history of a ValueSet resource",
                "operationId": "historyValueSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History ValueSet operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/VerificationResult": {
            "post": {
                "tags": [
                    "VerificationResult"
                ],
                "summary": "Create a VerificationResult resource",
                "operationId": "createVerificationResult",
                "responses": {
                    "201": {
                        "description": "Create VerificationResult operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/VerificationResult"
                }
            },
            "get": {
                "tags": [
                    "VerificationResult"
                ],
                "summary": "Search for VerificationResult resources",
                "operationId": "searchVerificationResult",
                "parameters": [
                    {
                        "name": "target",
                        "description": "A resource that was validated",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search VerificationResult operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/VerificationResult/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "VerificationResult"
                ],
                "summary": "Read specific version of a VerificationResult resource",
                "operationId": "vreadVerificationResult",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read VerificationResult operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerificationResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/VerificationResult/{id}": {
            "get": {
                "tags": [
                    "VerificationResult"
                ],
                "summary": "Read a VerificationResult resource",
                "operationId": "readVerificationResult",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read VerificationResult operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerificationResult"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "VerificationResult"
                ],
                "summary": "Update an existing VerificationResult resource",
                "operationId": "updateVerificationResult",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update VerificationResult operation successful"
                    },
                    "201": {
                        "description": "Create VerificationResult operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/VerificationResult"
                }
            }
        },
        "/VerificationResult/{id}/_history": {
            "get": {
                "tags": [
                    "VerificationResult"
                ],
                "summary": "Return the history of a VerificationResult resource",
                "operationId": "historyVerificationResult",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History VerificationResult operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/VisionPrescription": {
            "post": {
                "tags": [
                    "VisionPrescription"
                ],
                "summary": "Create a VisionPrescription resource",
                "operationId": "createVisionPrescription",
                "responses": {
                    "201": {
                        "description": "Create VisionPrescription operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/VisionPrescription"
                }
            },
            "get": {
                "tags": [
                    "VisionPrescription"
                ],
                "summary": "Search for VisionPrescription resources",
                "operationId": "searchVisionPrescription",
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "datewritten",
                        "description": "Return prescriptions written on this date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prescriber",
                        "description": "Who authorized the vision prescription",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the vision prescription",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_textParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search VisionPrescription operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/VisionPrescription/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "VisionPrescription"
                ],
                "summary": "Read specific version of a VisionPrescription resource",
                "operationId": "vreadVisionPrescription",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    },
                    {
                        "$ref": "#/components/parameters/vidParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read VisionPrescription operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VisionPrescription"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/VisionPrescription/{id}": {
            "get": {
                "tags": [
                    "VisionPrescription"
                ],
                "summary": "Read a VisionPrescription resource",
                "operationId": "readVisionPrescription",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read VisionPrescription operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VisionPrescription"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "VisionPrescription"
                ],
                "summary": "Update an existing VisionPrescription resource",
                "operationId": "updateVisionPrescription",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update VisionPrescription operation successful"
                    },
                    "201": {
                        "description": "Create VisionPrescription operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/VisionPrescription"
                }
            }
        },
        "/VisionPrescription/{id}/_history": {
            "get": {
                "tags": [
                    "VisionPrescription"
                ],
                "summary": "Return the history of a VisionPrescription resource",
                "operationId": "historyVisionPrescription",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History VisionPrescription operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metadata": {
            "get": {
                "tags": [
                    "Other"
                ],
                "summary": "Get the FHIR Capability statement for this endpoint",
                "operationId": "metadata",
                "responses": {
                    "200": {
                        "description": "metadata operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CapabilityStatement"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "post": {
                "tags": [
                    "Other"
                ],
                "summary": "Perform a batch operation",
                "operationId": "batch",
                "responses": {
                    "200": {
                        "description": "batch operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/fhir+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bundle"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "parameters": {
            "idParam": {
                "name": "id",
                "description": "logical identifier",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "vidParam": {
                "name": "vid",
                "description": "version identifier",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "_idParam": {
                "name": "_id",
                "description": "Logical id of this artifact",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_lastUpdatedParam": {
                "name": "_lastUpdated",
                "description": "When the resource version last changed",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_profileParam": {
                "name": "_profile",
                "description": "Profiles this resource claims to conform to",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_securityParam": {
                "name": "_security",
                "description": "Security Labels applied to this resource",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_sourceParam": {
                "name": "_source",
                "description": "Identifies where the resource comes from",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_tagParam": {
                "name": "_tag",
                "description": "Tags applied to this resource",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_textParam": {
                "name": "_text",
                "description": "Search on the narrative of the resource",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "Account": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Account"
                        }
                    }
                },
                "required": true
            },
            "ActivityDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ActivityDefinition"
                        }
                    }
                },
                "required": true
            },
            "AdverseEvent": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/AdverseEvent"
                        }
                    }
                },
                "required": true
            },
            "AllergyIntolerance": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/AllergyIntolerance"
                        }
                    }
                },
                "required": true
            },
            "Appointment": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Appointment"
                        }
                    }
                },
                "required": true
            },
            "AppointmentResponse": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/AppointmentResponse"
                        }
                    }
                },
                "required": true
            },
            "AuditEvent": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/AuditEvent"
                        }
                    }
                },
                "required": true
            },
            "Basic": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Basic"
                        }
                    }
                },
                "required": true
            },
            "Binary": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Binary"
                        }
                    }
                },
                "required": true
            },
            "BiologicallyDerivedProduct": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/BiologicallyDerivedProduct"
                        }
                    }
                },
                "required": true
            },
            "BodyStructure": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/BodyStructure"
                        }
                    }
                },
                "required": true
            },
            "Bundle": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Bundle"
                        }
                    }
                },
                "required": true
            },
            "CapabilityStatement": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/CapabilityStatement"
                        }
                    }
                },
                "required": true
            },
            "CarePlan": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/CarePlan"
                        }
                    }
                },
                "required": true
            },
            "CareTeam": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/CareTeam"
                        }
                    }
                },
                "required": true
            },
            "CatalogEntry": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/CatalogEntry"
                        }
                    }
                },
                "required": true
            },
            "ChargeItem": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ChargeItem"
                        }
                    }
                },
                "required": true
            },
            "ChargeItemDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ChargeItemDefinition"
                        }
                    }
                },
                "required": true
            },
            "Claim": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Claim"
                        }
                    }
                },
                "required": true
            },
            "ClaimResponse": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ClaimResponse"
                        }
                    }
                },
                "required": true
            },
            "ClinicalImpression": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ClinicalImpression"
                        }
                    }
                },
                "required": true
            },
            "CodeSystem": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/CodeSystem"
                        }
                    }
                },
                "required": true
            },
            "Communication": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Communication"
                        }
                    }
                },
                "required": true
            },
            "CommunicationRequest": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/CommunicationRequest"
                        }
                    }
                },
                "required": true
            },
            "CompartmentDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/CompartmentDefinition"
                        }
                    }
                },
                "required": true
            },
            "Composition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Composition"
                        }
                    }
                },
                "required": true
            },
            "ConceptMap": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ConceptMap"
                        }
                    }
                },
                "required": true
            },
            "Condition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Condition"
                        }
                    }
                },
                "required": true
            },
            "Consent": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Consent"
                        }
                    }
                },
                "required": true
            },
            "Contract": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Contract"
                        }
                    }
                },
                "required": true
            },
            "Coverage": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Coverage"
                        }
                    }
                },
                "required": true
            },
            "CoverageEligibilityRequest": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/CoverageEligibilityRequest"
                        }
                    }
                },
                "required": true
            },
            "CoverageEligibilityResponse": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/CoverageEligibilityResponse"
                        }
                    }
                },
                "required": true
            },
            "DetectedIssue": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/DetectedIssue"
                        }
                    }
                },
                "required": true
            },
            "Device": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Device"
                        }
                    }
                },
                "required": true
            },
            "DeviceDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/DeviceDefinition"
                        }
                    }
                },
                "required": true
            },
            "DeviceMetric": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/DeviceMetric"
                        }
                    }
                },
                "required": true
            },
            "DeviceRequest": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/DeviceRequest"
                        }
                    }
                },
                "required": true
            },
            "DeviceUseStatement": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/DeviceUseStatement"
                        }
                    }
                },
                "required": true
            },
            "DiagnosticReport": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/DiagnosticReport"
                        }
                    }
                },
                "required": true
            },
            "DocumentManifest": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/DocumentManifest"
                        }
                    }
                },
                "required": true
            },
            "DocumentReference": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/DocumentReference"
                        }
                    }
                },
                "required": true
            },
            "DomainResource": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/DomainResource"
                        }
                    }
                },
                "required": true
            },
            "EffectEvidenceSynthesis": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/EffectEvidenceSynthesis"
                        }
                    }
                },
                "required": true
            },
            "Encounter": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Encounter"
                        }
                    }
                },
                "required": true
            },
            "Endpoint": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Endpoint"
                        }
                    }
                },
                "required": true
            },
            "EnrollmentRequest": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/EnrollmentRequest"
                        }
                    }
                },
                "required": true
            },
            "EnrollmentResponse": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/EnrollmentResponse"
                        }
                    }
                },
                "required": true
            },
            "EpisodeOfCare": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/EpisodeOfCare"
                        }
                    }
                },
                "required": true
            },
            "EventDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/EventDefinition"
                        }
                    }
                },
                "required": true
            },
            "Evidence": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Evidence"
                        }
                    }
                },
                "required": true
            },
            "EvidenceVariable": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/EvidenceVariable"
                        }
                    }
                },
                "required": true
            },
            "ExampleScenario": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ExampleScenario"
                        }
                    }
                },
                "required": true
            },
            "ExplanationOfBenefit": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ExplanationOfBenefit"
                        }
                    }
                },
                "required": true
            },
            "FamilyMemberHistory": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/FamilyMemberHistory"
                        }
                    }
                },
                "required": true
            },
            "Flag": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Flag"
                        }
                    }
                },
                "required": true
            },
            "Goal": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Goal"
                        }
                    }
                },
                "required": true
            },
            "GraphDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/GraphDefinition"
                        }
                    }
                },
                "required": true
            },
            "Group": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Group"
                        }
                    }
                },
                "required": true
            },
            "GuidanceResponse": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/GuidanceResponse"
                        }
                    }
                },
                "required": true
            },
            "HealthcareService": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/HealthcareService"
                        }
                    }
                },
                "required": true
            },
            "ImagingStudy": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ImagingStudy"
                        }
                    }
                },
                "required": true
            },
            "Immunization": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Immunization"
                        }
                    }
                },
                "required": true
            },
            "ImmunizationEvaluation": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ImmunizationEvaluation"
                        }
                    }
                },
                "required": true
            },
            "ImmunizationRecommendation": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ImmunizationRecommendation"
                        }
                    }
                },
                "required": true
            },
            "ImplementationGuide": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ImplementationGuide"
                        }
                    }
                },
                "required": true
            },
            "InsurancePlan": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/InsurancePlan"
                        }
                    }
                },
                "required": true
            },
            "Invoice": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Invoice"
                        }
                    }
                },
                "required": true
            },
            "Library": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Library"
                        }
                    }
                },
                "required": true
            },
            "Linkage": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Linkage"
                        }
                    }
                },
                "required": true
            },
            "List": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/List"
                        }
                    }
                },
                "required": true
            },
            "Location": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Location"
                        }
                    }
                },
                "required": true
            },
            "Measure": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                },
                "required": true
            },
            "MeasureReport": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MeasureReport"
                        }
                    }
                },
                "required": true
            },
            "Media": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Media"
                        }
                    }
                },
                "required": true
            },
            "Medication": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Medication"
                        }
                    }
                },
                "required": true
            },
            "MedicationAdministration": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicationAdministration"
                        }
                    }
                },
                "required": true
            },
            "MedicationDispense": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicationDispense"
                        }
                    }
                },
                "required": true
            },
            "MedicationKnowledge": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicationKnowledge"
                        }
                    }
                },
                "required": true
            },
            "MedicationRequest": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicationRequest"
                        }
                    }
                },
                "required": true
            },
            "MedicationStatement": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicationStatement"
                        }
                    }
                },
                "required": true
            },
            "MedicinalProduct": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicinalProduct"
                        }
                    }
                },
                "required": true
            },
            "MedicinalProductAuthorization": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicinalProductAuthorization"
                        }
                    }
                },
                "required": true
            },
            "MedicinalProductContraindication": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicinalProductContraindication"
                        }
                    }
                },
                "required": true
            },
            "MedicinalProductIndication": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicinalProductIndication"
                        }
                    }
                },
                "required": true
            },
            "MedicinalProductIngredient": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicinalProductIngredient"
                        }
                    }
                },
                "required": true
            },
            "MedicinalProductInteraction": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicinalProductInteraction"
                        }
                    }
                },
                "required": true
            },
            "MedicinalProductManufactured": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicinalProductManufactured"
                        }
                    }
                },
                "required": true
            },
            "MedicinalProductPackaged": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicinalProductPackaged"
                        }
                    }
                },
                "required": true
            },
            "MedicinalProductPharmaceutical": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicinalProductPharmaceutical"
                        }
                    }
                },
                "required": true
            },
            "MedicinalProductUndesirableEffect": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MedicinalProductUndesirableEffect"
                        }
                    }
                },
                "required": true
            },
            "MessageDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MessageDefinition"
                        }
                    }
                },
                "required": true
            },
            "MessageHeader": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MessageHeader"
                        }
                    }
                },
                "required": true
            },
            "MolecularSequence": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/MolecularSequence"
                        }
                    }
                },
                "required": true
            },
            "NamingSystem": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/NamingSystem"
                        }
                    }
                },
                "required": true
            },
            "NutritionOrder": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/NutritionOrder"
                        }
                    }
                },
                "required": true
            },
            "Observation": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Observation"
                        }
                    }
                },
                "required": true
            },
            "ObservationDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ObservationDefinition"
                        }
                    }
                },
                "required": true
            },
            "OperationDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/OperationDefinition"
                        }
                    }
                },
                "required": true
            },
            "OperationOutcome": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/OperationOutcome"
                        }
                    }
                },
                "required": true
            },
            "Organization": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Organization"
                        }
                    }
                },
                "required": true
            },
            "OrganizationAffiliation": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/OrganizationAffiliation"
                        }
                    }
                },
                "required": true
            },
            "Parameters": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Parameters"
                        }
                    }
                },
                "required": true
            },
            "Patient": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Patient"
                        }
                    }
                },
                "required": true
            },
            "PaymentNotice": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/PaymentNotice"
                        }
                    }
                },
                "required": true
            },
            "PaymentReconciliation": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/PaymentReconciliation"
                        }
                    }
                },
                "required": true
            },
            "Person": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Person"
                        }
                    }
                },
                "required": true
            },
            "PlanDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/PlanDefinition"
                        }
                    }
                },
                "required": true
            },
            "Practitioner": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Practitioner"
                        }
                    }
                },
                "required": true
            },
            "PractitionerRole": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/PractitionerRole"
                        }
                    }
                },
                "required": true
            },
            "Procedure": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Procedure"
                        }
                    }
                },
                "required": true
            },
            "Provenance": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Provenance"
                        }
                    }
                },
                "required": true
            },
            "Questionnaire": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Questionnaire"
                        }
                    }
                },
                "required": true
            },
            "QuestionnaireResponse": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuestionnaireResponse"
                        }
                    }
                },
                "required": true
            },
            "RelatedPerson": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/RelatedPerson"
                        }
                    }
                },
                "required": true
            },
            "RequestGroup": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/RequestGroup"
                        }
                    }
                },
                "required": true
            },
            "ResearchDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ResearchDefinition"
                        }
                    }
                },
                "required": true
            },
            "ResearchElementDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ResearchElementDefinition"
                        }
                    }
                },
                "required": true
            },
            "ResearchStudy": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ResearchStudy"
                        }
                    }
                },
                "required": true
            },
            "ResearchSubject": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ResearchSubject"
                        }
                    }
                },
                "required": true
            },
            "Resource": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    }
                },
                "required": true
            },
            "RiskAssessment": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/RiskAssessment"
                        }
                    }
                },
                "required": true
            },
            "RiskEvidenceSynthesis": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/RiskEvidenceSynthesis"
                        }
                    }
                },
                "required": true
            },
            "Schedule": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Schedule"
                        }
                    }
                },
                "required": true
            },
            "SearchParameter": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/SearchParameter"
                        }
                    }
                },
                "required": true
            },
            "ServiceRequest": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ServiceRequest"
                        }
                    }
                },
                "required": true
            },
            "Slot": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Slot"
                        }
                    }
                },
                "required": true
            },
            "Specimen": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Specimen"
                        }
                    }
                },
                "required": true
            },
            "SpecimenDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/SpecimenDefinition"
                        }
                    }
                },
                "required": true
            },
            "StructureDefinition": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/StructureDefinition"
                        }
                    }
                },
                "required": true
            },
            "StructureMap": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/StructureMap"
                        }
                    }
                },
                "required": true
            },
            "Subscription": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Subscription"
                        }
                    }
                },
                "required": true
            },
            "Substance": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Substance"
                        }
                    }
                },
                "required": true
            },
            "SubstanceNucleicAcid": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/SubstanceNucleicAcid"
                        }
                    }
                },
                "required": true
            },
            "SubstancePolymer": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/SubstancePolymer"
                        }
                    }
                },
                "required": true
            },
            "SubstanceProtein": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/SubstanceProtein"
                        }
                    }
                },
                "required": true
            },
            "SubstanceReferenceInformation": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/SubstanceReferenceInformation"
                        }
                    }
                },
                "required": true
            },
            "SubstanceSourceMaterial": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/SubstanceSourceMaterial"
                        }
                    }
                },
                "required": true
            },
            "SubstanceSpecification": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/SubstanceSpecification"
                        }
                    }
                },
                "required": true
            },
            "SupplyDelivery": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/SupplyDelivery"
                        }
                    }
                },
                "required": true
            },
            "SupplyRequest": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/SupplyRequest"
                        }
                    }
                },
                "required": true
            },
            "Task": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Task"
                        }
                    }
                },
                "required": true
            },
            "TerminologyCapabilities": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/TerminologyCapabilities"
                        }
                    }
                },
                "required": true
            },
            "TestReport": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/TestReport"
                        }
                    }
                },
                "required": true
            },
            "TestScript": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/TestScript"
                        }
                    }
                },
                "required": true
            },
            "ValueSet": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/ValueSet"
                        }
                    }
                },
                "required": true
            },
            "VerificationResult": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/VerificationResult"
                        }
                    }
                },
                "required": true
            },
            "VisionPrescription": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/VisionPrescription"
                        }
                    }
                },
                "required": true
            }
        },
        "schemas": {
            "Account": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Unique identifier used to reference the account.  Might or might not be intended for human use (e.g. credit card number)."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "inactive",
                                    "entered-in-error",
                                    "on-hold",
                                    "unknown"
                                ],
                                "description": "Indicates whether the account is presently used/usable or not."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Categorizes the account for reporting and searching purposes."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Name used for the account when displaying it to humans in reports, etc."
                            },
                            "subject": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies the entity which incurs the expenses. While the immediate recipients of services or goods might be entities related to the subject, the expenses were ultimately incurred by the subject of the Account."
                                }
                            },
                            "servicePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date range of services associated with this account."
                            },
                            "coverage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coverage",
                                    "description": "The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account."
                                }
                            },
                            "owner": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Indicates the service area, hospital, department, etc. with responsibility for managing the Account."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Provides additional information about what the account tracks and how it is used."
                            },
                            "guarantor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Guarantor",
                                    "description": "The parties responsible for balancing the account if other payment options fall short."
                                }
                            },
                            "partOf": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to a parent Account."
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "ActivityDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this activity definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this activity definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the activity definition is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this activity definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the activity definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the activity definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active assets."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the activity definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the activity definition."
                            },
                            "subtitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "An explanatory or alternate title for the activity definition giving additional information about its content."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this activity definition. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this activity definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "subjectCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code or group definition that describes the intended subject of the activity being defined."
                            },
                            "subjectReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A code or group definition that describes the intended subject of the activity being defined."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the activity definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the activity definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the activity definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the activity definition from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate activity definition instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the activity definition is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this activity definition is needed and why it has been designed as it has."
                            },
                            "usage": {
                                "$ref": "#/components/schemas/String",
                                "description": "A detailed description of how the activity definition is used from a clinical perspective."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the activity definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the activity definition."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the activity definition content was or is planned to be in active use."
                            },
                            "topic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Descriptive topics related to the content of the activity. Topics provide a high-level categorization of the activity that can be useful for filtering and searching."
                                }
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                                }
                            },
                            "editor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for internal coherence of the content."
                                }
                            },
                            "reviewer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for review of some aspect of the content."
                                }
                            },
                            "endorser": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Related artifacts such as additional documentation, justification, or bibliographic references."
                                }
                            },
                            "library": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "A reference to a Library resource containing any formal logic used by the activity definition."
                                }
                            },
                            "kind": {
                                "type": "string",
                                "enum": [
                                    "Appointment",
                                    "AppointmentResponse",
                                    "CarePlan",
                                    "Claim",
                                    "CommunicationRequest",
                                    "Contract",
                                    "DeviceRequest",
                                    "EnrollmentRequest",
                                    "ImmunizationRecommendation",
                                    "MedicationRequest",
                                    "NutritionOrder",
                                    "ServiceRequest",
                                    "SupplyRequest",
                                    "Task",
                                    "VisionPrescription"
                                ],
                                "description": "A description of the kind of resource the activity definition is representing. For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest. Typically, but not always, this is a Request resource."
                            },
                            "profile": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "A profile to which the target of the activity definition is expected to conform."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Detailed description of the type of activity; e.g. What lab test, what procedure, what kind of encounter."
                            },
                            "intent": {
                                "type": "string",
                                "enum": [
                                    "proposal",
                                    "plan",
                                    "directive",
                                    "order",
                                    "original-order",
                                    "reflex-order",
                                    "filler-order",
                                    "instance-order",
                                    "option"
                                ],
                                "description": "Indicates the level of authority/intentionality associated with the activity and where the request should fit into the workflow chain."
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "routine",
                                    "urgent",
                                    "asap",
                                    "stat"
                                ],
                                "description": "Indicates how quickly the activity  should be addressed with respect to other requests."
                            },
                            "doNotPerform": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Set this to true if the definition is to indicate that a particular activity should NOT be performed. If true, this element should be interpreted to reinforce a negative coding. For example NPO as a code with a doNotPerform of true would still indicate to NOT perform the action."
                            },
                            "timingTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The period, timing or frequency upon which the described activity is to occur."
                            },
                            "timingDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The period, timing or frequency upon which the described activity is to occur."
                            },
                            "timingAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "The period, timing or frequency upon which the described activity is to occur."
                            },
                            "timingPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period, timing or frequency upon which the described activity is to occur."
                            },
                            "timingRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The period, timing or frequency upon which the described activity is to occur."
                            },
                            "timingDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The period, timing or frequency upon which the described activity is to occur."
                            },
                            "location": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc."
                            },
                            "participant": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Participant",
                                    "description": "Indicates who should participate in performing the action described."
                                }
                            },
                            "productReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the food, drug or other product being consumed or supplied in the activity."
                            },
                            "productCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the food, drug or other product being consumed or supplied in the activity."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "Identifies the quantity expected to be consumed at once (per dose, per meal, etc.)."
                            },
                            "dosage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dosage",
                                    "description": "Provides detailed dosage instructions in the same way that they are described for MedicationRequest resources."
                                }
                            },
                            "bodySite": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Indicates the sites on the subject's body where the procedure should be performed (I.e. the target sites)."
                                }
                            },
                            "specimenRequirement": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Defines specimen requirements for the action to be performed, such as required specimens for a lab test."
                                }
                            },
                            "observationRequirement": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Defines observation requirements for the action to be performed, such as body weight or surface area."
                                }
                            },
                            "observationResultRequirement": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Defines the observations that are expected to be produced by the action."
                                }
                            },
                            "transform": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input."
                            },
                            "dynamicValue": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DynamicValue",
                                    "description": "Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient's weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the request resource that would contain the result."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "AdverseEvent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Business identifiers assigned to this adverse event by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
                            },
                            "actuality": {
                                "type": "string",
                                "enum": [
                                    "actual",
                                    "potential"
                                ],
                                "description": "Whether the event actually happened, or just had the potential to. Note that this is independent of whether anyone was affected or harmed or how severely."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The overall type of event, intended for search and filtering purposes."
                                }
                            },
                            "event": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "This element defines the specific type of event that occurred or that was prevented from occurring."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "This subject or group impacted by the event."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Encounter during which AdverseEvent was created or to which the creation of this record is tightly associated."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date (and perhaps time) when the adverse event occurred."
                            },
                            "detected": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Estimated or actual date the AdverseEvent began, in the opinion of the reporter."
                            },
                            "recordedDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date on which the existence of the AdverseEvent was first recorded."
                            },
                            "resultingCondition": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Includes information about the reaction that occurred as a result of exposure to a substance (for example, a drug or a chemical)."
                                }
                            },
                            "location": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The information about where the adverse event occurred."
                            },
                            "seriousness": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Assessment whether this event was of real importance."
                            },
                            "severity": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Describes the severity of the adverse event, in relation to the subject. Contrast to AdverseEvent.seriousness - a severe rash might not be serious, but a mild heart problem is."
                            },
                            "outcome": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Describes the type of outcome from the adverse event."
                            },
                            "recorder": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Information on who recorded the adverse event.  May be the patient or a practitioner."
                            },
                            "contributor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Parties that may or should contribute or have contributed information to the adverse event, which can consist of one or more activities.  Such information includes information leading to the decision to perform the activity and how to perform the activity (e.g. consultant), information that the activity itself seeks to reveal (e.g. informant of clinical history), or information about what activity was performed (e.g. informant witness)."
                                }
                            },
                            "suspectEntity": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SuspectEntity",
                                    "description": "Describes the entity that is suspected to have caused the adverse event."
                                }
                            },
                            "subjectMedicalHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "AdverseEvent.subjectMedicalHistory."
                                }
                            },
                            "referenceDocument": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "AdverseEvent.referenceDocument."
                                }
                            },
                            "study": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "AdverseEvent.study."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "actuality",
                    "subject"
                ]
            },
            "AllergyIntolerance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifiers assigned to this AllergyIntolerance by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "clinicalStatus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The clinical status of the allergy or intolerance."
                            },
                            "verificationStatus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Assertion about certainty associated with the propensity, or potential risk, of a reaction to the identified substance (including pharmaceutical product)."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "allergy",
                                    "intolerance"
                                ],
                                "description": "Identification of the underlying physiological mechanism for the reaction risk."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "food",
                                        "medication",
                                        "environment",
                                        "biologic"
                                    ],
                                    "description": "Category of the identified substance."
                                }
                            },
                            "criticality": {
                                "type": "string",
                                "enum": [
                                    "low",
                                    "high",
                                    "unable-to-assess"
                                ],
                                "description": "Estimate of the potential clinical harm, or seriousness, of the reaction to the identified substance."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Code for an allergy or intolerance statement (either a positive or a negated/excluded statement).  This may be a code for a substance or pharmaceutical product that is considered to be responsible for the adverse reaction risk (e.g., \"Latex\"), an allergy or intolerance condition (e.g., \"Latex allergy\"), or a negated/excluded code for a specific substance or class (e.g., \"No latex allergy\") or a general or categorical negated statement (e.g.,  \"No known allergy\", \"No known drug allergies\").  Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the 'code' and ignore the 'reaction.substance'.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient who has the allergy or intolerance."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The encounter when the allergy or intolerance was asserted."
                            },
                            "onsetDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified."
                            },
                            "onsetAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified."
                            },
                            "onsetPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified."
                            },
                            "onsetRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified."
                            },
                            "onsetString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified."
                            },
                            "recordedDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The recordedDate represents when this particular AllergyIntolerance record was created in the system, which is often a system-generated date."
                            },
                            "recorder": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Individual who recorded the record and takes responsibility for its content."
                            },
                            "asserter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The source of the information about the allergy that is recorded."
                            },
                            "lastOccurrence": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Represents the date and/or time of the last known occurrence of a reaction event."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Additional narrative about the propensity for the Adverse Reaction, not captured in other fields."
                                }
                            },
                            "reaction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reaction",
                                    "description": "Details about each adverse reaction event linked to exposure to the identified substance."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "patient"
                ]
            },
            "Appointment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "This records identifiers associated with this appointment concern that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation)."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "proposed",
                                    "pending",
                                    "booked",
                                    "arrived",
                                    "fulfilled",
                                    "cancelled",
                                    "noshow",
                                    "entered-in-error",
                                    "checked-in",
                                    "waitlist"
                                ],
                                "description": "The overall status of the Appointment. Each of the participants has their own participation status which indicates their involvement in the process, however this status indicates the shared status."
                            },
                            "cancelationReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The coded reason for the appointment being cancelled. This is often used in reporting/billing/futher processing to determine if further actions are required, or specific fees apply."
                            },
                            "serviceCategory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A broad categorization of the service that is to be performed during this appointment."
                                }
                            },
                            "serviceType": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The specific service that is to be performed during this appointment."
                                }
                            },
                            "specialty": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment."
                                }
                            },
                            "appointmentType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The style of appointment or patient that has been booked in the slot (not service type)."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The coded reason that this appointment is being scheduled. This is more clinical than administrative."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Reason the appointment has been scheduled to take place, as specified using information from another resource. When the patient arrives and the encounter begins it may be used as the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure."
                                }
                            },
                            "priority": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The priority of the appointment. Can be used to make informed decisions if needing to re-prioritize appointments. (The iCal Standard specifies 0 as undefined, 1 as highest, 9 as lowest priority)."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "The brief description of the appointment as would be shown on a subject line in a meeting request, or appointment list. Detailed or expanded information should be put in the comment field."
                            },
                            "supportingInformation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Additional information to support the appointment provided when making the appointment."
                                }
                            },
                            "start": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "Date/Time that the appointment is to take place."
                            },
                            "end": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "Date/Time that the appointment is to conclude."
                            },
                            "minutesDuration": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Number of minutes that the appointment is to take. This can be less than the duration between the start and end times.  For example, where the actual time of appointment is only an estimate or if a 30 minute appointment is being requested, but any time would work.  Also, if there is, for example, a planned 15 minute break in the middle of a long appointment, the duration may be 15 minutes less than the difference between the start and end."
                            },
                            "slot": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The slots from the participants' schedules that will be filled by the appointment."
                                }
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date that this appointment was initially created. This could be different to the meta.lastModified value on the initial entry, as this could have been before the resource was created on the FHIR server, and should remain unchanged over the lifespan of the appointment."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Additional comments about the appointment."
                            },
                            "patientInstruction": {
                                "$ref": "#/components/schemas/String",
                                "description": "While Appointment.comment contains information for internal use, Appointment.patientInstructions is used to capture patient facing information about the Appointment (e.g. please bring your referral or fast from 8pm night before)."
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The service request this appointment is allocated to assess (e.g. incoming referral or procedure request)."
                                }
                            },
                            "participant": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Participant",
                                    "description": "List of participants involved in the appointment."
                                }
                            },
                            "requestedPeriod": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Period",
                                    "description": "A set of date ranges (potentially including times) that the appointment is preferred to be scheduled within.\n\nThe duration (usually in minutes) could also be provided to indicate the length of the appointment to fill and populate the start/end times for the actual allocated time. However, in other situations the duration may be calculated by the scheduling system."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "participant"
                ]
            },
            "AppointmentResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "This records identifiers associated with this appointment response concern that are defined by business processes and/ or used to refer to it when a direct URL reference to the resource itself is not appropriate."
                                }
                            },
                            "appointment": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Appointment that this response is replying to."
                            },
                            "start": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "Date/Time that the appointment is to take place, or requested new start time."
                            },
                            "end": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "This may be either the same as the appointment request to confirm the details of the appointment, or alternately a new time to request a re-negotiation of the end time."
                            },
                            "participantType": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Role of participant in the appointment."
                                }
                            },
                            "actor": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A Person, Location, HealthcareService, or Device that is participating in the appointment."
                            },
                            "participantStatus": {
                                "type": "string",
                                "enum": [
                                    "accepted",
                                    "declined",
                                    "tentative",
                                    "needs-action"
                                ],
                                "description": "Participation status of the participant. When the status is declined or tentative if the start/end times are different to the appointment, then these times should be interpreted as a requested time change. When the status is accepted, the times can either be the time of the appointment (as a confirmation of the time) or can be empty."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Additional comments about the appointment."
                            }
                        }
                    }
                ],
                "required": [
                    "appointment",
                    "participantStatus"
                ]
            },
            "AuditEvent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Identifier for a family of the event.  For example, a menu item, program, rule, policy, function code, application name or URL. It identifies the performed function."
                            },
                            "subtype": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "Identifier for the category of event."
                                }
                            },
                            "action": {
                                "type": "string",
                                "enum": [
                                    "C",
                                    "R",
                                    "U",
                                    "D",
                                    "E"
                                ],
                                "description": "Indicator for type of action performed during the event that generated the audit."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the activity occurred."
                            },
                            "recorded": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The time when the event was recorded."
                            },
                            "outcome": {
                                "type": "string",
                                "enum": [
                                    "0",
                                    "4",
                                    "8",
                                    "12"
                                ],
                                "description": "Indicates whether the event succeeded or failed."
                            },
                            "outcomeDesc": {
                                "$ref": "#/components/schemas/String",
                                "description": "A free text description of the outcome of the event."
                            },
                            "purposeOfEvent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The purposeOfUse (reason) that was used during the event being recorded."
                                }
                            },
                            "agent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Agent",
                                    "description": "An actor taking an active role in the event or activity that is logged."
                                }
                            },
                            "source": {
                                "$ref": "#/components/schemas/Source",
                                "description": "The system that is reporting the event."
                            },
                            "entity": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Entity",
                                    "description": "Specific instances of data or objects that have been accessed."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "recorded",
                    "agent",
                    "source"
                ]
            },
            "Basic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifier assigned to the resource for business purposes, outside the context of FHIR."
                                }
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the 'type' of resource - equivalent to the resource name for other resources."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the patient, practitioner, device or any other resource that is the \"focus\" of this resource."
                            },
                            "created": {
                                "$ref": "#/components/schemas/Date",
                                "description": "Identifies when the resource was first created."
                            },
                            "author": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Indicates who was responsible for creating the resource instance."
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "Binary": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Resource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contentType": {
                                "$ref": "#/components/schemas/Code",
                                "description": "MimeType of the binary content represented as a standard MimeType (BCP 13)."
                            },
                            "securityContext": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "This element identifies another resource that can be used as a proxy of the security sensitivity to use when deciding and enforcing access control rules for the Binary resource. Given that the Binary resource contains very few elements that can be used to determine the sensitivity of the data and relationships to individuals, the referenced resource stands in as a proxy equivalent for this purpose. This referenced resource may be related to the Binary (e.g. Media, DocumentReference), or may be some non-related Resource purely as a security proxy. E.g. to identify that the binary resource relates to a patient, and access should only be granted to applications that have access to the patient."
                            },
                            "data": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "The actual content, base64 encoded."
                            }
                        }
                    }
                ],
                "required": [
                    "contentType"
                ]
            },
            "BiologicallyDerivedProduct": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "This records identifiers associated with this biologically derived product instance that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation)."
                                }
                            },
                            "productCategory": {
                                "type": "string",
                                "enum": [
                                    "organ",
                                    "tissue",
                                    "fluid",
                                    "cells",
                                    "biologicalAgent"
                                ],
                                "description": "Broad category of this product."
                            },
                            "productCode": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code that identifies the kind of this biologically derived product (SNOMED Ctcode)."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "available",
                                    "unavailable"
                                ],
                                "description": "Whether the product is currently available."
                            },
                            "request": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Procedure request to obtain this biologically derived product."
                                }
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Number of discrete units within this product."
                            },
                            "parent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Parent product (if any)."
                                }
                            },
                            "collection": {
                                "$ref": "#/components/schemas/Collection",
                                "description": "How this product was collected."
                            },
                            "processing": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Processing",
                                    "description": "Any processing of the product during collection that does not change the fundamental nature of the product. For example adding anti-coagulants during the collection of Peripheral Blood Stem Cells."
                                }
                            },
                            "manipulation": {
                                "$ref": "#/components/schemas/Manipulation",
                                "description": "Any manipulation of product post-collection that is intended to alter the product.  For example a buffy-coat enrichment or CD8 reduction of Peripheral Blood Stem Cells to make it more suitable for infusion."
                            },
                            "storage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Storage",
                                    "description": "Product storage."
                                }
                            }
                        }
                    }
                ]
            },
            "BodyStructure": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifier for this instance of the anatomical structure."
                                }
                            },
                            "active": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether this body site is in active use."
                            },
                            "morphology": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The kind of structure being represented by the body structure at `BodyStructure.location`.  This can define both normal and abnormal morphologies."
                            },
                            "location": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The anatomical location or region of the specimen, lesion, or body structure."
                            },
                            "locationQualifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Qualifier to refine the anatomical location.  These include qualifiers for laterality, relative location, directionality, number, and plane."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A summary, characterization or explanation of the body structure."
                            },
                            "image": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Attachment",
                                    "description": "Image or images used to identify a location."
                                }
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person to which the body site belongs."
                            }
                        }
                    }
                ],
                "required": [
                    "patient"
                ]
            },
            "Bundle": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Resource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "document",
                                    "message",
                                    "transaction",
                                    "transaction-response",
                                    "batch",
                                    "batch-response",
                                    "history",
                                    "searchset",
                                    "collection"
                                ],
                                "description": "Indicates the purpose of this bundle - how it is intended to be used."
                            },
                            "timestamp": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle."
                            },
                            "total": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle."
                            },
                            "link": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Link",
                                    "description": "A series of links that provide context to this bundle."
                                }
                            },
                            "entry": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Entry",
                                    "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only)."
                                }
                            },
                            "signature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "Digital Signature - base64 encoded. XML-DSig or a JWT."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "CapabilityStatement": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this capability statement when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this capability statement is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the capability statement is stored on different servers."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the capability statement when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the capability statement author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the capability statement. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the capability statement."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this capability statement. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this capability statement is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the capability statement was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the capability statement changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the capability statement."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the capability statement from a consumer's perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate capability statement instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the capability statement is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this capability statement is needed and why it has been designed as it has."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the capability statement and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the capability statement."
                            },
                            "kind": {
                                "type": "string",
                                "enum": [
                                    "instance",
                                    "capability",
                                    "requirements"
                                ],
                                "description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase)."
                            },
                            "instantiates": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "Reference to a canonical URL of another CapabilityStatement that this software implements. This capability statement is a published API description that corresponds to a business service. The server may actually implement a subset of the capability statement it claims to implement, so the capability statement must specify the full capability details."
                                }
                            },
                            "imports": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "Reference to a canonical URL of another CapabilityStatement that this software adds to. The capability statement automatically includes everything in the other statement, and it is not duplicated, though the server may repeat the same resources, interactions and operations to add additional details to them."
                                }
                            },
                            "software": {
                                "$ref": "#/components/schemas/Software",
                                "description": "Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation."
                            },
                            "implementation": {
                                "$ref": "#/components/schemas/Implementation",
                                "description": "Identifies a specific implementation instance that is described by the capability statement - i.e. a particular installation, rather than the capabilities of a software program."
                            },
                            "fhirVersion": {
                                "type": "string",
                                "enum": [
                                    "0.01",
                                    "0.05",
                                    "0.06",
                                    "0.11",
                                    "0.0.80",
                                    "0.0.81",
                                    "0.0.82",
                                    "0.4.0",
                                    "0.5.0",
                                    "1.0.0",
                                    "1.0.1",
                                    "1.0.2",
                                    "1.1.0",
                                    "1.4.0",
                                    "1.6.0",
                                    "1.8.0",
                                    "3.0.0",
                                    "3.0.1",
                                    "3.3.0",
                                    "3.5.0",
                                    "4.0.0"
                                ],
                                "description": "The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
                            },
                            "format": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Code",
                                    "description": "A list of the formats supported by this implementation using their content types."
                                }
                            },
                            "patchFormat": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Code",
                                    "description": "A list of the patch formats supported by this implementation using their content types."
                                }
                            },
                            "implementationGuide": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "A list of implementation guides that the server does (or should) support in their entirety."
                                }
                            },
                            "rest": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Rest",
                                    "description": "A definition of the restful capabilities of the solution, if any."
                                }
                            },
                            "messaging": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Messaging",
                                    "description": "A description of the messaging capabilities of the solution."
                                }
                            },
                            "document": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Document",
                                    "description": "A document definition."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "date",
                    "kind",
                    "fhirVersion",
                    "format"
                ]
            },
            "CarePlan": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifiers assigned to this care plan by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "instantiatesCanonical": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan."
                                }
                            },
                            "instantiatesUri": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A care plan that is fulfilled in whole or in part by this care plan."
                                }
                            },
                            "replaces": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Completed or terminated care plan whose function is taken by this new care plan."
                                }
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A larger care plan of which this particular care plan is a component or step."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "on-hold",
                                    "revoked",
                                    "completed",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record."
                            },
                            "intent": {
                                "type": "string",
                                "enum": [
                                    "proposal",
                                    "plan",
                                    "order",
                                    "option"
                                ],
                                "description": "Indicates the level of authority/intentionality associated with the care plan and where the care plan fits into the workflow chain."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Identifies what \"kind\" of plan this is to support differentiation between multiple co-existing plans; e.g. \"Home health\", \"psychiatric\", \"asthma\", \"disease management\", \"wellness plan\", etc."
                                }
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "Human-friendly name for the care plan."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A description of the scope and nature of the plan."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the patient or group whose intended care is described by the plan."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Encounter during which this CarePlan was created or to which the creation of this record is tightly associated."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Indicates when the plan did (or is intended to) come into effect and end."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Represents when this particular CarePlan record was created in the system, which is often a system-generated date."
                            },
                            "author": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "When populated, the author is responsible for the care plan.  The care plan is attributed to the author."
                            },
                            "contributor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies the individual(s) or organization who provided the contents of the care plan."
                                }
                            },
                            "careTeam": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies all people and organizations who are expected to be involved in the care envisioned by this plan."
                                }
                            },
                            "addresses": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or mitigation are handled by this plan."
                                }
                            },
                            "supportingInfo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies portions of the patient's record that specifically influenced the formation of the plan.  These might include comorbidities, recent procedures, limitations, recent assessments, etc."
                                }
                            },
                            "goal": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Describes the intended objective(s) of carrying out the care plan."
                                }
                            },
                            "activity": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Activity",
                                    "description": "Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "General notes about the care plan not covered elsewhere."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "intent",
                    "subject"
                ]
            },
            "CareTeam": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "A number to uniquely identify care team entries."
                            },
                            "provider": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Member of the team who provided the product or service."
                            },
                            "responsible": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "The party who is billing and/or responsible for the claimed products or services."
                            },
                            "role": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team."
                            },
                            "qualification": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The qualification of the practitioner which is applicable for this service."
                            }
                        }
                    }
                ],
                "required": [
                    "sequence",
                    "provider"
                ]
            },
            "CatalogEntry": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Used in supporting different identifiers for the same product, e.g. manufacturer code and retailer code."
                                }
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of item - medication, device, service, protocol or other."
                            },
                            "orderable": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether the entry represents an orderable item."
                            },
                            "referencedItem": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The item in a catalog or definition."
                            },
                            "additionalIdentifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Used in supporting related concepts, e.g. NDC to RxNorm."
                                }
                            },
                            "classification": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Classes of devices, or ATC for medication."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "Used to support catalog exchange even for unsupported products, e.g. getting list of medications even if not prescribable."
                            },
                            "validityPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The time period in which this catalog entry is expected to be active."
                            },
                            "validTo": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date until which this catalog entry is expected to be active."
                            },
                            "lastUpdated": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Typically date of issue is different from the beginning of the validity. This can be used to see when an item was last updated."
                            },
                            "additionalCharacteristic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Used for examplefor Out of Formulary, or any specifics."
                                }
                            },
                            "additionalClassification": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "User for example for ATC classification, or."
                                }
                            },
                            "relatedEntry": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedEntry",
                                    "description": "Used for example, to point to a substance, or to a device used to administer a medication."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "orderable",
                    "referencedItem"
                ]
            },
            "ChargeItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers assigned to this event performer or other systems."
                                }
                            },
                            "definitionUri": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "References the (external) source of pricing information, rules of application for the code this ChargeItem uses."
                                }
                            },
                            "definitionCanonical": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "References the source of pricing information, rules of application for the code this ChargeItem uses."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "planned",
                                    "billable",
                                    "not-billable",
                                    "aborted",
                                    "billed",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "The current state of the ChargeItem."
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "ChargeItems can be grouped to larger ChargeItems covering the whole set."
                                }
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code that identifies the charge, like a billing code."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual or set of individuals the action is being or was performed on."
                            },
                            "context": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The encounter or episode of care that establishes the context for this event."
                            },
                            "occurrenceDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date/time(s) or duration when the charged service was applied."
                            },
                            "occurrencePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Date/time(s) or duration when the charged service was applied."
                            },
                            "occurrenceTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "Date/time(s) or duration when the charged service was applied."
                            },
                            "performer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Performer",
                                    "description": "Indicates who or what performed or participated in the charged service."
                                }
                            },
                            "performingOrganization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organization requesting the service."
                            },
                            "requestingOrganization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organization performing the service."
                            },
                            "costCenter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The financial cost center permits the tracking of charge attribution."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Quantity of which the charge item has been serviced."
                            },
                            "bodysite": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The anatomical location where the related service has been applied."
                                }
                            },
                            "factorOverride": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Factor overriding the factor determined by the rules associated with the code."
                            },
                            "priceOverride": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Total price of the charge overriding the list price associated with the code."
                            },
                            "overrideReason": {
                                "$ref": "#/components/schemas/String",
                                "description": "If the list price or the rule-based factor associated with the code is overridden, this attribute can capture a text to indicate the  reason for this action."
                            },
                            "enterer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The device, practitioner, etc. who entered the charge item."
                            },
                            "enteredDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date the charge item was entered."
                            },
                            "reason": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Describes why the event occurred in coded or textual form."
                                }
                            },
                            "service": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicated the rendered service that caused this charge."
                                }
                            },
                            "productReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the device, food, drug or other product being charged either by type code or reference to an instance."
                            },
                            "productCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the device, food, drug or other product being charged either by type code or reference to an instance."
                            },
                            "account": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Account into which this ChargeItems belongs."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Comments made about the event by the performer, subject or other participants."
                                }
                            },
                            "supportingInformation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Further information supporting this charge."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "code",
                    "subject"
                ]
            },
            "ChargeItemDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this charge item definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this charge item definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the charge item definition is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this charge item definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the charge item definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the charge item definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active assets."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the charge item definition."
                            },
                            "derivedFromUri": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "The URL pointing to an externally-defined charge item definition that is adhered to in whole or in part by this definition."
                                }
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "A larger definition of which this particular definition is a component or step."
                                }
                            },
                            "replaces": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "As new versions of a protocol or guideline are defined, allows identification of what versions are replaced by a new instance."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The current state of the ChargeItemDefinition."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this charge item definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the charge item definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the charge item definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the charge item definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the charge item definition from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate charge item definition instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the charge item definition is intended to be used."
                                }
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the charge item definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the charge item definition."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the charge item definition content was or is planned to be in active use."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The defined billing details in this resource pertain to the given billing code."
                            },
                            "instance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The defined billing details in this resource pertain to the given product instance(s)."
                                }
                            },
                            "applicability": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Applicability",
                                    "description": "Expressions that describe applicability criteria for the billing code."
                                }
                            },
                            "propertyGroup": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PropertyGroup",
                                    "description": "Group of properties which are applicable under the same conditions. If no applicability rules are established for the group, then all properties always apply."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "url",
                    "status"
                ]
            },
            "Claim": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this claim."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The category of claim, e.g. oral, pharmacy, vision, institutional, professional."
                            },
                            "subType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service."
                            },
                            "use": {
                                "type": "string",
                                "enum": [
                                    "claim",
                                    "preauthorization",
                                    "predetermination"
                                ],
                                "description": "A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party to whom the professional services and/or products have been supplied or are being considered and for whom actual or forecast reimbursement is sought."
                            },
                            "billablePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period for which charges are being submitted."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date this resource was created."
                            },
                            "enterer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Individual who created the claim, predetermination or preauthorization."
                            },
                            "insurer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Insurer who is target of the request."
                            },
                            "provider": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The provider which is responsible for the claim, predetermination or preauthorization."
                            },
                            "priority": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The provider-required urgency of processing the request. Typical values include: stat, routine deferred."
                            },
                            "fundsReserve": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code to indicate whether and for whom funds are to be reserved for future claims."
                            },
                            "related": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Related",
                                    "description": "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event."
                                }
                            },
                            "prescription": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Prescription to support the dispensing of pharmacy, device or vision products."
                            },
                            "originalPrescription": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products."
                            },
                            "payee": {
                                "$ref": "#/components/schemas/Payee",
                                "description": "The party to be reimbursed for cost of the products and services according to the terms of the policy."
                            },
                            "referral": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a referral resource."
                            },
                            "facility": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Facility where the services were provided."
                            },
                            "careTeam": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CareTeam",
                                    "description": "The members of the team who provided the products and services."
                                }
                            },
                            "supportingInfo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SupportingInfo",
                                    "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues."
                                }
                            },
                            "diagnosis": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Diagnosis",
                                    "description": "Information about diagnoses relevant to the claim items."
                                }
                            },
                            "procedure": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Procedure",
                                    "description": "Procedures performed on the patient relevant to the billing items with the claim."
                                }
                            },
                            "insurance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Insurance",
                                    "description": "Financial instruments for reimbursement for the health care products and services specified on the claim."
                                }
                            },
                            "accident": {
                                "$ref": "#/components/schemas/Accident",
                                "description": "Details of an accident which resulted in injuries which required the products and services listed in the claim."
                            },
                            "item": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Item",
                                    "description": "A claim line. Either a simple  product or service or a 'group' of details which can each be a simple items or groups of sub-details."
                                }
                            },
                            "total": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The total value of the all the items in the claim."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "type",
                    "use",
                    "patient",
                    "created",
                    "provider",
                    "priority",
                    "insurance"
                ]
            },
            "ClaimResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this claim response."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service."
                            },
                            "subType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service."
                            },
                            "use": {
                                "type": "string",
                                "enum": [
                                    "claim",
                                    "preauthorization",
                                    "predetermination"
                                ],
                                "description": "A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for facast reimbursement is sought."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date this resource was created."
                            },
                            "insurer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party responsible for authorization, adjudication and reimbursement."
                            },
                            "requestor": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The provider which is responsible for the claim, predetermination or preauthorization."
                            },
                            "request": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Original request resource reference."
                            },
                            "outcome": {
                                "type": "string",
                                "enum": [
                                    "queued",
                                    "complete",
                                    "error",
                                    "partial"
                                ],
                                "description": "The outcome of the claim, predetermination, or preauthorization processing."
                            },
                            "disposition": {
                                "$ref": "#/components/schemas/String",
                                "description": "A human readable description of the status of the adjudication."
                            },
                            "preAuthRef": {
                                "$ref": "#/components/schemas/String",
                                "description": "Reference from the Insurer which is used in later communications which refers to this adjudication."
                            },
                            "preAuthPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The time frame during which this authorization is effective."
                            },
                            "payeeType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of Party to be reimbursed: subscriber, provider, other."
                            },
                            "item": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Item",
                                    "description": "A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details."
                                }
                            },
                            "addItem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AddItem",
                                    "description": "The first-tier service adjudications for payor added product or service lines."
                                }
                            },
                            "adjudication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Adjudication",
                                    "description": "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item."
                                }
                            },
                            "total": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Total",
                                    "description": "Categorized monetary totals for the adjudication."
                                }
                            },
                            "payment": {
                                "$ref": "#/components/schemas/Payment",
                                "description": "Payment details for the adjudication of the claim."
                            },
                            "fundsReserve": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom."
                            },
                            "formCode": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code for the form to be used for printing the content."
                            },
                            "form": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The actual form, by reference or inclusion, for printing the content or an EOB."
                            },
                            "processNote": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProcessNote",
                                    "description": "A note that describes or explains adjudication results in a human readable form."
                                }
                            },
                            "communicationRequest": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Request for additional supporting or authorizing information."
                                }
                            },
                            "insurance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Insurance",
                                    "description": "Financial instruments for reimbursement for the health care products and services specified on the claim."
                                }
                            },
                            "error": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Error",
                                    "description": "Errors encountered during the processing of the adjudication."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "type",
                    "use",
                    "patient",
                    "created",
                    "insurer",
                    "outcome"
                ]
            },
            "ClinicalImpression": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifiers assigned to this clinical impression by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "in-progress",
                                    "completed",
                                    "entered-in-error"
                                ],
                                "description": "Identifies the workflow status of the assessment."
                            },
                            "statusReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Captures the reason for the current state of the ClinicalImpression."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Categorizes the type of clinical assessment performed."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A summary of the context and/or cause of the assessment - why / where it was performed, and what patient events/status prompted it."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient or group of individuals assessed as part of this record."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Encounter during which this ClinicalImpression was created or to which the creation of this record is tightly associated."
                            },
                            "effectiveDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The point in time or period over which the subject was assessed."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The point in time or period over which the subject was assessed."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Indicates when the documentation of the assessment was complete."
                            },
                            "assessor": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The clinician performing the assessment."
                            },
                            "previous": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to the last assessment that was conducted on this patient. Assessments are often/usually ongoing in nature; a care provider (practitioner or team) will make new assessments on an ongoing basis as new data arises or the patient's conditions changes."
                            },
                            "problem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A list of the relevant problems/conditions for a patient."
                                }
                            },
                            "investigation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Investigation",
                                    "description": "One or more sets of investigations (signs, symptoms, etc.). The actual grouping of investigations varies greatly depending on the type and context of the assessment. These investigations may include data generated during the assessment process, or data previously generated and recorded that is pertinent to the outcomes."
                                }
                            },
                            "protocol": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "Reference to a specific published clinical protocol that was followed during this assessment, and/or that provides evidence in support of the diagnosis."
                                }
                            },
                            "summary": {
                                "$ref": "#/components/schemas/String",
                                "description": "A text summary of the investigations and the diagnosis."
                            },
                            "finding": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Finding",
                                    "description": "Specific findings or diagnoses that were considered likely or relevant to ongoing treatment."
                                }
                            },
                            "prognosisCodeableConcept": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Estimate of likely outcome."
                                }
                            },
                            "prognosisReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "RiskAssessment expressing likely outcome."
                                }
                            },
                            "supportingInfo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Information supporting the clinical impression."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Commentary about the impression, typically recorded after the impression itself was made, though supplemental notes by the original author could also appear."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "subject"
                ]
            },
            "CodeSystem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "uri": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "URI for the Code System."
                            },
                            "version": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Version",
                                    "description": "For the code system, a list of versions that are supported by the server."
                                }
                            },
                            "subsumption": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "True if subsumption is supported for this version of the code system."
                            }
                        }
                    }
                ]
            },
            "Communication": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "language": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. \"en\" for English, or \"en-US\" for American English versus \"en-EN\" for England English."
                            },
                            "preferred": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level)."
                            }
                        }
                    }
                ],
                "required": [
                    "language"
                ]
            },
            "CommunicationRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifiers assigned to this communication request by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A plan or proposal that is fulfilled in whole or in part by this request."
                                }
                            },
                            "replaces": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Completed or terminated request(s) whose function is taken by this new request."
                                }
                            },
                            "groupIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "on-hold",
                                    "revoked",
                                    "completed",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "The status of the proposal or order."
                            },
                            "statusReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Captures the reason for the current state of the CommunicationRequest."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The type of message to be sent such as alert, notification, reminder, instruction, etc."
                                }
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "routine",
                                    "urgent",
                                    "asap",
                                    "stat"
                                ],
                                "description": "Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine."
                            },
                            "doNotPerform": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If true indicates that the CommunicationRequest is asking for the specified action to *not* occur."
                            },
                            "medium": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A channel that was used for this communication (e.g. email, fax)."
                                }
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient or group that is the focus of this communication request."
                            },
                            "about": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Other resources that pertain to this communication request and to which this communication request should be associated."
                                }
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Encounter during which this CommunicationRequest was created or to which the creation of this record is tightly associated."
                            },
                            "payload": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Payload",
                                    "description": "Text, attachment(s), or resource(s) to be communicated to the recipient."
                                }
                            },
                            "occurrenceDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The time when this communication is to occur."
                            },
                            "occurrencePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The time when this communication is to occur."
                            },
                            "authoredOn": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "For draft requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation."
                            },
                            "requester": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The device, individual, or organization who initiated the request and has responsibility for its activation."
                            },
                            "recipient": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication."
                                }
                            },
                            "sender": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Describes why the request is being made in coded or textual form."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates another resource whose existence justifies this request."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Comments made about the request by the requester, sender, recipient, subject or other participants."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "CompartmentDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this compartment definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this compartment definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the compartment definition is stored on different servers."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the compartment definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the compartment definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the compartment definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this compartment definition. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this compartment definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the compartment definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the compartment definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the compartment definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the compartment definition from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate compartment definition instances."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this compartment definition is needed and why it has been designed as it has."
                            },
                            "code": {
                                "type": "string",
                                "enum": [
                                    "Patient",
                                    "Encounter",
                                    "RelatedPerson",
                                    "Practitioner",
                                    "Device"
                                ],
                                "description": "Which compartment this definition describes."
                            },
                            "search": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether the search syntax is supported,."
                            },
                            "resource": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Resource",
                                    "description": "Information about how a resource is related to the compartment."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "url",
                    "name",
                    "status",
                    "code",
                    "search"
                ]
            },
            "Composition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A version-independent identifier for the Composition. This identifier stays constant as the composition is changed over time."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "preliminary",
                                    "final",
                                    "amended",
                                    "entered-in-error"
                                ],
                                "description": "The workflow/clinical status of this composition. The status is a marker for the clinical standing of the document."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specifies the particular kind of composition (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the composition."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A categorization for the type of the composition - helps for indexing and searching. This may be implied by or derived from the code specified in the Composition Type."
                                }
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Who or what the composition is about. The composition can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of livestock, or a set of patients that share a common exposure)."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Describes the clinical encounter or type of care this documentation is associated with."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The composition editing time, when the composition was last logically changed by the author."
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies who is responsible for the information in the composition, not necessarily who typed it in."
                                }
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "Official human-readable label for the composition."
                            },
                            "confidentiality": {
                                "type": "string",
                                "enum": [
                                    "U",
                                    "L",
                                    "M",
                                    "N",
                                    "R",
                                    "V"
                                ],
                                "description": "The code specifying the level of confidentiality of the Composition."
                            },
                            "attester": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Attester",
                                    "description": "A participant who has attested to the accuracy of the composition/document."
                                }
                            },
                            "custodian": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the organization or group who is responsible for ongoing maintenance of and access to the composition/document information."
                            },
                            "relatesTo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatesTo",
                                    "description": "Relationships that this composition has with other compositions or documents that already exist."
                                }
                            },
                            "event": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event",
                                    "description": "The clinical service, such as a colonoscopy or an appendectomy, being documented."
                                }
                            },
                            "section": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Section",
                                    "description": "The root of the sections that make up the composition."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "type",
                    "date",
                    "author",
                    "title"
                ]
            },
            "ConceptMap": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this concept map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this concept map is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the concept map is stored on different servers."
                            },
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A formal identifier that is used to identify this concept map when it is represented in other formats, or referenced in a specification, model, design or an instance."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the concept map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the concept map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the concept map. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the concept map."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this concept map. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this concept map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the concept map was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the concept map changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the concept map."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the concept map from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate concept map instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the concept map is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this concept map is needed and why it has been designed as it has."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the concept map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the concept map."
                            },
                            "sourceUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings."
                            },
                            "sourceCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings."
                            },
                            "targetUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made."
                            },
                            "targetCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made."
                            },
                            "group": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Group",
                                    "description": "A group of mappings that all have the same source and target system."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "Condition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "kind": {
                                "type": "string",
                                "enum": [
                                    "applicability",
                                    "start",
                                    "stop"
                                ],
                                "description": "The kind of condition."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "An expression that returns true or false, indicating whether or not the condition is satisfied."
                            }
                        }
                    }
                ],
                "required": [
                    "kind"
                ]
            },
            "Consent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Unique identifier for this copy of the Consent Statement."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "proposed",
                                    "active",
                                    "rejected",
                                    "inactive",
                                    "entered-in-error"
                                ],
                                "description": "Indicates the current state of this consent."
                            },
                            "scope": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A selector of the type of consent being presented: ADR, Privacy, Treatment, Research.  This list is now extensible."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A classification of the type of consents found in the statement. This element supports indexing and retrieval of consent statements."
                                }
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient/healthcare consumer to whom this consent applies."
                            },
                            "dateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When this  Consent was issued / created / indexed."
                            },
                            "performer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Either the Grantor, which is the entity responsible for granting the rights listed in a Consent Directive or the Grantee, which is the entity responsible for complying with the Consent Directive, including any obligations or limitations on authorizations and enforcement of prohibitions."
                                }
                            },
                            "organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The organization that manages the consent, and the framework within which it is executed."
                                }
                            },
                            "sourceAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The source on which this consent statement is based. The source might be a scanned original paper form, or a reference to a consent that links back to such a source, a reference to a document repository (e.g. XDS) that stores the original consent document."
                            },
                            "sourceReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The source on which this consent statement is based. The source might be a scanned original paper form, or a reference to a consent that links back to such a source, a reference to a document repository (e.g. XDS) that stores the original consent document."
                            },
                            "policy": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Policy",
                                    "description": "The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law."
                                }
                            },
                            "policyRule": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A reference to the specific base computable regulation or policy."
                            },
                            "verification": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Verification",
                                    "description": "Whether a treatment instruction (e.g. artificial respiration yes or no) was verified with the patient, his/her family or another authorized person."
                                }
                            },
                            "provision": {
                                "$ref": "#/components/schemas/Provision",
                                "description": "An exception to the base policy of this consent. An exception can be an addition or removal of access permissions."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "scope",
                    "category"
                ]
            },
            "Contract": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Unique identifier for this Contract or a derivative that references a Source Contract."
                                }
                            },
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Canonical identifier for this contract, represented as a URI (globally unique)."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "An edition identifier used for business purposes to label business significant variants."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "amended",
                                    "appended",
                                    "cancelled",
                                    "disputed",
                                    "entered-in-error",
                                    "executable",
                                    "executed",
                                    "negotiable",
                                    "offered",
                                    "policy",
                                    "rejected",
                                    "renewed",
                                    "revoked",
                                    "resolved",
                                    "terminated"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "legalState": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Legal states of the formation of a legal instrument, which is a formally executed written document that can be formally attributed to its author, records and formally expresses a legally enforceable act, process, or contractual duty, obligation, or right, and therefore evidences that act, process, or agreement."
                            },
                            "instantiatesCanonical": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The URL pointing to a FHIR-defined Contract Definition that is adhered to in whole or part by this Contract."
                            },
                            "instantiatesUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The URL pointing to an externally maintained definition that is adhered to in whole or in part by this Contract."
                            },
                            "contentDerivative": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The minimal content derived from the basal information source at a specific stage in its lifecycle."
                            },
                            "issued": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When this  Contract was issued."
                            },
                            "applies": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Relevant time or time-period when this Contract is applicable."
                            },
                            "expirationType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Event resulting in discontinuation or termination of this Contract instance by one or more parties to the contract."
                            },
                            "subject": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The target entity impacted by or of interest to parties to the agreement."
                                }
                            },
                            "authority": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A formally or informally recognized grouping of people, principals, organizations, or jurisdictions formed for the purpose of achieving some form of collective action such as the promulgation, administration and enforcement of contracts and policies."
                                }
                            },
                            "domain": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Recognized governance framework or system operating with a circumscribed scope in accordance with specified principles, policies, processes or procedures for managing rights, actions, or behaviors of parties or principals relative to resources."
                                }
                            },
                            "site": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Sites in which the contract is complied with,  exercised, or in force."
                                }
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying this Contract definition, derivative, or instance in any legal state. Provides additional information about its content. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for this Contract definition, derivative, or instance in any legal state.t giving additional information about its content."
                            },
                            "subtitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "An explanatory or alternate user-friendly title for this Contract definition, derivative, or instance in any legal state.t giving additional information about its content."
                            },
                            "alias": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Alternative representation of the title for this Contract definition, derivative, or instance in any legal state., e.g., a domain specific contract number related to legislation."
                                }
                            },
                            "author": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual or organization that authored the Contract definition, derivative, or instance in any legal state."
                            },
                            "scope": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A selector of legal concerns for this Contract definition, derivative, or instance in any legal state."
                            },
                            "topicCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Narrows the range of legal concerns to focus on the achievement of specific contractual objectives."
                            },
                            "topicReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Narrows the range of legal concerns to focus on the achievement of specific contractual objectives."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A high-level category for the legal instrument, whether constructed as a Contract definition, derivative, or instance in any legal state.  Provides additional information about its content within the context of the Contract's scope to distinguish the kinds of systems that would be interested in the contract."
                            },
                            "subType": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Sub-category for the Contract that distinguishes the kinds of systems that would be interested in the Contract within the context of the Contract's scope."
                                }
                            },
                            "contentDefinition": {
                                "$ref": "#/components/schemas/ContentDefinition",
                                "description": "Precusory content developed with a focus and intent of supporting the formation a Contract instance, which may be associated with and transformable into a Contract."
                            },
                            "term": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Term",
                                    "description": "One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups."
                                }
                            },
                            "supportingInfo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Information that may be needed by/relevant to the performer in their execution of this term action."
                                }
                            },
                            "relevantHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Links to Provenance records for past versions of this Contract definition, derivative, or instance, which identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the Contract.  The Provence.entity indicates the target that was changed in the update. http://build.fhir.org/provenance-definitions.html#Provenance.entity."
                                }
                            },
                            "signer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Signer",
                                    "description": "Parties with legal standing in the Contract, including the principal parties, the grantor(s) and grantee(s), which are any person or organization bound by the contract, and any ancillary parties, which facilitate the execution of the contract such as a notary or witness."
                                }
                            },
                            "friendly": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Friendly",
                                    "description": "The \"patient friendly language\" versionof the Contract in whole or in parts. \"Patient friendly language\" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement."
                                }
                            },
                            "legal": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Legal",
                                    "description": "List of Legal expressions or representations of this Contract."
                                }
                            },
                            "rule": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Rule",
                                    "description": "List of Computable Policy Rule Language Representations of this Contract."
                                }
                            },
                            "legallyBindingAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "Legally binding Contract: This is the signed and legally recognized representation of the Contract, which is considered the \"source of truth\" and which would be the basis for legal action related to enforcement of this Contract."
                            },
                            "legallyBindingReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Legally binding Contract: This is the signed and legally recognized representation of the Contract, which is considered the \"source of truth\" and which would be the basis for legal action related to enforcement of this Contract."
                            }
                        }
                    }
                ]
            },
            "Coverage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of coverage  (Medical; Dental; Mental Health; Substance Abuse; Vision; Drug; Short Term; Long Term Care; Hospice; Home Health)."
                            },
                            "network": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Reference to the network that providing the type of coverage."
                                }
                            },
                            "benefit": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Benefit",
                                    "description": "Specific benefits under this type of coverage."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "benefit"
                ]
            },
            "CoverageEligibilityRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this coverage eligiblity request."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "priority": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "When the requestor expects the processor to complete processing."
                            },
                            "purpose": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "auth-requirements",
                                        "benefits",
                                        "discovery",
                                        "validation"
                                    ],
                                    "description": "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or 'now' if not specified."
                                }
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party who is the beneficiary of the supplied coverage and for whom eligibility is sought."
                            },
                            "servicedDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date or dates when the enclosed suite of services were performed or completed."
                            },
                            "servicedPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date or dates when the enclosed suite of services were performed or completed."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date when this resource was created."
                            },
                            "enterer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Person who created the request."
                            },
                            "provider": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The provider which is responsible for the request."
                            },
                            "insurer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Insurer who issued the coverage in question and is the recipient of the request."
                            },
                            "facility": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Facility where the services are intended to be provided."
                            },
                            "supportingInfo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SupportingInfo",
                                    "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues."
                                }
                            },
                            "insurance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Insurance",
                                    "description": "Financial instruments for reimbursement for the health care products and services."
                                }
                            },
                            "item": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Item",
                                    "description": "Service categories or billable services for which benefit details and/or an authorization prior to service delivery may be required by the payor."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "purpose",
                    "patient",
                    "created",
                    "insurer"
                ]
            },
            "CoverageEligibilityResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this coverage eligiblity request."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "purpose": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "auth-requirements",
                                        "benefits",
                                        "discovery",
                                        "validation"
                                    ],
                                    "description": "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or 'now' if not specified."
                                }
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party who is the beneficiary of the supplied coverage and for whom eligibility is sought."
                            },
                            "servicedDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date or dates when the enclosed suite of services were performed or completed."
                            },
                            "servicedPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date or dates when the enclosed suite of services were performed or completed."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date this resource was created."
                            },
                            "requestor": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The provider which is responsible for the request."
                            },
                            "request": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the original request resource."
                            },
                            "outcome": {
                                "type": "string",
                                "enum": [
                                    "queued",
                                    "complete",
                                    "error",
                                    "partial"
                                ],
                                "description": "The outcome of the request processing."
                            },
                            "disposition": {
                                "$ref": "#/components/schemas/String",
                                "description": "A human readable description of the status of the adjudication."
                            },
                            "insurer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Insurer who issued the coverage in question and is the author of the response."
                            },
                            "insurance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Insurance",
                                    "description": "Financial instruments for reimbursement for the health care products and services."
                                }
                            },
                            "preAuthRef": {
                                "$ref": "#/components/schemas/String",
                                "description": "A reference from the Insurer to which these services pertain to be used on further communication and as proof that the request occurred."
                            },
                            "form": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code for the form to be used for printing the content."
                            },
                            "error": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Error",
                                    "description": "Errors encountered during the processing of the request."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "purpose",
                    "patient",
                    "created",
                    "request",
                    "outcome",
                    "insurer"
                ]
            },
            "DetectedIssue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifier associated with the detected issue record."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "registered",
                                    "preliminary",
                                    "final",
                                    "amended",
                                    "corrected",
                                    "cancelled",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "Indicates the status of the detected issue."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the general type of issue identified."
                            },
                            "severity": {
                                "type": "string",
                                "enum": [
                                    "high",
                                    "moderate",
                                    "low"
                                ],
                                "description": "Indicates the degree of importance associated with the identified issue based on the potential impact on the patient."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Indicates the patient whose record the detected issue is associated with."
                            },
                            "identifiedDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date or period when the detected issue was initially identified."
                            },
                            "identifiedPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date or period when the detected issue was initially identified."
                            },
                            "author": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Individual or device responsible for the issue being raised.  For example, a decision support application or a pharmacist conducting a medication review."
                            },
                            "implicated": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates the resource representing the current activity or proposed activity that is potentially problematic."
                                }
                            },
                            "evidence": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Evidence",
                                    "description": "Supporting evidence or manifestations that provide the basis for identifying the detected issue such as a GuidanceResponse or MeasureReport."
                                }
                            },
                            "detail": {
                                "$ref": "#/components/schemas/String",
                                "description": "Links to resources that constitute evidence for the detected issue such as a GuidanceResponse or MeasureReport."
                            },
                            "reference": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The literature, knowledge-base or similar reference that describes the propensity for the detected issue identified."
                            },
                            "mitigation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Mitigation",
                                    "description": "Indicates an action that has been taken or is committed to reduce or eliminate the likelihood of the risk identified by the detected issue from manifesting.  Can also reflect an observation of known mitigating factors that may reduce/eliminate the need for any action."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "Device": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Unique instance identifiers assigned to a device by manufacturers other organizations or owners."
                                }
                            },
                            "definition": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The reference to the definition for the device."
                            },
                            "udiCarrier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UdiCarrier",
                                    "description": "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "inactive",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "Status of the Device availability."
                            },
                            "statusReason": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Reason for the dtatus of the Device availability."
                                }
                            },
                            "distinctIdentifier": {
                                "$ref": "#/components/schemas/String",
                                "description": "The distinct identification string as required by regulation for a human cell, tissue, or cellular and tissue-based product."
                            },
                            "manufacturer": {
                                "$ref": "#/components/schemas/String",
                                "description": "A name of the manufacturer."
                            },
                            "manufactureDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date and time when the device was manufactured."
                            },
                            "expirationDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date and time beyond which this device is no longer valid or should not be used (if applicable)."
                            },
                            "lotNumber": {
                                "$ref": "#/components/schemas/String",
                                "description": "Lot number assigned by the manufacturer."
                            },
                            "serialNumber": {
                                "$ref": "#/components/schemas/String",
                                "description": "The serial number assigned by the organization when the device was manufactured."
                            },
                            "deviceName": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DeviceName",
                                    "description": "This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition."
                                }
                            },
                            "modelNumber": {
                                "$ref": "#/components/schemas/String",
                                "description": "The model number for the device."
                            },
                            "partNumber": {
                                "$ref": "#/components/schemas/String",
                                "description": "The part number of the device."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of deviceName.\nUDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName."
                            },
                            "specialization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Specialization",
                                    "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication."
                                }
                            },
                            "version": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Version",
                                    "description": "The version of the standard that is used to operate and communicate."
                                }
                            },
                            "property": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Property",
                                    "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties."
                                }
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Patient information, If the device is affixed to a person."
                            },
                            "owner": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "An organization that is responsible for the provision and ongoing maintenance of the device."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "Contact details for an organization or a particular human that is responsible for the device."
                                }
                            },
                            "location": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The place where the device can be found."
                            },
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "A network address on which the device may be contacted directly."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Descriptive information, usage information or implantation information that is not captured in an existing element."
                                }
                            },
                            "safety": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Provides additional safety characteristics about a medical device.  For example devices containing latex."
                                }
                            },
                            "parent": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The parent device."
                            }
                        }
                    }
                ]
            },
            "DeviceDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Unique instance identifiers assigned to a device by the software, manufacturers, other organizations or owners. For example: handle ID."
                                }
                            },
                            "udiDeviceIdentifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UdiDeviceIdentifier",
                                    "description": "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold."
                                }
                            },
                            "manufacturerString": {
                                "$ref": "#/components/schemas/String",
                                "description": "A name of the manufacturer."
                            },
                            "manufacturerReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A name of the manufacturer."
                            },
                            "deviceName": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DeviceName",
                                    "description": "A name given to the device to identify it."
                                }
                            },
                            "modelNumber": {
                                "$ref": "#/components/schemas/String",
                                "description": "The model number for the device."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of deviceName.\nUDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName."
                            },
                            "specialization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Specialization",
                                    "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication."
                                }
                            },
                            "version": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "The version of the standard that is used to operate and communicate."
                                }
                            },
                            "safety": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Safety characteristics of the device."
                                }
                            },
                            "shelfLifeStorage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProductShelfLife",
                                    "description": "Shelf Life and storage information."
                                }
                            },
                            "physicalCharacteristics": {
                                "$ref": "#/components/schemas/ProdCharacteristic",
                                "description": "Dimensions, color etc."
                            },
                            "languageCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Language code for the human-readable text strings produced by the device (all supported)."
                                }
                            },
                            "capability": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Capability",
                                    "description": "Device capabilities."
                                }
                            },
                            "property": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Property",
                                    "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties."
                                }
                            },
                            "owner": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "An organization that is responsible for the provision and ongoing maintenance of the device."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "Contact details for an organization or a particular human that is responsible for the device."
                                }
                            },
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "A network address on which the device may be contacted directly."
                            },
                            "onlineInformation": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Access to on-line information about the device."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Descriptive information, usage information or implantation information that is not captured in an existing element."
                                }
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The quantity of the device present in the packaging (e.g. the number of devices present in a pack, or the number of devices in the same package of the medicinal product)."
                            },
                            "parentDevice": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The parent device it can be part of."
                            },
                            "material": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Material",
                                    "description": "A substance used to create the material(s) of which the device is made."
                                }
                            }
                        }
                    }
                ]
            },
            "DeviceMetric": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Unique instance identifiers assigned to a device by the device or gateway software, manufacturers, other organizations or owners. For example: handle ID."
                                }
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Describes the type of the metric. For example: Heart Rate, PEEP Setting, etc."
                            },
                            "unit": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Describes the unit that an observed value determined for this metric will have. For example: Percent, Seconds, etc."
                            },
                            "source": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Describes the link to the  Device that this DeviceMetric belongs to and that contains administrative device information such as manufacturer, serial number, etc."
                            },
                            "parent": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Describes the link to the  Device that this DeviceMetric belongs to and that provide information about the location of this DeviceMetric in the containment structure of the parent Device. An example would be a Device that represents a Channel. This reference can be used by a client application to distinguish DeviceMetrics that have the same type, but should be interpreted based on their containment location."
                            },
                            "operationalStatus": {
                                "type": "string",
                                "enum": [
                                    "on",
                                    "off",
                                    "standby",
                                    "entered-in-error"
                                ],
                                "description": "Indicates current operational state of the device. For example: On, Off, Standby, etc."
                            },
                            "color": {
                                "type": "string",
                                "enum": [
                                    "black",
                                    "red",
                                    "green",
                                    "yellow",
                                    "blue",
                                    "magenta",
                                    "cyan",
                                    "white"
                                ],
                                "description": "Describes the color representation for the metric. This is often used to aid clinicians to track and identify parameter types by color. In practice, consider a Patient Monitor that has ECG/HR and Pleth for example; the parameters are displayed in different characteristic colors, such as HR-blue, BP-green, and PR and SpO2- magenta."
                            },
                            "category": {
                                "type": "string",
                                "enum": [
                                    "measurement",
                                    "setting",
                                    "calculation",
                                    "unspecified"
                                ],
                                "description": "Indicates the category of the observation generation process. A DeviceMetric can be for example a setting, measurement, or calculation."
                            },
                            "measurementPeriod": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "Describes the measurement repetition time. This is not necessarily the same as the update period. The measurement repetition time can range from milliseconds up to hours. An example for a measurement repetition time in the range of milliseconds is the sampling rate of an ECG. An example for a measurement repetition time in the range of hours is a NIBP that is triggered automatically every hour. The update period may be different than the measurement repetition time, if the device does not update the published observed value with the same frequency as it was measured."
                            },
                            "calibration": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Calibration",
                                    "description": "Describes the calibrations that have been performed or that are required to be performed."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "category"
                ]
            },
            "DeviceRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers assigned to this order by the orderer or by the receiver."
                                }
                            },
                            "instantiatesCanonical": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest."
                                }
                            },
                            "instantiatesUri": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Plan/proposal/order fulfilled by this request."
                                }
                            },
                            "priorRequest": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The request takes the place of the referenced completed or terminated request(s)."
                                }
                            },
                            "groupIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Composite request this is part of."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "on-hold",
                                    "revoked",
                                    "completed",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "The status of the request."
                            },
                            "intent": {
                                "type": "string",
                                "enum": [
                                    "proposal",
                                    "plan",
                                    "directive",
                                    "order",
                                    "original-order",
                                    "reflex-order",
                                    "filler-order",
                                    "instance-order",
                                    "option"
                                ],
                                "description": "Whether the request is a proposal, plan, an original order or a reflex order."
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "routine",
                                    "urgent",
                                    "asap",
                                    "stat"
                                ],
                                "description": "Indicates how quickly the {{title}} should be addressed with respect to other requests."
                            },
                            "codeReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The details of the device to be used."
                            },
                            "codeCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The details of the device to be used."
                            },
                            "parameter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Parameter",
                                    "description": "Specific parameters for the ordered item.  For example, the prism value for lenses."
                                }
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient who will use the device."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "An encounter that provides additional context in which this request is made."
                            },
                            "occurrenceDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\"."
                            },
                            "occurrencePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\"."
                            },
                            "occurrenceTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\"."
                            },
                            "authoredOn": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When the request transitioned to being actionable."
                            },
                            "requester": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual who initiated the request and has responsibility for its activation."
                            },
                            "performerType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Desired type of performer for doing the diagnostic testing."
                            },
                            "performer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The desired performer for doing the diagnostic testing."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Reason or justification for the use of this device."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Reason or justification for the use of this device."
                                }
                            },
                            "insurance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service."
                                }
                            },
                            "supportingInfo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject's body the device will be used (i.e. the target site)."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement."
                                }
                            },
                            "relevantHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Key events in the history of the request."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "intent",
                    "subject"
                ]
            },
            "DeviceUseStatement": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "An external identifier for this statement such as an IRI."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A plan, proposal or order that is fulfilled in whole or in part by this DeviceUseStatement."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "completed",
                                    "entered-in-error",
                                    "intended",
                                    "stopped",
                                    "on-hold"
                                ],
                                "description": "A code representing the patient or other source's judgment about the state of the device used that this statement is about.  Generally this will be active or completed."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient who used the device."
                            },
                            "derivedFrom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Allows linking the DeviceUseStatement to the underlying Request, or to other information that supports or is used to derive the DeviceUseStatement."
                                }
                            },
                            "timingTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "How often the device was used."
                            },
                            "timingPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "How often the device was used."
                            },
                            "timingDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "How often the device was used."
                            },
                            "recordedOn": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The time at which the statement was made/recorded."
                            },
                            "source": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Who reported the device was being used by the patient."
                            },
                            "device": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The details of the device used."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Reason or justification for the use of the device."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates another resource whose existence justifies this DeviceUseStatement."
                                }
                            },
                            "bodySite": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the anotomic location on the subject's body where the device was used ( i.e. the target)."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Details about the device statement that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "subject",
                    "device"
                ]
            },
            "DiagnosticReport": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers assigned to this report by the performer or other systems."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Details concerning a service requested."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "registered",
                                    "partial",
                                    "preliminary",
                                    "final",
                                    "amended",
                                    "corrected",
                                    "appended",
                                    "cancelled",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "The status of the diagnostic report."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A code that classifies the clinical discipline, department or diagnostic service that created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for searching, sorting and display purposes."
                                }
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code or name that describes this diagnostic report."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The subject of the report. Usually, but not always, this is a patient. However, diagnostic services also perform analyses on specimens collected from a variety of other sources."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) which this DiagnosticReport is about."
                            },
                            "effectiveDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The time or time-period the observed values are related to. When the subject of the report is a patient, this is usually either the time of the procedure or of specimen collection(s), but very often the source of the date/time is not known, only the date/time itself."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The time or time-period the observed values are related to. When the subject of the report is a patient, this is usually either the time of the procedure or of specimen collection(s), but very often the source of the date/time is not known, only the date/time itself."
                            },
                            "issued": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The date and time that this version of the report was made available to providers, typically after the report was reviewed and verified."
                            },
                            "performer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The diagnostic service that is responsible for issuing the report."
                                }
                            },
                            "resultsInterpreter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The practitioner or organization that is responsible for the report's conclusions and interpretations."
                                }
                            },
                            "specimen": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Details about the specimens on which this diagnostic report is based."
                                }
                            },
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "[Observations](observation.html)  that are part of this diagnostic report."
                                }
                            },
                            "imagingStudy": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "One or more links to full details of any imaging performed during the diagnostic investigation. Typically, this is imaging performed by DICOM enabled modalities, but this is not required. A fully enabled PACS viewer can use this information to provide views of the source images."
                                }
                            },
                            "media": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Media",
                                    "description": "A list of key images associated with this report. The images are generally created during the diagnostic process, and may be directly of the patient, or of treated specimens (i.e. slides of interest)."
                                }
                            },
                            "conclusion": {
                                "$ref": "#/components/schemas/String",
                                "description": "Concise and clinically contextualized summary conclusion (interpretation/impression) of the diagnostic report."
                            },
                            "conclusionCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "One or more codes that represent the summary conclusion (interpretation/impression) of the diagnostic report."
                                }
                            },
                            "presentedForm": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Attachment",
                                    "description": "Rich text representation of the entire result as issued by the diagnostic service. Multiple formats are allowed but they SHALL be semantically equivalent."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "code"
                ]
            },
            "DocumentManifest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "masterIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A single identifier that uniquely identifies this manifest. Principally used to refer to the manifest in non-FHIR contexts."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Other identifiers associated with the document manifest, including version independent  identifiers."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "current",
                                    "superseded",
                                    "entered-in-error"
                                ],
                                "description": "The status of this document manifest."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The code specifying the type of clinical activity that resulted in placing the associated content into the DocumentManifest."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Who or what the set of documents is about. The documents can be about a person, (patient or healthcare practitioner), a device (i.e. machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure). If the documents cross more than one subject, then more than one subject is allowed here (unusual use case)."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When the document manifest was created for submission to the server (not necessarily the same thing as the actual resource last modified time, since it may be modified, replicated, etc.)."
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies who is the author of the manifest. Manifest author is not necessarly the author of the references included."
                                }
                            },
                            "recipient": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A patient, practitioner, or organization for which this set of documents is intended."
                                }
                            },
                            "source": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Identifies the source system, application, or software that produced the document manifest."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Human-readable description of the source document. This is sometimes known as the \"title\"."
                            },
                            "content": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The list of Resources that consist of the parts of this manifest."
                                }
                            },
                            "related": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Related",
                                    "description": "Related identifiers or resources associated with the DocumentManifest."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "content"
                ]
            },
            "DocumentReference": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "masterIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Document identifier as assigned by the source of the document. This identifier is specific to this version of the document. This unique identifier may be used elsewhere to identify this version of the document."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Other identifiers associated with the document, including version independent identifiers."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "current",
                                    "superseded",
                                    "entered-in-error"
                                ],
                                "description": "The status of this document reference."
                            },
                            "docStatus": {
                                "type": "string",
                                "enum": [
                                    "preliminary",
                                    "final",
                                    "amended",
                                    "entered-in-error"
                                ],
                                "description": "The status of the underlying document."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specifies the particular kind of document referenced  (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the document referenced."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A categorization for the type of document referenced - helps for indexing and searching. This may be implied by or derived from the code specified in the DocumentReference.type."
                                }
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Who or what the document is about. The document can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure)."
                            },
                            "date": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "When the document reference was created."
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies who is responsible for adding the information to the document."
                                }
                            },
                            "authenticator": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Which person or organization authenticates that this document is valid."
                            },
                            "custodian": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the organization or group who is responsible for ongoing maintenance of and access to the document."
                            },
                            "relatesTo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatesTo",
                                    "description": "Relationships that this document has with other document references that already exist."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Human-readable description of the source document."
                            },
                            "securityLabel": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A set of Security-Tag codes specifying the level of privacy/security of the Document. Note that DocumentReference.meta.security contains the security labels of the \"reference\" to the document, while DocumentReference.securityLabel contains a snapshot of the security labels on the document the reference refers to."
                                }
                            },
                            "content": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Content",
                                    "description": "The document and format referenced. There may be multiple content element repetitions, each with a different format."
                                }
                            },
                            "context": {
                                "$ref": "#/components/schemas/Context",
                                "description": "The clinical context in which the document was prepared."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "content"
                ]
            },
            "DomainResource": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Resource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "$ref": "#/components/schemas/Narrative",
                                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety."
                            },
                            "contained": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Resource",
                                    "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
                                }
                            },
                            "extension": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Extension",
                                    "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
                                }
                            },
                            "modifierExtension": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Extension",
                                    "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
                                }
                            }
                        }
                    }
                ]
            },
            "EffectEvidenceSynthesis": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this effect evidence synthesis when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this effect evidence synthesis is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the effect evidence synthesis is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this effect evidence synthesis when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the effect evidence synthesis when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the effect evidence synthesis author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the effect evidence synthesis. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the effect evidence synthesis."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this effect evidence synthesis. Enables tracking the life-cycle of the content."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the effect evidence synthesis was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the effect evidence synthesis changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the effect evidence synthesis."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the effect evidence synthesis from a consumer's perspective."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "A human-readable string to clarify or explain concepts about the resource."
                                }
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate effect evidence synthesis instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the effect evidence synthesis is intended to be used."
                                }
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the effect evidence synthesis and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the effect evidence synthesis."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the effect evidence synthesis content was or is planned to be in active use."
                            },
                            "topic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Descriptive topics related to the content of the EffectEvidenceSynthesis. Topics provide a high-level categorization grouping types of EffectEvidenceSynthesiss that can be useful for filtering and searching."
                                }
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                                }
                            },
                            "editor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for internal coherence of the content."
                                }
                            },
                            "reviewer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for review of some aspect of the content."
                                }
                            },
                            "endorser": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Related artifacts such as additional documentation, justification, or bibliographic references."
                                }
                            },
                            "synthesisType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of synthesis eg meta-analysis."
                            },
                            "studyType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of study eg randomized trial."
                            },
                            "population": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a EvidenceVariable resource that defines the population for the research."
                            },
                            "exposure": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a EvidenceVariable resource that defines the exposure for the research."
                            },
                            "exposureAlternative": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a EvidenceVariable resource that defines the comparison exposure for the research."
                            },
                            "outcome": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a EvidenceVariable resomece that defines the outcome for the research."
                            },
                            "sampleSize": {
                                "$ref": "#/components/schemas/SampleSize",
                                "description": "A description of the size of the sample involved in the synthesis."
                            },
                            "resultsByExposure": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ResultsByExposure",
                                    "description": "A description of the results for each exposure considered in the effect estimate."
                                }
                            },
                            "effectEstimate": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EffectEstimate",
                                    "description": "The estimated effect of the exposure variant."
                                }
                            },
                            "certainty": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Certainty",
                                    "description": "A description of the certainty of the effect estimate."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "population",
                    "exposure",
                    "exposureAlternative",
                    "outcome"
                ]
            },
            "Encounter": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifier(s) by which this encounter is known."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "planned",
                                    "arrived",
                                    "triaged",
                                    "in-progress",
                                    "onleave",
                                    "finished",
                                    "cancelled",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "planned | arrived | triaged | in-progress | onleave | finished | cancelled +."
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/StatusHistory",
                                    "description": "The status history permits the encounter resource to contain the status history without needing to read through the historical versions of the resource, or even have the server store them."
                                }
                            },
                            "class": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Concepts representing classification of patient encounter such as ambulatory (outpatient), inpatient, emergency, home health or others due to local variations."
                            },
                            "classHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ClassHistory",
                                    "description": "The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transitions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kind of discharge from emergency to inpatient."
                                }
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Specific type of encounter (e.g. e-mail consultation, surgical day-care, skilled nursing, rehabilitation)."
                                }
                            },
                            "serviceType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Broad categorization of the service that is to be provided (e.g. cardiology)."
                            },
                            "priority": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the urgency of the encounter."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient or group present at the encounter."
                            },
                            "episodeOfCare": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Where a specific encounter should be classified as a part of a specific episode(s) of care this field should be used. This association can facilitate grouping of related encounters together for a specific purpose, such as government reporting, issue tracking, association via a common problem.  The association is recorded on the encounter as these are typically created after the episode of care and grouped on entry rather than editing the episode of care to append another encounter to it (the episode of care could span years)."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The request this encounter satisfies (e.g. incoming referral or procedure request)."
                                }
                            },
                            "participant": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Participant",
                                    "description": "The list of people responsible for providing the service."
                                }
                            },
                            "appointment": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The appointment that scheduled this encounter."
                                }
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The time that the episode was in the specified status."
                            },
                            "length": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Quantity of time the encounter lasted. This excludes the time during leaves of absence."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis."
                                }
                            },
                            "diagnosis": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Diagnosis",
                                    "description": "The list of diagnosis relevant to this encounter."
                                }
                            },
                            "account": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The set of accounts that may be used for billing for this Encounter."
                                }
                            },
                            "hospitalization": {
                                "$ref": "#/components/schemas/Hospitalization",
                                "description": "Details about the admission to a healthcare service."
                            },
                            "location": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Location",
                                    "description": "List of locations where  the patient has been during this encounter."
                                }
                            },
                            "serviceProvider": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organization that is primarily responsible for this Encounter's services. This MAY be the same as the organization on the Patient record, however it could be different, such as if the actor performing the services was from an external organization (which may be billed seperately) for an external consultation.  Refer to the example bundle showing an abbreviated set of Encounters for a colonoscopy."
                            },
                            "partOf": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Another Encounter of which this encounter is a part of (administratively or in time)."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "class"
                ]
            },
            "Endpoint": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "protocol": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "A list of the messaging transport protocol(s) identifiers, supported by this endpoint."
                            },
                            "address": {
                                "$ref": "#/components/schemas/Url",
                                "description": "The network address of the endpoint. For solutions that do not use network addresses for routing, it can be just an identifier."
                            }
                        }
                    }
                ],
                "required": [
                    "protocol",
                    "address"
                ]
            },
            "EnrollmentRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "The Response business identifier."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date when this resource was created."
                            },
                            "insurer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Insurer who is target  of the request."
                            },
                            "provider": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The practitioner who is responsible for the services rendered to the patient."
                            },
                            "candidate": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Patient Resource."
                            },
                            "coverage": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the program or plan identification, underwriter or payor."
                            }
                        }
                    }
                ]
            },
            "EnrollmentResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "The Response business identifier."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "request": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Original request resource reference."
                            },
                            "outcome": {
                                "type": "string",
                                "enum": [
                                    "queued",
                                    "complete",
                                    "error",
                                    "partial"
                                ],
                                "description": "Processing status: error, complete."
                            },
                            "disposition": {
                                "$ref": "#/components/schemas/String",
                                "description": "A description of the status of the adjudication."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date when the enclosed suite of services were performed or completed."
                            },
                            "organization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Insurer who produced this adjudicated response."
                            },
                            "requestProvider": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The practitioner who is responsible for the services rendered to the patient."
                            }
                        }
                    }
                ]
            },
            "EpisodeOfCare": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "The EpisodeOfCare may be known by different identifiers for different contexts of use, such as when an external agency is tracking the Episode for funding purposes."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "planned",
                                    "waitlist",
                                    "active",
                                    "onhold",
                                    "finished",
                                    "cancelled",
                                    "entered-in-error"
                                ],
                                "description": "planned | waitlist | active | onhold | finished | cancelled."
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/StatusHistory",
                                    "description": "The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource)."
                                }
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A classification of the type of episode of care; e.g. specialist referral, disease management, type of funded care."
                                }
                            },
                            "diagnosis": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Diagnosis",
                                    "description": "The list of diagnosis relevant to this episode of care."
                                }
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient who is the focus of this episode of care."
                            },
                            "managingOrganization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organization that has assumed the specific responsibilities for the specified duration."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during this EpisodeOfCare that the specific status applied."
                            },
                            "referralRequest": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Referral Request(s) that are fulfilled by this EpisodeOfCare, incoming referrals."
                                }
                            },
                            "careManager": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The practitioner that is the care manager/care coordinator for this patient."
                            },
                            "team": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The list of practitioners that may be facilitating this episode of care for specific purposes."
                                }
                            },
                            "account": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The set of accounts that may be used for billing for this EpisodeOfCare."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "patient"
                ]
            },
            "EventDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this event definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this event definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the event definition is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this event definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the event definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the event definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the event definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the event definition."
                            },
                            "subtitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "An explanatory or alternate title for the event definition giving additional information about its content."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this event definition. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this event definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "subjectCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code or group definition that describes the intended subject of the event definition."
                            },
                            "subjectReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A code or group definition that describes the intended subject of the event definition."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the event definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the event definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the event definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the event definition from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate event definition instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the event definition is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this event definition is needed and why it has been designed as it has."
                            },
                            "usage": {
                                "$ref": "#/components/schemas/String",
                                "description": "A detailed description of how the event definition is used from a clinical perspective."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the event definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the event definition."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the event definition content was or is planned to be in active use."
                            },
                            "topic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Descriptive topics related to the module. Topics provide a high-level categorization of the module that can be useful for filtering and searching."
                                }
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                                }
                            },
                            "editor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for internal coherence of the content."
                                }
                            },
                            "reviewer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for review of some aspect of the content."
                                }
                            },
                            "endorser": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Related resources such as additional documentation, justification, or bibliographic references."
                                }
                            },
                            "trigger": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TriggerDefinition",
                                    "description": "The trigger element defines when the event occurs. If more than one trigger condition is specified, the event fires whenever any one of the trigger conditions is met."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "trigger"
                ]
            },
            "Evidence": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A manifestation that led to the recording of this detected issue."
                                }
                            },
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Links to resources that constitute evidence for the detected issue such as a GuidanceResponse or MeasureReport."
                                }
                            }
                        }
                    }
                ]
            },
            "EvidenceVariable": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this evidence variable when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this evidence variable is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the evidence variable is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this evidence variable when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the evidence variable when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the evidence variable author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the evidence variable. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the evidence variable."
                            },
                            "shortTitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary."
                            },
                            "subtitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "An explanatory or alternate title for the EvidenceVariable giving additional information about its content."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this evidence variable. Enables tracking the life-cycle of the content."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the evidence variable was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the evidence variable changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the evidence variable."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the evidence variable from a consumer's perspective."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "A human-readable string to clarify or explain concepts about the resource."
                                }
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence variable instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the evidence variable is intended to be used."
                                }
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the evidence variable and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the evidence variable."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the evidence variable content was or is planned to be in active use."
                            },
                            "topic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Descriptive topics related to the content of the EvidenceVariable. Topics provide a high-level categorization grouping types of EvidenceVariables that can be useful for filtering and searching."
                                }
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                                }
                            },
                            "editor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for internal coherence of the content."
                                }
                            },
                            "reviewer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for review of some aspect of the content."
                                }
                            },
                            "endorser": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Related artifacts such as additional documentation, justification, or bibliographic references."
                                }
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "dichotomous",
                                    "continuous",
                                    "descriptive"
                                ],
                                "description": "The type of evidence element, a population, an exposure, or an outcome."
                            },
                            "characteristic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Characteristic",
                                    "description": "A characteristic that defines the members of the evidence element. Multiple characteristics are applied with \"and\" semantics."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "characteristic"
                ]
            },
            "ExampleScenario": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this example scenario when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this example scenario is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the example scenario is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this example scenario when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the example scenario when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the example scenario author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the example scenario. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this example scenario. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this example scenario is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the example scenario was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the example scenario changes. (e.g. the 'content logical definition')."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the example scenario."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate example scenario instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the example scenario is intended to be used."
                                }
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the example scenario and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the example scenario."
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "What the example scenario resource is created for. This should not be used to show the business purpose of the scenario itself, but the purpose of documenting a scenario."
                            },
                            "actor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Actor",
                                    "description": "Actor participating in the resource."
                                }
                            },
                            "instance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Instance",
                                    "description": "Each resource and each version that is present in the workflow."
                                }
                            },
                            "process": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Process",
                                    "description": "Each major process - a group of operations."
                                }
                            },
                            "workflow": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "Another nested workflow."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "ExplanationOfBenefit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this explanation of benefit."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The category of claim, e.g. oral, pharmacy, vision, institutional, professional."
                            },
                            "subType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service."
                            },
                            "use": {
                                "type": "string",
                                "enum": [
                                    "claim",
                                    "preauthorization",
                                    "predetermination"
                                ],
                                "description": "A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for forecast reimbursement is sought."
                            },
                            "billablePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period for which charges are being submitted."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date this resource was created."
                            },
                            "enterer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Individual who created the claim, predetermination or preauthorization."
                            },
                            "insurer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party responsible for authorization, adjudication and reimbursement."
                            },
                            "provider": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The provider which is responsible for the claim, predetermination or preauthorization."
                            },
                            "priority": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The provider-required urgency of processing the request. Typical values include: stat, routine deferred."
                            },
                            "fundsReserveRequested": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code to indicate whether and for whom funds are to be reserved for future claims."
                            },
                            "fundsReserve": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom."
                            },
                            "related": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Related",
                                    "description": "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event."
                                }
                            },
                            "prescription": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Prescription to support the dispensing of pharmacy, device or vision products."
                            },
                            "originalPrescription": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products."
                            },
                            "payee": {
                                "$ref": "#/components/schemas/Payee",
                                "description": "The party to be reimbursed for cost of the products and services according to the terms of the policy."
                            },
                            "referral": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a referral resource."
                            },
                            "facility": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Facility where the services were provided."
                            },
                            "claim": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to a related claim."
                            },
                            "claimResponse": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The business identifier for the instance of the adjudication response: claim, predetermination or preauthorization response."
                            },
                            "outcome": {
                                "type": "string",
                                "enum": [
                                    "queued",
                                    "complete",
                                    "error",
                                    "partial"
                                ],
                                "description": "The outcome of the claim, predetermination, or preauthorization processing."
                            },
                            "disposition": {
                                "$ref": "#/components/schemas/String",
                                "description": "A human readable description of the status of the adjudication."
                            },
                            "preAuthRef": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Reference from the Insurer which is used in later communications which refers to this adjudication."
                                }
                            },
                            "preAuthRefPeriod": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Period",
                                    "description": "The timeframe during which the supplied preauthorization reference may be quoted on claims to obtain the adjudication as provided."
                                }
                            },
                            "careTeam": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CareTeam",
                                    "description": "The members of the team who provided the products and services."
                                }
                            },
                            "supportingInfo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SupportingInfo",
                                    "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues."
                                }
                            },
                            "diagnosis": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Diagnosis",
                                    "description": "Information about diagnoses relevant to the claim items."
                                }
                            },
                            "procedure": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Procedure",
                                    "description": "Procedures performed on the patient relevant to the billing items with the claim."
                                }
                            },
                            "precedence": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "This indicates the relative order of a series of EOBs related to different coverages for the same suite of services."
                            },
                            "insurance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Insurance",
                                    "description": "Financial instruments for reimbursement for the health care products and services specified on the claim."
                                }
                            },
                            "accident": {
                                "$ref": "#/components/schemas/Accident",
                                "description": "Details of a accident which resulted in injuries which required the products and services listed in the claim."
                            },
                            "item": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Item",
                                    "description": "A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details."
                                }
                            },
                            "addItem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AddItem",
                                    "description": "The first-tier service adjudications for payor added product or service lines."
                                }
                            },
                            "adjudication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Adjudication",
                                    "description": "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item."
                                }
                            },
                            "total": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Total",
                                    "description": "Categorized monetary totals for the adjudication."
                                }
                            },
                            "payment": {
                                "$ref": "#/components/schemas/Payment",
                                "description": "Payment details for the adjudication of the claim."
                            },
                            "formCode": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code for the form to be used for printing the content."
                            },
                            "form": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The actual form, by reference or inclusion, for printing the content or an EOB."
                            },
                            "processNote": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProcessNote",
                                    "description": "A note that describes or explains adjudication results in a human readable form."
                                }
                            },
                            "benefitPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The term of the benefits documented in this response."
                            },
                            "benefitBalance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BenefitBalance",
                                    "description": "Balance by Benefit Category."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "type",
                    "use",
                    "patient",
                    "created",
                    "insurer",
                    "provider",
                    "outcome",
                    "insurance"
                ]
            },
            "FamilyMemberHistory": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifiers assigned to this family member history by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "instantiatesCanonical": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory."
                                }
                            },
                            "instantiatesUri": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "partial",
                                    "completed",
                                    "entered-in-error",
                                    "health-unknown"
                                ],
                                "description": "A code specifying the status of the record of the family history of a specific family member."
                            },
                            "dataAbsentReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Describes why the family member's history is not available."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person who this history concerns."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date (and possibly time) when the family member history was recorded or last updated."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "This will either be a name or a description; e.g. \"Aunt Susan\", \"my cousin with the red hair\"."
                            },
                            "relationship": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of relationship this person has to the patient (father, mother, brother etc.)."
                            },
                            "sex": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The birth sex of the family member."
                            },
                            "bornPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The actual or approximate date of birth of the relative."
                            },
                            "bornDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The actual or approximate date of birth of the relative."
                            },
                            "bornString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The actual or approximate date of birth of the relative."
                            },
                            "ageAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "The age of the relative at the time the family member history is recorded."
                            },
                            "ageRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The age of the relative at the time the family member history is recorded."
                            },
                            "ageString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The age of the relative at the time the family member history is recorded."
                            },
                            "estimatedAge": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If true, indicates that the age value specified is an estimated value."
                            },
                            "deceasedBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record."
                            },
                            "deceasedAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record."
                            },
                            "deceasedRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record."
                            },
                            "deceasedDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record."
                            },
                            "deceasedString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Describes why the family member history occurred in coded or textual form."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates a Condition, Observation, AllergyIntolerance, or QuestionnaireResponse that justifies this family member history event."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "This property allows a non condition-specific note to the made about the related person. Ideally, the note would be in the condition property, but this is not always possible."
                                }
                            },
                            "condition": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Condition",
                                    "description": "The significant Conditions (or condition) that the family member had. This is a repeating section to allow a system to represent more than one condition per resource, though there is nothing stopping multiple resources - one per condition."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "patient",
                    "relationship"
                ]
            },
            "Flag": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifiers assigned to this flag by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "inactive",
                                    "entered-in-error"
                                ],
                                "description": "Supports basic workflow."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Allows a flag to be divided into different categories like clinical, administrative etc. Intended to be used as a means of filtering which flags are displayed to particular user or in a given context."
                                }
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The coded value or textual component of the flag to display to the user."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient, location, group, organization, or practitioner etc. this is about record this flag is associated with."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period of time from the activation of the flag to inactivation of the flag. If the flag is active, the end of the period should be unspecified."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "This alert is only relevant during the encounter."
                            },
                            "author": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person, organization or device that created the flag."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "code",
                    "subject"
                ]
            },
            "Goal": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates a category the goal falls within."
                            },
                            "description": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Human-readable and/or coded description of a specific desired objective of care, such as \"control blood pressure\" or \"negotiate an obstacle course\" or \"dance with child at wedding\"."
                            },
                            "priority": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the expected level of importance associated with reaching/sustaining the defined goal."
                            },
                            "start": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The event after which the goal should begin being pursued."
                            },
                            "addresses": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Identifies problems, conditions, issues, or concerns the goal is intended to address."
                                }
                            },
                            "documentation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Didactic or other informational resources associated with the goal that provide further supporting information about the goal. Information resources can include inline text commentary and links to web resources."
                                }
                            },
                            "target": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Target",
                                    "description": "Indicates what should be done and within what timeframe."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "description"
                ]
            },
            "GraphDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this graph definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this graph definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the graph definition is stored on different servers."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the graph definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the graph definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the graph definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this graph definition. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this graph definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the graph definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the graph definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the graph definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the graph definition from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate graph definition instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the graph definition is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this graph definition is needed and why it has been designed as it has."
                            },
                            "start": {
                                "type": "string",
                                "enum": [
                                    "Account",
                                    "ActivityDefinition",
                                    "AdverseEvent",
                                    "AllergyIntolerance",
                                    "Appointment",
                                    "AppointmentResponse",
                                    "AuditEvent",
                                    "Basic",
                                    "Binary",
                                    "BiologicallyDerivedProduct",
                                    "BodyStructure",
                                    "Bundle",
                                    "CapabilityStatement",
                                    "CarePlan",
                                    "CareTeam",
                                    "CatalogEntry",
                                    "ChargeItem",
                                    "ChargeItemDefinition",
                                    "Claim",
                                    "ClaimResponse",
                                    "ClinicalImpression",
                                    "CodeSystem",
                                    "Communication",
                                    "CommunicationRequest",
                                    "CompartmentDefinition",
                                    "Composition",
                                    "ConceptMap",
                                    "Condition",
                                    "Consent",
                                    "Contract",
                                    "Coverage",
                                    "CoverageEligibilityRequest",
                                    "CoverageEligibilityResponse",
                                    "DetectedIssue",
                                    "Device",
                                    "DeviceDefinition",
                                    "DeviceMetric",
                                    "DeviceRequest",
                                    "DeviceUseStatement",
                                    "DiagnosticReport",
                                    "DocumentManifest",
                                    "DocumentReference",
                                    "DomainResource",
                                    "EffectEvidenceSynthesis",
                                    "Encounter",
                                    "Endpoint",
                                    "EnrollmentRequest",
                                    "EnrollmentResponse",
                                    "EpisodeOfCare",
                                    "EventDefinition",
                                    "Evidence",
                                    "EvidenceVariable",
                                    "ExampleScenario",
                                    "ExplanationOfBenefit",
                                    "FamilyMemberHistory",
                                    "Flag",
                                    "Goal",
                                    "GraphDefinition",
                                    "Group",
                                    "GuidanceResponse",
                                    "HealthcareService",
                                    "ImagingStudy",
                                    "Immunization",
                                    "ImmunizationEvaluation",
                                    "ImmunizationRecommendation",
                                    "ImplementationGuide",
                                    "InsurancePlan",
                                    "Invoice",
                                    "Library",
                                    "Linkage",
                                    "List",
                                    "Location",
                                    "Measure",
                                    "MeasureReport",
                                    "Media",
                                    "Medication",
                                    "MedicationAdministration",
                                    "MedicationDispense",
                                    "MedicationKnowledge",
                                    "MedicationRequest",
                                    "MedicationStatement",
                                    "MedicinalProduct",
                                    "MedicinalProductAuthorization",
                                    "MedicinalProductContraindication",
                                    "MedicinalProductIndication",
                                    "MedicinalProductIngredient",
                                    "MedicinalProductInteraction",
                                    "MedicinalProductManufactured",
                                    "MedicinalProductPackaged",
                                    "MedicinalProductPharmaceutical",
                                    "MedicinalProductUndesirableEffect",
                                    "MessageDefinition",
                                    "MessageHeader",
                                    "MolecularSequence",
                                    "NamingSystem",
                                    "NutritionOrder",
                                    "Observation",
                                    "ObservationDefinition",
                                    "OperationDefinition",
                                    "OperationOutcome",
                                    "Organization",
                                    "OrganizationAffiliation",
                                    "Parameters",
                                    "Patient",
                                    "PaymentNotice",
                                    "PaymentReconciliation",
                                    "Person",
                                    "PlanDefinition",
                                    "Practitioner",
                                    "PractitionerRole",
                                    "Procedure",
                                    "Provenance",
                                    "Questionnaire",
                                    "QuestionnaireResponse",
                                    "RelatedPerson",
                                    "RequestGroup",
                                    "ResearchDefinition",
                                    "ResearchElementDefinition",
                                    "ResearchStudy",
                                    "ResearchSubject",
                                    "Resource",
                                    "RiskAssessment",
                                    "RiskEvidenceSynthesis",
                                    "Schedule",
                                    "SearchParameter",
                                    "ServiceRequest",
                                    "Slot",
                                    "Specimen",
                                    "SpecimenDefinition",
                                    "StructureDefinition",
                                    "StructureMap",
                                    "Subscription",
                                    "Substance",
                                    "SubstanceNucleicAcid",
                                    "SubstancePolymer",
                                    "SubstanceProtein",
                                    "SubstanceReferenceInformation",
                                    "SubstanceSourceMaterial",
                                    "SubstanceSpecification",
                                    "SupplyDelivery",
                                    "SupplyRequest",
                                    "Task",
                                    "TerminologyCapabilities",
                                    "TestReport",
                                    "TestScript",
                                    "ValueSet",
                                    "VerificationResult",
                                    "VisionPrescription"
                                ],
                                "description": "The type of FHIR resource at which instances of this graph start."
                            },
                            "profile": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The profile that describes the use of the base resource."
                            },
                            "link": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Link",
                                    "description": "Links this graph makes rules about."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "status",
                    "start"
                ]
            },
            "Group": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/Id",
                                "description": "A unique name for the group for the convenience of human readers."
                            },
                            "extends": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Another group that this group adds rules to."
                            },
                            "typeMode": {
                                "type": "string",
                                "enum": [
                                    "none",
                                    "types",
                                    "type-and-types"
                                ],
                                "description": "If this is the default rule set to apply for the source type or this combination of types."
                            },
                            "documentation": {
                                "$ref": "#/components/schemas/String",
                                "description": "Additional supporting documentation that explains the purpose of the group and the types of mappings within it."
                            },
                            "input": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Input",
                                    "description": "A name assigned to an instance of data. The instance must be provided when the mapping is invoked."
                                }
                            },
                            "rule": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Rule",
                                    "description": "Transform Rule from source to target."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "typeMode",
                    "input",
                    "rule"
                ]
            },
            "GuidanceResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "requestIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "The identifier of the request associated with this response. If an identifier was given as part of the request, it will be reproduced here to enable the requester to more easily identify the response in a multi-request scenario."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Allows a service to provide  unique, business identifiers for the response."
                                }
                            },
                            "moduleUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An identifier, CodeableConcept or canonical reference to the guidance that was requested."
                            },
                            "moduleCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "An identifier, CodeableConcept or canonical reference to the guidance that was requested."
                            },
                            "moduleCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "An identifier, CodeableConcept or canonical reference to the guidance that was requested."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "success",
                                    "data-requested",
                                    "data-required",
                                    "in-progress",
                                    "failure",
                                    "entered-in-error"
                                ],
                                "description": "The status of the response. If the evaluation is completed successfully, the status will indicate success. However, in order to complete the evaluation, the engine may require more information. In this case, the status will be data-required, and the response will contain a description of the additional required information. If the evaluation completed successfully, but the engine determines that a potentially more accurate response could be provided if more data was available, the status will be data-requested, and the response will contain a description of the additional requested information."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient for which the request was processed."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The encounter during which this response was created or to which the creation of this record is tightly associated."
                            },
                            "occurrenceDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Indicates when the guidance response was processed."
                            },
                            "performer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Provides a reference to the device that performed the guidance."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Describes the reason for the guidance response in coded or textual form."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates the reason the request was initiated. This is typically provided as a parameter to the evaluation and echoed by the service, although for some use cases, such as subscription- or event-based scenarios, it may provide an indication of the cause for the response."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Provides a mechanism to communicate additional information about the response."
                                }
                            },
                            "evaluationMessage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Messages resulting from the evaluation of the artifact or artifacts. As part of evaluating the request, the engine may produce informational or warning messages. These messages will be provided by this element."
                                }
                            },
                            "outputParameters": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The output parameters of the evaluation, if any. Many modules will result in the return of specific resources such as procedure or communication requests that are returned as part of the operation result. However, modules may define specific outputs that would be returned as the result of the evaluation, and these would be returned in this element."
                            },
                            "result": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The actions, if any, produced by the evaluation of the artifact."
                            },
                            "dataRequirement": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DataRequirement",
                                    "description": "If the evaluation could not be completed due to lack of information, or additional information would potentially result in a more accurate response, this element will a description of the data required in order to proceed with the evaluation. A subsequent request to the service should include this data."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "HealthcareService": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "External identifiers for this item."
                                }
                            },
                            "active": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "This flag is used to mark the record to not be used. This is not used when a center is closed for maintenance, or for holidays, the notAvailable period is to be used for this."
                            },
                            "providedBy": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organization that provides this healthcare service."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Identifies the broad category of service being performed or delivered."
                                }
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The specific type of service that may be delivered or performed."
                                }
                            },
                            "specialty": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Collection of specialties handled by the service site. This is more of a medical term."
                                }
                            },
                            "location": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The location(s) where this healthcare service may be provided."
                                }
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Further description of the service as it would be presented to a consumer while searching."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Any additional description of the service and/or any specific issues not covered by the other attributes, which can be displayed as further detail under the serviceName."
                            },
                            "extraDetails": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Extra details about the service that can't be placed in the other fields."
                            },
                            "photo": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "If there is a photo/symbol associated with this HealthcareService, it may be included here to facilitate quick identification of the service in a list."
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "List of contacts related to this specific healthcare service."
                                }
                            },
                            "coverageArea": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The location(s) that this service is available to (not where the service is provided)."
                                }
                            },
                            "serviceProvisionCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The code(s) that detail the conditions under which the healthcare service is available/offered."
                                }
                            },
                            "eligibility": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Eligibility",
                                    "description": "Does this service have specific eligibility requirements that need to be met in order to use the service?"
                                }
                            },
                            "program": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Programs that this service is applicable to."
                                }
                            },
                            "characteristic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Collection of characteristics (attributes)."
                                }
                            },
                            "communication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Some services are specifically made available in multiple languages, this property permits a directory to declare the languages this is offered in. Typically this is only provided where a service operates in communities with mixed languages used."
                                }
                            },
                            "referralMethod": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Ways that the service accepts referrals, if this is not provided then it is implied that no referral is required."
                                }
                            },
                            "appointmentRequired": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates whether or not a prospective consumer will require an appointment for a particular service at a site to be provided by the Organization. Indicates if an appointment is required for access to this service."
                            },
                            "availableTime": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AvailableTime",
                                    "description": "A collection of times that the Service Site is available."
                                }
                            },
                            "notAvailable": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NotAvailable",
                                    "description": "The HealthcareService is not available during this period of time due to the provided reason."
                                }
                            },
                            "availabilityExceptions": {
                                "$ref": "#/components/schemas/String",
                                "description": "A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times."
                            },
                            "endpoint": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Technical endpoints providing access to services operated for the specific healthcare services defined at this resource."
                                }
                            }
                        }
                    }
                ]
            },
            "ImagingStudy": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers for the ImagingStudy such as DICOM Study Instance UID, and Accession Number."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "registered",
                                    "available",
                                    "cancelled",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "The current state of the ImagingStudy."
                            },
                            "modality": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "A list of all the series.modality values that are actual acquisition modalities, i.e. those in the DICOM Context Group 29 (value set OID 1.2.840.10008.6.1.19)."
                                }
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The subject, typically a patient, of the imaging study."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The healthcare event (e.g. a patient and healthcare provider interaction) during which this ImagingStudy is made."
                            },
                            "started": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date and time the study started."
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A list of the diagnostic requests that resulted in this imaging study being performed."
                                }
                            },
                            "referrer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The requesting/referring physician."
                            },
                            "interpreter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Who read the study and interpreted the images or other content."
                                }
                            },
                            "endpoint": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The network service providing access (e.g., query, view, or retrieval) for the study. See implementation notes for information about using DICOM endpoints. A study-level endpoint applies to each series in the study, unless overridden by a series-level endpoint with the same Endpoint.connectionType."
                                }
                            },
                            "numberOfSeries": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "Number of Series in the Study. This value given may be larger than the number of series elements this Resource contains due to resource availability, security, or other factors. This element should be present if any series elements are present."
                            },
                            "numberOfInstances": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "Number of SOP Instances in Study. This value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present."
                            },
                            "procedureReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The procedure which this ImagingStudy was part of."
                            },
                            "procedureCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The code for the performed procedure type."
                                }
                            },
                            "location": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The principal physical location where the ImagingStudy was performed."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Description of clinical condition indicating why the ImagingStudy was requested."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates another resource whose existence justifies this Study."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Per the recommended DICOM mapping, this element is derived from the Study Description attribute (0008,1030). Observations or findings about the imaging study should be recorded in another resource, e.g. Observation, and not in this element."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "The Imaging Manager description of the study. Institution-generated description or classification of the Study (component) performed."
                            },
                            "series": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Series",
                                    "description": "Each study has one or more series of images or other content."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "subject"
                ]
            },
            "Immunization": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this immunization record."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "completed",
                                    "entered-in-error",
                                    "not-done"
                                ],
                                "description": "Indicates the current status of the immunization event."
                            },
                            "statusReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the reason the immunization event was not performed."
                            },
                            "vaccineCode": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Vaccine that was administered or was to be administered."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient who either received or did not receive the immunization."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The visit or admission or other contact between patient and health care provider the immunization was performed as part of."
                            },
                            "occurrenceDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date vaccine administered or was to be administered."
                            },
                            "occurrenceString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Date vaccine administered or was to be administered."
                            },
                            "recorded": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date the occurrence of the immunization was first captured in the record - potentially significantly after the occurrence of the event."
                            },
                            "primarySource": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "An indication that the content of the record is based on information from the person who administered the vaccine. This reflects the context under which the data was originally recorded."
                            },
                            "reportOrigin": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The source of the data when the report of the immunization event is not based on information from the person who administered the vaccine."
                            },
                            "location": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The service delivery location where the vaccine administration occurred."
                            },
                            "manufacturer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Name of vaccine manufacturer."
                            },
                            "lotNumber": {
                                "$ref": "#/components/schemas/String",
                                "description": "Lot number of the  vaccine product."
                            },
                            "expirationDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "Date vaccine batch expires."
                            },
                            "site": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Body site where vaccine was administered."
                            },
                            "route": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The path by which the vaccine product is taken into the body."
                            },
                            "doseQuantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The quantity of vaccine product that was administered."
                            },
                            "performer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Performer",
                                    "description": "Indicates who performed the immunization event."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Extra information about the immunization that is not conveyed by the other attributes."
                                }
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Reasons why the vaccine was administered."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Condition, Observation or DiagnosticReport that supports why the immunization was administered."
                                }
                            },
                            "isSubpotent": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indication if a dose is considered to be subpotent. By default, a dose should be considered to be potent."
                            },
                            "subpotentReason": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Reason why a dose is considered to be subpotent."
                                }
                            },
                            "education": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Education",
                                    "description": "Educational material presented to the patient (or guardian) at the time of vaccine administration."
                                }
                            },
                            "programEligibility": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Indicates a patient's eligibility for a funding program."
                                }
                            },
                            "fundingSource": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the source of the vaccine actually administered. This may be different than the patient eligibility (e.g. the patient may be eligible for a publically purchased vaccine but due to inventory issues, vaccine purchased with private funds was actually administered)."
                            },
                            "reaction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reaction",
                                    "description": "Categorical data indicating that an adverse event is associated in time to an immunization."
                                }
                            },
                            "protocolApplied": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProtocolApplied",
                                    "description": "The protocol (set of recommendations) being followed by the provider who administered the dose."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "vaccineCode",
                    "patient"
                ]
            },
            "ImmunizationEvaluation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this immunization evaluation record."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "completed",
                                    "entered-in-error"
                                ],
                                "description": "Indicates the current status of the evaluation of the vaccination administration event."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual for whom the evaluation is being done."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date the evaluation of the vaccine administration event was performed."
                            },
                            "authority": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Indicates the authority who published the protocol (e.g. ACIP)."
                            },
                            "targetDisease": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The vaccine preventable disease the dose is being evaluated against."
                            },
                            "immunizationEvent": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The vaccine administration event being evaluated."
                            },
                            "doseStatus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates if the dose is valid or not valid with respect to the published recommendations."
                            },
                            "doseStatusReason": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Provides an explanation as to why the vaccine administration event is valid or not relative to the published recommendations."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Additional information about the evaluation."
                            },
                            "series": {
                                "$ref": "#/components/schemas/String",
                                "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority."
                            },
                            "doseNumberPositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Nominal position in a series."
                            },
                            "doseNumberString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Nominal position in a series."
                            },
                            "seriesDosesPositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "The recommended number of doses to achieve immunity."
                            },
                            "seriesDosesString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The recommended number of doses to achieve immunity."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "patient",
                    "targetDisease",
                    "immunizationEvent",
                    "doseStatus"
                ]
            },
            "ImmunizationRecommendation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this particular recommendation record."
                                }
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient the recommendation(s) are for."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date the immunization recommendation(s) were created."
                            },
                            "authority": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Indicates the authority who published the protocol (e.g. ACIP)."
                            },
                            "recommendation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Recommendation",
                                    "description": "Vaccine administration recommendations."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "patient",
                    "date",
                    "recommendation"
                ]
            },
            "ImplementationGuide": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this implementation guide when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this implementation guide is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the implementation guide is stored on different servers."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the implementation guide when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the implementation guide author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the implementation guide. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the implementation guide."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this implementation guide. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this implementation guide is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the implementation guide was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the implementation guide changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the implementation guide."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the implementation guide from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate implementation guide instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the implementation guide is intended to be used."
                                }
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the implementation guide and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the implementation guide."
                            },
                            "packageId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The NPM package name for this Implementation Guide, used in the NPM package distribution, which is the primary mechanism by which FHIR based tooling manages IG dependencies. This value must be globally unique, and should be assigned with care."
                            },
                            "license": {
                                "type": "string",
                                "enum": [
                                    "not-open-source",
                                    "0BSD",
                                    "AAL",
                                    "Abstyles",
                                    "Adobe-2006",
                                    "Adobe-Glyph",
                                    "ADSL",
                                    "AFL-1.1",
                                    "AFL-1.2",
                                    "AFL-2.0",
                                    "AFL-2.1",
                                    "AFL-3.0",
                                    "Afmparse",
                                    "AGPL-1.0-only",
                                    "AGPL-1.0-or-later",
                                    "AGPL-3.0-only",
                                    "AGPL-3.0-or-later",
                                    "Aladdin",
                                    "AMDPLPA",
                                    "AML",
                                    "AMPAS",
                                    "ANTLR-PD",
                                    "Apache-1.0",
                                    "Apache-1.1",
                                    "Apache-2.0",
                                    "APAFML",
                                    "APL-1.0",
                                    "APSL-1.0",
                                    "APSL-1.1",
                                    "APSL-1.2",
                                    "APSL-2.0",
                                    "Artistic-1.0-cl8",
                                    "Artistic-1.0-Perl",
                                    "Artistic-1.0",
                                    "Artistic-2.0",
                                    "Bahyph",
                                    "Barr",
                                    "Beerware",
                                    "BitTorrent-1.0",
                                    "BitTorrent-1.1",
                                    "Borceux",
                                    "BSD-1-Clause",
                                    "BSD-2-Clause-FreeBSD",
                                    "BSD-2-Clause-NetBSD",
                                    "BSD-2-Clause-Patent",
                                    "BSD-2-Clause",
                                    "BSD-3-Clause-Attribution",
                                    "BSD-3-Clause-Clear",
                                    "BSD-3-Clause-LBNL",
                                    "BSD-3-Clause-No-Nuclear-License-2014",
                                    "BSD-3-Clause-No-Nuclear-License",
                                    "BSD-3-Clause-No-Nuclear-Warranty",
                                    "BSD-3-Clause",
                                    "BSD-4-Clause-UC",
                                    "BSD-4-Clause",
                                    "BSD-Protection",
                                    "BSD-Source-Code",
                                    "BSL-1.0",
                                    "bzip2-1.0.5",
                                    "bzip2-1.0.6",
                                    "Caldera",
                                    "CATOSL-1.1",
                                    "CC-BY-1.0",
                                    "CC-BY-2.0",
                                    "CC-BY-2.5",
                                    "CC-BY-3.0",
                                    "CC-BY-4.0",
                                    "CC-BY-NC-1.0",
                                    "CC-BY-NC-2.0",
                                    "CC-BY-NC-2.5",
                                    "CC-BY-NC-3.0",
                                    "CC-BY-NC-4.0",
                                    "CC-BY-NC-ND-1.0",
                                    "CC-BY-NC-ND-2.0",
                                    "CC-BY-NC-ND-2.5",
                                    "CC-BY-NC-ND-3.0",
                                    "CC-BY-NC-ND-4.0",
                                    "CC-BY-NC-SA-1.0",
                                    "CC-BY-NC-SA-2.0",
                                    "CC-BY-NC-SA-2.5",
                                    "CC-BY-NC-SA-3.0",
                                    "CC-BY-NC-SA-4.0",
                                    "CC-BY-ND-1.0",
                                    "CC-BY-ND-2.0",
                                    "CC-BY-ND-2.5",
                                    "CC-BY-ND-3.0",
                                    "CC-BY-ND-4.0",
                                    "CC-BY-SA-1.0",
                                    "CC-BY-SA-2.0",
                                    "CC-BY-SA-2.5",
                                    "CC-BY-SA-3.0",
                                    "CC-BY-SA-4.0",
                                    "CC0-1.0",
                                    "CDDL-1.0",
                                    "CDDL-1.1",
                                    "CDLA-Permissive-1.0",
                                    "CDLA-Sharing-1.0",
                                    "CECILL-1.0",
                                    "CECILL-1.1",
                                    "CECILL-2.0",
                                    "CECILL-2.1",
                                    "CECILL-B",
                                    "CECILL-C",
                                    "ClArtistic",
                                    "CNRI-Jython",
                                    "CNRI-Python-GPL-Compatible",
                                    "CNRI-Python",
                                    "Condor-1.1",
                                    "CPAL-1.0",
                                    "CPL-1.0",
                                    "CPOL-1.02",
                                    "Crossword",
                                    "CrystalStacker",
                                    "CUA-OPL-1.0",
                                    "Cube",
                                    "curl",
                                    "D-FSL-1.0",
                                    "diffmark",
                                    "DOC",
                                    "Dotseqn",
                                    "DSDP",
                                    "dvipdfm",
                                    "ECL-1.0",
                                    "ECL-2.0",
                                    "EFL-1.0",
                                    "EFL-2.0",
                                    "eGenix",
                                    "Entessa",
                                    "EPL-1.0",
                                    "EPL-2.0",
                                    "ErlPL-1.1",
                                    "EUDatagrid",
                                    "EUPL-1.0",
                                    "EUPL-1.1",
                                    "EUPL-1.2",
                                    "Eurosym",
                                    "Fair",
                                    "Frameworx-1.0",
                                    "FreeImage",
                                    "FSFAP",
                                    "FSFUL",
                                    "FSFULLR",
                                    "FTL",
                                    "GFDL-1.1-only",
                                    "GFDL-1.1-or-later",
                                    "GFDL-1.2-only",
                                    "GFDL-1.2-or-later",
                                    "GFDL-1.3-only",
                                    "GFDL-1.3-or-later",
                                    "Giftware",
                                    "GL2PS",
                                    "Glide",
                                    "Glulxe",
                                    "gnuplot",
                                    "GPL-1.0-only",
                                    "GPL-1.0-or-later",
                                    "GPL-2.0-only",
                                    "GPL-2.0-or-later",
                                    "GPL-3.0-only",
                                    "GPL-3.0-or-later",
                                    "gSOAP-1.3b",
                                    "HaskellReport",
                                    "HPND",
                                    "IBM-pibs",
                                    "ICU",
                                    "IJG",
                                    "ImageMagick",
                                    "iMatix",
                                    "Imlib2",
                                    "Info-ZIP",
                                    "Intel-ACPI",
                                    "Intel",
                                    "Interbase-1.0",
                                    "IPA",
                                    "IPL-1.0",
                                    "ISC",
                                    "JasPer-2.0",
                                    "JSON",
                                    "LAL-1.2",
                                    "LAL-1.3",
                                    "Latex2e",
                                    "Leptonica",
                                    "LGPL-2.0-only",
                                    "LGPL-2.0-or-later",
                                    "LGPL-2.1-only",
                                    "LGPL-2.1-or-later",
                                    "LGPL-3.0-only",
                                    "LGPL-3.0-or-later",
                                    "LGPLLR",
                                    "Libpng",
                                    "libtiff",
                                    "LiLiQ-P-1.1",
                                    "LiLiQ-R-1.1",
                                    "LiLiQ-Rplus-1.1",
                                    "Linux-OpenIB",
                                    "LPL-1.0",
                                    "LPL-1.02",
                                    "LPPL-1.0",
                                    "LPPL-1.1",
                                    "LPPL-1.2",
                                    "LPPL-1.3a",
                                    "LPPL-1.3c",
                                    "MakeIndex",
                                    "MirOS",
                                    "MIT-0",
                                    "MIT-advertising",
                                    "MIT-CMU",
                                    "MIT-enna",
                                    "MIT-feh",
                                    "MIT",
                                    "MITNFA",
                                    "Motosoto",
                                    "mpich2",
                                    "MPL-1.0",
                                    "MPL-1.1",
                                    "MPL-2.0-no-copyleft-exception",
                                    "MPL-2.0",
                                    "MS-PL",
                                    "MS-RL",
                                    "MTLL",
                                    "Multics",
                                    "Mup",
                                    "NASA-1.3",
                                    "Naumen",
                                    "NBPL-1.0",
                                    "NCSA",
                                    "Net-SNMP",
                                    "NetCDF",
                                    "Newsletr",
                                    "NGPL",
                                    "NLOD-1.0",
                                    "NLPL",
                                    "Nokia",
                                    "NOSL",
                                    "Noweb",
                                    "NPL-1.0",
                                    "NPL-1.1",
                                    "NPOSL-3.0",
                                    "NRL",
                                    "NTP",
                                    "OCCT-PL",
                                    "OCLC-2.0",
                                    "ODbL-1.0",
                                    "OFL-1.0",
                                    "OFL-1.1",
                                    "OGTSL",
                                    "OLDAP-1.1",
                                    "OLDAP-1.2",
                                    "OLDAP-1.3",
                                    "OLDAP-1.4",
                                    "OLDAP-2.0.1",
                                    "OLDAP-2.0",
                                    "OLDAP-2.1",
                                    "OLDAP-2.2.1",
                                    "OLDAP-2.2.2",
                                    "OLDAP-2.2",
                                    "OLDAP-2.3",
                                    "OLDAP-2.4",
                                    "OLDAP-2.5",
                                    "OLDAP-2.6",
                                    "OLDAP-2.7",
                                    "OLDAP-2.8",
                                    "OML",
                                    "OpenSSL",
                                    "OPL-1.0",
                                    "OSET-PL-2.1",
                                    "OSL-1.0",
                                    "OSL-1.1",
                                    "OSL-2.0",
                                    "OSL-2.1",
                                    "OSL-3.0",
                                    "PDDL-1.0",
                                    "PHP-3.0",
                                    "PHP-3.01",
                                    "Plexus",
                                    "PostgreSQL",
                                    "psfrag",
                                    "psutils",
                                    "Python-2.0",
                                    "Qhull",
                                    "QPL-1.0",
                                    "Rdisc",
                                    "RHeCos-1.1",
                                    "RPL-1.1",
                                    "RPL-1.5",
                                    "RPSL-1.0",
                                    "RSA-MD",
                                    "RSCPL",
                                    "Ruby",
                                    "SAX-PD",
                                    "Saxpath",
                                    "SCEA",
                                    "Sendmail",
                                    "SGI-B-1.0",
                                    "SGI-B-1.1",
                                    "SGI-B-2.0",
                                    "SimPL-2.0",
                                    "SISSL-1.2",
                                    "SISSL",
                                    "Sleepycat",
                                    "SMLNJ",
                                    "SMPPL",
                                    "SNIA",
                                    "Spencer-86",
                                    "Spencer-94",
                                    "Spencer-99",
                                    "SPL-1.0",
                                    "SugarCRM-1.1.3",
                                    "SWL",
                                    "TCL",
                                    "TCP-wrappers",
                                    "TMate",
                                    "TORQUE-1.1",
                                    "TOSL",
                                    "Unicode-DFS-2015",
                                    "Unicode-DFS-2016",
                                    "Unicode-TOU",
                                    "Unlicense",
                                    "UPL-1.0",
                                    "Vim",
                                    "VOSTROM",
                                    "VSL-1.0",
                                    "W3C-19980720",
                                    "W3C-20150513",
                                    "W3C",
                                    "Watcom-1.0",
                                    "Wsuipa",
                                    "WTFPL",
                                    "X11",
                                    "Xerox",
                                    "XFree86-1.1",
                                    "xinetd",
                                    "Xnet",
                                    "xpp",
                                    "XSkat",
                                    "YPL-1.0",
                                    "YPL-1.1",
                                    "Zed",
                                    "Zend-2.0",
                                    "Zimbra-1.3",
                                    "Zimbra-1.4",
                                    "zlib-acknowledgement",
                                    "Zlib",
                                    "ZPL-1.1",
                                    "ZPL-2.0",
                                    "ZPL-2.1"
                                ],
                                "description": "The license that applies to this Implementation Guide, using an SPDX license code, or 'not-open-source'."
                            },
                            "fhirVersion": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "0.01",
                                        "0.05",
                                        "0.06",
                                        "0.11",
                                        "0.0.80",
                                        "0.0.81",
                                        "0.0.82",
                                        "0.4.0",
                                        "0.5.0",
                                        "1.0.0",
                                        "1.0.1",
                                        "1.0.2",
                                        "1.1.0",
                                        "1.4.0",
                                        "1.6.0",
                                        "1.8.0",
                                        "3.0.0",
                                        "3.0.1",
                                        "3.3.0",
                                        "3.5.0",
                                        "4.0.0"
                                    ],
                                    "description": "The version(s) of the FHIR specification that this ImplementationGuide targets - e.g. describes how to use. The value of this element is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.0.0. for this version."
                                }
                            },
                            "dependsOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DependsOn",
                                    "description": "Another implementation guide that this implementation depends on. Typically, an implementation guide uses value sets, profiles etc.defined in other implementation guides."
                                }
                            },
                            "global": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Global",
                                    "description": "A set of profiles that all resources covered by this implementation guide must conform to."
                                }
                            },
                            "definition": {
                                "$ref": "#/components/schemas/Definition",
                                "description": "The information needed by an IG publisher tool to publish the whole implementation guide."
                            },
                            "manifest": {
                                "$ref": "#/components/schemas/Manifest",
                                "description": "Information about an assembled implementation guide, created by the publication tooling."
                            }
                        }
                    }
                ],
                "required": [
                    "url",
                    "name",
                    "status",
                    "packageId",
                    "fhirVersion"
                ]
            },
            "InsurancePlan": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifiers assigned to this health insurance product which remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The current state of the health insurance product."
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The kind of health insurance product."
                                }
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Official name of the health insurance product as designated by the owner."
                            },
                            "alias": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "A list of alternate names that the product is known as, or was known as in the past."
                                }
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period of time that the health insurance product is available."
                            },
                            "ownedBy": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The entity that is providing  the health insurance product and underwriting the risk.  This is typically an insurance carriers, other third-party payers, or health plan sponsors comonly referred to as 'payers'."
                            },
                            "administeredBy": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "An organization which administer other services such as underwriting, customer service and/or claims processing on behalf of the health insurance product owner."
                            },
                            "coverageArea": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The geographic region in which a health insurance product's benefits apply."
                                }
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Contact",
                                    "description": "The contact for the health insurance product for a certain purpose."
                                }
                            },
                            "endpoint": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The technical endpoints providing access to services operated for the health insurance product."
                                }
                            },
                            "network": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Reference to the network included in the health insurance product."
                                }
                            },
                            "coverage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coverage",
                                    "description": "Details about the coverage offered by the insurance product."
                                }
                            },
                            "plan": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Plan",
                                    "description": "Details about an insurance plan."
                                }
                            }
                        }
                    }
                ]
            },
            "Invoice": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifier of this Invoice, often used for reference in correspondence about this invoice or for tracking of payments."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "issued",
                                    "balanced",
                                    "cancelled",
                                    "entered-in-error"
                                ],
                                "description": "The current state of the Invoice."
                            },
                            "cancelledReason": {
                                "$ref": "#/components/schemas/String",
                                "description": "In case of Invoice cancellation a reason must be given (entered in error, superseded by corrected invoice etc.)."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of Invoice depending on domain, realm an usage (e.g. internal/external, dental, preliminary)."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual or set of individuals receiving the goods and services billed in this invoice."
                            },
                            "recipient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual or Organization responsible for balancing of this invoice."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date/time(s) of when this Invoice was posted."
                            },
                            "participant": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Participant",
                                    "description": "Indicates who or what performed or participated in the charged service."
                                }
                            },
                            "issuer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organizationissuing the Invoice."
                            },
                            "account": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Account which is supposed to be balanced with this Invoice."
                            },
                            "lineItem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LineItem",
                                    "description": "Each line item represents one charge for goods and services rendered. Details such as date, code and amount are found in the referenced ChargeItem resource."
                                }
                            },
                            "totalPriceComponent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PriceComponent",
                                    "description": "The total amount for the Invoice may be calculated as the sum of the line items with surcharges/deductions that apply in certain conditions.  The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the total price was calculated."
                                }
                            },
                            "totalNet": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Invoice total , taxes excluded."
                            },
                            "totalGross": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Invoice total, tax included."
                            },
                            "paymentTerms": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Payment details such as banking details, period of payment, deductibles, methods of payment."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Comments made about the invoice by the issuer, subject, or other participants."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "Library": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this library when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this library is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the library is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this library when it is represented in other formats, or referenced in a specification, model, design or an instance. e.g. CMS or NQF identifiers for a measure artifact. Note that at least one identifier is required for non-experimental active artifacts."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the library when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the library author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the library. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the library."
                            },
                            "subtitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "An explanatory or alternate title for the library giving additional information about its content."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this library. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this library is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the type of library such as a Logic Library, Model Definition, Asset Collection, or Module Definition."
                            },
                            "subjectCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code or group definition that describes the intended subject of the contents of the library."
                            },
                            "subjectReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A code or group definition that describes the intended subject of the contents of the library."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the library was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the library changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the library."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the library from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate library instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the library is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this library is needed and why it has been designed as it has."
                            },
                            "usage": {
                                "$ref": "#/components/schemas/String",
                                "description": "A detailed description of how the library is used from a clinical perspective."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the library and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the library."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the library content was or is planned to be in active use."
                            },
                            "topic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Descriptive topics related to the content of the library. Topics provide a high-level categorization of the library that can be useful for filtering and searching."
                                }
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                                }
                            },
                            "editor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for internal coherence of the content."
                                }
                            },
                            "reviewer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for review of some aspect of the content."
                                }
                            },
                            "endorser": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Related artifacts such as additional documentation, justification, or bibliographic references."
                                }
                            },
                            "parameter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ParameterDefinition",
                                    "description": "The parameter element defines parameters used by the library."
                                }
                            },
                            "dataRequirement": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DataRequirement",
                                    "description": "Describes a set of data that must be provided in order to be able to successfully perform the computations defined by the library."
                                }
                            },
                            "content": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Attachment",
                                    "description": "The content of the library as an Attachment. The content may be a reference to a url, or may be directly embedded as a base-64 string. Either way, the contentType of the attachment determines how to interpret the content."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "type"
                ]
            },
            "Linkage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "connectivity": {
                                "$ref": "#/components/schemas/String",
                                "description": "The entity that links the sugar residues together should also be captured for nearly all naturally occurring nucleic acid the linkage is a phosphate group. For many synthetic oligonucleotides phosphorothioate linkages are often seen. Linkage connectivity is assumed to be 3’-5’. If the linkage is either 3’-3’ or 5’-5’ this should be specified."
                            },
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Each linkage will be registered as a fragment and have an ID."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Each linkage will be registered as a fragment and have at least one name. A single name shall be assigned to each linkage."
                            },
                            "residueSite": {
                                "$ref": "#/components/schemas/String",
                                "description": "Residues shall be captured as described in 5.3.6.8.3."
                            }
                        }
                    }
                ]
            },
            "List": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifier for the List assigned for business purposes outside the context of FHIR."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "current",
                                    "retired",
                                    "entered-in-error"
                                ],
                                "description": "Indicates the current state of this list."
                            },
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "working",
                                    "snapshot",
                                    "changes"
                                ],
                                "description": "How this list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A label for the list assigned by the author."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "This code defines the purpose of the list - why it was created."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The common subject (or patient) of the resources that are in the list if there is one."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The encounter that is the context in which this list was created."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date that the list was prepared."
                            },
                            "source": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The entity responsible for deciding what the contents of the list were. Where the list was created by a human, this is the same as the author of the list."
                            },
                            "orderedBy": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "What order applies to the items in the list."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Comments that apply to the overall list."
                                }
                            },
                            "entry": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Entry",
                                    "description": "Entries in this list."
                                }
                            },
                            "emptyReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "If the list is empty, why the list is empty."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "mode"
                ]
            },
            "Location": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "location": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The location where the encounter takes place."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "planned",
                                    "active",
                                    "reserved",
                                    "completed"
                                ],
                                "description": "The status of the participants' presence at the specified location during the period specified. If the participant is no longer at the location, then the period will have an end date/time."
                            },
                            "physicalType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "This will be used to specify the required levels (bed/ward/room/etc.) desired to be recorded to simplify either messaging or query."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Time period during which the patient was present at the location."
                            }
                        }
                    }
                ],
                "required": [
                    "location"
                ]
            },
            "Measure": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this measure when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this measure is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the measure is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this measure when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the measure when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the measure author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the measure. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the measure."
                            },
                            "subtitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "An explanatory or alternate title for the measure giving additional information about its content."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this measure. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this measure is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "subjectCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The intended subjects for the measure. If this element is not provided, a Patient subject is assumed, but the subject of the measure can be anything."
                            },
                            "subjectReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The intended subjects for the measure. If this element is not provided, a Patient subject is assumed, but the subject of the measure can be anything."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the measure was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the measure changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the measure."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the measure from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate measure instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the measure is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this measure is needed and why it has been designed as it has."
                            },
                            "usage": {
                                "$ref": "#/components/schemas/String",
                                "description": "A detailed description, from a clinical perspective, of how the measure is used."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the measure and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the measure."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the measure content was or is planned to be in active use."
                            },
                            "topic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Descriptive topics related to the content of the measure. Topics provide a high-level categorization grouping types of measures that can be useful for filtering and searching."
                                }
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                                }
                            },
                            "editor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for internal coherence of the content."
                                }
                            },
                            "reviewer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for review of some aspect of the content."
                                }
                            },
                            "endorser": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Related artifacts such as additional documentation, justification, or bibliographic references."
                                }
                            },
                            "library": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "A reference to a Library resource containing the formal logic used by the measure."
                                }
                            },
                            "disclaimer": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Notices and disclaimers regarding the use of the measure or related to intellectual property (such as code systems) referenced by the measure."
                            },
                            "scoring": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates how the calculation is performed for the measure, including proportion, ratio, continuous-variable, and cohort. The value set is extensible, allowing additional measure scoring types to be represented."
                            },
                            "compositeScoring": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "If this is a composite measure, the scoring method used to combine the component measures to determine the composite score."
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Indicates whether the measure is used to examine a process, an outcome over time, a patient-reported outcome, or a structure measure such as utilization."
                                }
                            },
                            "riskAdjustment": {
                                "$ref": "#/components/schemas/String",
                                "description": "A description of the risk adjustment factors that may impact the resulting score for the measure and how they may be accounted for when computing and reporting measure results."
                            },
                            "rateAggregation": {
                                "$ref": "#/components/schemas/String",
                                "description": "Describes how to combine the information calculated, based on logic in each of several populations, into one summarized result."
                            },
                            "rationale": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Provides a succinct statement of the need for the measure. Usually includes statements pertaining to importance criterion: impact, gap in care, and evidence."
                            },
                            "clinicalRecommendationStatement": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Provides a summary of relevant clinical guidelines or other clinical recommendations supporting the measure."
                            },
                            "improvementNotation": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Information on whether an increase or decrease in score is the preferred result (e.g., a higher score indicates better quality OR a lower score indicates better quality OR quality is within a range)."
                            },
                            "definition": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Markdown",
                                    "description": "Provides a description of an individual term used within the measure."
                                }
                            },
                            "guidance": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Additional guidance for the measure including how it can be used in a clinical context, and the intent of the measure."
                            },
                            "group": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Group",
                                    "description": "A group of population criteria for the measure."
                                }
                            },
                            "supplementalData": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SupplementalData",
                                    "description": "The supplemental data criteria for the measure report, specified as either the name of a valid CQL expression within a referenced library, or a valid FHIR Resource Path."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "MeasureReport": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this MeasureReport when it is represented in other formats or referenced in a specification, model, design or an instance."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "complete",
                                    "pending",
                                    "error"
                                ],
                                "description": "The MeasureReport status. No data will be available until the MeasureReport status is complete."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "individual",
                                    "subject-list",
                                    "summary",
                                    "data-collection"
                                ],
                                "description": "The type of measure report. This may be an individual report, which provides the score for the measure for an individual member of the population; a subject-listing, which returns the list of members that meet the various criteria in the measure; a summary report, which returns a population count for each of the criteria in the measure; or a data-collection, which enables the MeasureReport to be used to exchange the data-of-interest for a quality measure."
                            },
                            "measure": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "A reference to the Measure that was calculated to produce this report."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Optional subject identifying the individual or individuals the report is for."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date this measure report was generated."
                            },
                            "reporter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual, location, or organization that is reporting the data."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The reporting period for which the report was calculated."
                            },
                            "improvementNotation": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Whether improvement in the measure is noted by an increase or decrease in the measure score."
                            },
                            "group": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Group",
                                    "description": "The results of the calculation, one for each population group in the measure."
                                }
                            },
                            "evaluatedResource": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A reference to a Bundle containing the Resources that were used in the calculation of this measure."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "type",
                    "measure",
                    "period"
                ]
            },
            "Media": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "A comment about the image. Typically, this is used to provide an explanation for why the image is included, or to draw the viewer's attention to important features."
                            },
                            "link": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the image source."
                            }
                        }
                    }
                ],
                "required": [
                    "link"
                ]
            },
            "Medication": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifier for this medication."
                                }
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code (or set of codes) that specify this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "inactive",
                                    "entered-in-error"
                                ],
                                "description": "A code to indicate if the medication is in active use."
                            },
                            "manufacturer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Describes the details of the manufacturer of the medication product.  This is not intended to represent the distributor of a medication product."
                            },
                            "form": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Describes the form of the item.  Powder; tablets; capsule."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "Specific amount of the drug in the packaged product.  For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.)."
                            },
                            "ingredient": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ingredient",
                                    "description": "Identifies a particular constituent of interest in the product."
                                }
                            },
                            "batch": {
                                "$ref": "#/components/schemas/Batch",
                                "description": "Information that only applies to packages (not products)."
                            }
                        }
                    }
                ]
            },
            "MedicationAdministration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers associated with this Medication Administration that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "instantiates": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "A protocol, guideline, orderset, or other definition that was adhered to in whole or in part by this event."
                                }
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A larger event of which this particular event is a component or step."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "in-progress",
                                    "not-done",
                                    "on-hold",
                                    "completed",
                                    "entered-in-error",
                                    "stopped",
                                    "unknown"
                                ],
                                "description": "Will generally be set to show that the administration has been completed.  For some long running administrations such as infusions, it is possible for an administration to be started but not completed or it may be paused while some other process is under way."
                            },
                            "statusReason": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A code indicating why the administration was not performed."
                                }
                            },
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates where the medication is expected to be consumed or administered."
                            },
                            "medicationCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the medication that was administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications."
                            },
                            "medicationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the medication that was administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person or animal or group receiving the medication."
                            },
                            "context": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The visit, admission, or other contact between patient and health care provider during which the medication administration was performed."
                            },
                            "supportingInformation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Additional information (for example, patient height and weight) that supports the administration of the medication."
                                }
                            },
                            "effectiveDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "A specific date/time or interval of time during which the administration took place (or did not take place, when the 'notGiven' attribute is true). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "A specific date/time or interval of time during which the administration took place (or did not take place, when the 'notGiven' attribute is true). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate."
                            },
                            "performer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Performer",
                                    "description": "Indicates who or what performed the medication administration and how they were involved."
                                }
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A code indicating why the medication was given."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Condition or observation that supports why the medication was administered."
                                }
                            },
                            "request": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The original request, instruction or authority to perform the administration."
                            },
                            "device": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The device used in administering the medication to the patient.  For example, a particular infusion pump."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Extra information about the medication administration that is not conveyed by the other attributes."
                                }
                            },
                            "dosage": {
                                "$ref": "#/components/schemas/Dosage",
                                "description": "Describes the medication dosage information details e.g. dose, rate, site, route, etc."
                            },
                            "eventHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A summary of the events of interest that have occurred, such as when the administration was verified."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "subject"
                ]
            },
            "MedicationDispense": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers associated with this Medication Dispense that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The procedure that trigger the dispense."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "preparation",
                                    "in-progress",
                                    "cancelled",
                                    "on-hold",
                                    "completed",
                                    "entered-in-error",
                                    "stopped",
                                    "declined",
                                    "unknown"
                                ],
                                "description": "A code specifying the state of the set of dispense events."
                            },
                            "statusReasonCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the reason why a dispense was not performed."
                            },
                            "statusReasonReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Indicates the reason why a dispense was not performed."
                            },
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the type of medication dispense (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient))."
                            },
                            "medicationCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications."
                            },
                            "medicationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A link to a resource representing the person or the group to whom the medication will be given."
                            },
                            "context": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The encounter or episode of care that establishes the context for this event."
                            },
                            "supportingInformation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Additional information that supports the medication being dispensed."
                                }
                            },
                            "performer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Performer",
                                    "description": "Indicates who or what performed the event."
                                }
                            },
                            "location": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The principal physical location where the dispense was performed."
                            },
                            "authorizingPrescription": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates the medication order that is being dispensed against."
                                }
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the type of dispensing event that is performed. For example, Trial Fill, Completion of Trial, Partial Fill, Emergency Fill, Samples, etc."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The amount of medication that has been dispensed. Includes unit of measure."
                            },
                            "daysSupply": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The amount of medication expressed as a timing amount."
                            },
                            "whenPrepared": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The time when the dispensed product was packaged and reviewed."
                            },
                            "whenHandedOver": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The time the dispensed product was provided to the patient or their representative."
                            },
                            "destination": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identification of the facility/location where the medication was shipped to, as part of the dispense event."
                            },
                            "receiver": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies the person who picked up the medication.  This will usually be a patient or their caregiver, but some cases exist where it can be a healthcare professional."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Extra information about the dispense that could not be conveyed in the other attributes."
                                }
                            },
                            "dosageInstruction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dosage",
                                    "description": "Indicates how the medication is to be used by the patient."
                                }
                            },
                            "substitution": {
                                "$ref": "#/components/schemas/Substitution",
                                "description": "Indicates whether or not substitution was made as part of the dispense.  In some cases, substitution will be expected but does not happen, in other cases substitution is not expected but does happen.  This block explains what substitution did or did not happen and why.  If nothing is specified, substitution was not done."
                            },
                            "detectedIssue": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. drug-drug interaction, duplicate therapy, dosage alert etc."
                                }
                            },
                            "eventHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A summary of the events of interest that have occurred, such as when the dispense was verified."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "MedicationKnowledge": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code that specifies this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "inactive",
                                    "entered-in-error"
                                ],
                                "description": "A code to indicate if the medication is in active use.  The status refers to the validity about the information of the medication and not to its medicinal properties."
                            },
                            "manufacturer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Describes the details of the manufacturer of the medication product.  This is not intended to represent the distributor of a medication product."
                            },
                            "doseForm": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Describes the form of the item.  Powder; tablets; capsule."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "Specific amount of the drug in the packaged product.  For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.)."
                            },
                            "synonym": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Additional names for a medication, for example, the name(s) given to a medication in different countries.  For example, acetaminophen and paracetamol or salbutamol and albuterol."
                                }
                            },
                            "relatedMedicationKnowledge": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedMedicationKnowledge",
                                    "description": "Associated or related knowledge about a medication."
                                }
                            },
                            "associatedMedication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Associated or related medications.  For example, if the medication is a branded product (e.g. Crestor), this is the Therapeutic Moeity (e.g. Rosuvastatin) or if this is a generic medication (e.g. Rosuvastatin), this would link to a branded product (e.g. Crestor)."
                                }
                            },
                            "productType": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Category of the medication or product (e.g. branded product, therapeutic moeity, generic product, innovator product, etc.)."
                                }
                            },
                            "monograph": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Monograph",
                                    "description": "Associated documentation about the medication."
                                }
                            },
                            "ingredient": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ingredient",
                                    "description": "Identifies a particular constituent of interest in the product."
                                }
                            },
                            "preparationInstruction": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "The instructions for preparing the medication."
                            },
                            "intendedRoute": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The intended or approved route of administration."
                                }
                            },
                            "cost": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Cost",
                                    "description": "The price of the medication."
                                }
                            },
                            "monitoringProgram": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MonitoringProgram",
                                    "description": "The program under which the medication is reviewed."
                                }
                            },
                            "administrationGuidelines": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdministrationGuidelines",
                                    "description": "Guidelines for the administration of the medication."
                                }
                            },
                            "medicineClassification": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MedicineClassification",
                                    "description": "Categorization of the medication within a formulary or classification system."
                                }
                            },
                            "packaging": {
                                "$ref": "#/components/schemas/Packaging",
                                "description": "Information that only applies to packages (not products)."
                            },
                            "drugCharacteristic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DrugCharacteristic",
                                    "description": "Specifies descriptive properties of the medicine, such as color, shape, imprints, etc."
                                }
                            },
                            "contraindication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Potential clinical issue with or between medication(s) (for example, drug-drug interaction, drug-disease contraindication, drug-allergy interaction, etc.)."
                                }
                            },
                            "regulatory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Regulatory",
                                    "description": "Regulatory information about a medication."
                                }
                            },
                            "kinetics": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Kinetics",
                                    "description": "The time course of drug absorption, distribution, metabolism and excretion of a medication from the body."
                                }
                            }
                        }
                    }
                ]
            },
            "MedicationRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers associated with this medication request that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "on-hold",
                                    "cancelled",
                                    "completed",
                                    "entered-in-error",
                                    "stopped",
                                    "draft",
                                    "unknown"
                                ],
                                "description": "A code specifying the current state of the order.  Generally, this will be active or completed state."
                            },
                            "statusReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Captures the reason for the current state of the MedicationRequest."
                            },
                            "intent": {
                                "type": "string",
                                "enum": [
                                    "proposal",
                                    "plan",
                                    "order",
                                    "original-order",
                                    "reflex-order",
                                    "filler-order",
                                    "instance-order",
                                    "option"
                                ],
                                "description": "Whether the request is a proposal, plan, or an original order."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Indicates the type of medication request (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient))."
                                }
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "routine",
                                    "urgent",
                                    "asap",
                                    "stat"
                                ],
                                "description": "Indicates how quickly the Medication Request should be addressed with respect to other requests."
                            },
                            "doNotPerform": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If true indicates that the provider is asking for the medication request not to occur."
                            },
                            "reportedBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates if this record was captured as a secondary 'reported' record rather than as an original primary source-of-truth record.  It may also indicate the source of the report."
                            },
                            "reportedReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Indicates if this record was captured as a secondary 'reported' record rather than as an original primary source-of-truth record.  It may also indicate the source of the report."
                            },
                            "medicationCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the medication being requested. This is a link to a resource that represents the medication which may be the details of the medication or simply an attribute carrying a code that identifies the medication from a known list of medications."
                            },
                            "medicationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the medication being requested. This is a link to a resource that represents the medication which may be the details of the medication or simply an attribute carrying a code that identifies the medication from a known list of medications."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A link to a resource representing the person or set of individuals to whom the medication will be given."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Encounter during which this [x] was created or to which the creation of this record is tightly associated."
                            },
                            "supportingInformation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Include additional information (for example, patient height and weight) that supports the ordering of the medication."
                                }
                            },
                            "authoredOn": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date (and perhaps time) when the prescription was initially written or authored on."
                            },
                            "requester": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual, organization, or device that initiated the request and has responsibility for its activation."
                            },
                            "performer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The specified desired performer of the medication treatment (e.g. the performer of the medication administration)."
                            },
                            "performerType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the type of performer of the administration of the medication."
                            },
                            "recorder": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person who entered the order on behalf of another individual for example in the case of a verbal or a telephone order."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The reason or the indication for ordering or not ordering the medication."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Condition or observation that supports why the medication was ordered."
                                }
                            },
                            "instantiatesCanonical": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "The URL pointing to a protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this MedicationRequest."
                                }
                            },
                            "instantiatesUri": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this MedicationRequest."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A plan or request that is fulfilled in whole or in part by this medication request."
                                }
                            },
                            "groupIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition or prescription."
                            },
                            "courseOfTherapyType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The description of the overall patte3rn of the administration of the medication to the patient."
                            },
                            "insurance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Extra information about the prescription that could not be conveyed by the other attributes."
                                }
                            },
                            "dosageInstruction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dosage",
                                    "description": "Indicates how the medication is to be used by the patient."
                                }
                            },
                            "dispenseRequest": {
                                "$ref": "#/components/schemas/DispenseRequest",
                                "description": "Indicates the specific details for the dispense or medication supply part of a medication request (also known as a Medication Prescription or Medication Order).  Note that this information is not always sent with the order.  There may be in some settings (e.g. hospitals) institutional or system support for completing the dispense details in the pharmacy department."
                            },
                            "substitution": {
                                "$ref": "#/components/schemas/Substitution",
                                "description": "Indicates whether or not substitution can or should be part of the dispense. In some cases, substitution must happen, in other cases substitution must not happen. This block explains the prescriber's intent. If nothing is specified substitution may be done."
                            },
                            "priorPrescription": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A link to a resource representing an earlier order related order or prescription."
                            },
                            "detectedIssue": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, duplicate therapy, dosage alert etc."
                                }
                            },
                            "eventHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "intent",
                    "subject"
                ]
            },
            "MedicationStatement": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers associated with this Medication Statement that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A plan, proposal or order that is fulfilled in whole or in part by this event."
                                }
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A larger event of which this particular event is a component or step."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "completed",
                                    "entered-in-error",
                                    "intended",
                                    "stopped",
                                    "on-hold",
                                    "unknown",
                                    "not-taken"
                                ],
                                "description": "A code representing the patient or other source's judgment about the state of the medication used that this statement is about.  Generally, this will be active or completed."
                            },
                            "statusReason": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Captures the reason for the current state of the MedicationStatement."
                                }
                            },
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates where the medication is expected to be consumed or administered."
                            },
                            "medicationCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications."
                            },
                            "medicationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person, animal or group who is/was taking the medication."
                            },
                            "context": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The encounter or episode of care that establishes the context for this MedicationStatement."
                            },
                            "effectiveDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The interval of time during which it is being asserted that the patient is/was/will be taking the medication (or was not taking, when the MedicationStatement.taken element is No)."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The interval of time during which it is being asserted that the patient is/was/will be taking the medication (or was not taking, when the MedicationStatement.taken element is No)."
                            },
                            "dateAsserted": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date when the medication statement was asserted by the information source."
                            },
                            "informationSource": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person or organization that provided the information about the taking of this medication. Note: Use derivedFrom when a MedicationStatement is derived from other resources, e.g. Claim or MedicationRequest."
                            },
                            "derivedFrom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Allows linking the MedicationStatement to the underlying MedicationRequest, or to other information that supports or is used to derive the MedicationStatement."
                                }
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A reason for why the medication is being/was taken."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Condition or observation that supports why the medication is being/was taken."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Provides extra information about the medication statement that is not conveyed by the other attributes."
                                }
                            },
                            "dosage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dosage",
                                    "description": "Indicates how the medication is/was or should be taken by the patient."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "subject"
                ]
            },
            "MedicinalProduct": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifier for this product. Could be an MPID."
                                }
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Regulatory type, e.g. Investigational or Authorized."
                            },
                            "domain": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "If this medicine applies to human or veterinary uses."
                            },
                            "combinedPharmaceuticalDoseForm": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The dose form for a single part product, or combined form of a multiple part product."
                            },
                            "legalStatusOfSupply": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The legal status of supply of the medicinal product as classified by the regulator."
                            },
                            "additionalMonitoringIndicator": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Whether the Medicinal Product is subject to additional monitoring for regulatory reasons."
                            },
                            "specialMeasures": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Whether the Medicinal Product is subject to special measures for regulatory reasons."
                                }
                            },
                            "paediatricUseIndicator": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "If authorised for use in children."
                            },
                            "productClassification": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Allows the product to be classified by various systems."
                                }
                            },
                            "marketingStatus": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MarketingStatus",
                                    "description": "Marketing status of the medicinal product, in contrast to marketing authorizaton."
                                }
                            },
                            "pharmaceuticalProduct": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Pharmaceutical aspects of product."
                                }
                            },
                            "packagedMedicinalProduct": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Package representation for the product."
                                }
                            },
                            "attachedDocument": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Supporting documentation, typically for regulatory submission."
                                }
                            },
                            "masterFile": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A master file for to the medicinal product (e.g. Pharmacovigilance System Master File)."
                                }
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A product specific contact, person (in a role), or an organization."
                                }
                            },
                            "clinicalTrial": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Clinical trials or studies that this product is involved in."
                                }
                            },
                            "name": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Name",
                                    "description": "The product's name, including full name and possibly coded parts."
                                }
                            },
                            "crossReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Reference to another product, e.g. for linking authorised to investigational product."
                                }
                            },
                            "manufacturingBusinessOperation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ManufacturingBusinessOperation",
                                    "description": "An operation applied to the product, for manufacturing or adminsitrative purpose."
                                }
                            },
                            "specialDesignation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SpecialDesignation",
                                    "description": "Indicates if the medicinal product has an orphan designation for the treatment of a rare disease."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "MedicinalProductAuthorization": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifier for the marketing authorization, as assigned by a regulator."
                                }
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The medicinal product that is being authorized."
                            },
                            "country": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The country in which the marketing authorization has been granted."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Jurisdiction within a country."
                                }
                            },
                            "status": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The status of the marketing authorization."
                            },
                            "statusDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date at which the given status has become applicable."
                            },
                            "restoreDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date when a suspended the marketing or the marketing authorization of the product is anticipated to be restored."
                            },
                            "validityPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The beginning of the time period in which the marketing authorization is in the specific status shall be specified A complete date consisting of day, month and year shall be specified using the ISO 8601 date format."
                            },
                            "dataExclusivityPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "A period of time after authorization before generic product applicatiosn can be submitted."
                            },
                            "dateOfFirstAuthorization": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date when the first authorization was granted by a Medicines Regulatory Agency."
                            },
                            "internationalBirthDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date of first marketing authorization for a company's new medicinal product in any country in the World."
                            },
                            "legalBasis": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The legal framework against which this authorization is granted."
                            },
                            "jurisdictionalAuthorization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/JurisdictionalAuthorization",
                                    "description": "Authorization in areas within a country."
                                }
                            },
                            "holder": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Marketing Authorization Holder."
                            },
                            "regulator": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Medicines Regulatory Agency."
                            },
                            "procedure": {
                                "$ref": "#/components/schemas/Procedure",
                                "description": "The regulatory procedure for granting or amending a marketing authorization."
                            }
                        }
                    }
                ]
            },
            "MedicinalProductContraindication": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "subject": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The medication for which this is an indication."
                                }
                            },
                            "disease": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The disease, symptom or procedure for the contraindication."
                            },
                            "diseaseStatus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The status of the disease or symptom for the contraindication."
                            },
                            "comorbidity": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A comorbidity (concurrent condition) or coinfection."
                                }
                            },
                            "therapeuticIndication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Information about the use of the medicinal product in relation to other therapies as part of the indication."
                                }
                            },
                            "otherTherapy": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OtherTherapy",
                                    "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication."
                                }
                            },
                            "population": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Population",
                                    "description": "The population group to which this applies."
                                }
                            }
                        }
                    }
                ]
            },
            "MedicinalProductIndication": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "subject": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The medication for which this is an indication."
                                }
                            },
                            "diseaseSymptomProcedure": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The disease, symptom or procedure that is the indication for treatment."
                            },
                            "diseaseStatus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The status of the disease or symptom for which the indication applies."
                            },
                            "comorbidity": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Comorbidity (concurrent condition) or co-infection as part of the indication."
                                }
                            },
                            "intendedEffect": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The intended effect, aim or strategy to be achieved by the indication."
                            },
                            "duration": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Timing or duration information as part of the indication."
                            },
                            "otherTherapy": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OtherTherapy",
                                    "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication."
                                }
                            },
                            "undesirableEffect": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Describe the undesirable effects of the medicinal product."
                                }
                            },
                            "population": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Population",
                                    "description": "The population group to which this applies."
                                }
                            }
                        }
                    }
                ]
            },
            "MedicinalProductIngredient": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "The identifier(s) of this Ingredient that are assigned by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate."
                            },
                            "role": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Ingredient role e.g. Active ingredient, excipient."
                            },
                            "allergenicIndicator": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If the ingredient is a known or suspected allergen."
                            },
                            "manufacturer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Manufacturer of this Ingredient."
                                }
                            },
                            "specifiedSubstance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SpecifiedSubstance",
                                    "description": "A specified substance that comprises this ingredient."
                                }
                            },
                            "substance": {
                                "$ref": "#/components/schemas/Substance",
                                "description": "Relevant reference substance."
                            }
                        }
                    }
                ],
                "required": [
                    "role"
                ]
            },
            "MedicinalProductInteraction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "subject": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The medication for which this is a described interaction."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "The interaction described."
                            },
                            "interactant": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Interactant",
                                    "description": "The specific medication, food or laboratory test that interacts."
                                }
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction."
                            },
                            "effect": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The effect of the interaction, for example \"reduced gastric absorption of primary medication\"."
                            },
                            "incidence": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The incidence of the interaction, e.g. theoretical, observed."
                            },
                            "management": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Actions for managing the interaction."
                            }
                        }
                    }
                ]
            },
            "MedicinalProductManufactured": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "manufacturedDoseForm": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Dose form as manufactured and before any transformation into the pharmaceutical product."
                            },
                            "unitOfPresentation": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The “real world” units in which the quantity of the manufactured item is described."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The quantity or \"count number\" of the manufactured item."
                            },
                            "manufacturer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Manufacturer of the item (Note that this should be named \"manufacturer\" but it currently causes technical issues)."
                                }
                            },
                            "ingredient": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Ingredient."
                                }
                            },
                            "physicalCharacteristics": {
                                "$ref": "#/components/schemas/ProdCharacteristic",
                                "description": "Dimensions, color etc."
                            },
                            "otherCharacteristics": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Other codeable characteristics."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "manufacturedDoseForm",
                    "quantity"
                ]
            },
            "MedicinalProductPackaged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Unique identifier."
                                }
                            },
                            "subject": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The product with this is a pack for."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Textual description."
                            },
                            "legalStatusOfSupply": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The legal status of supply of the medicinal product as classified by the regulator."
                            },
                            "marketingStatus": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MarketingStatus",
                                    "description": "Marketing information."
                                }
                            },
                            "marketingAuthorization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Manufacturer of this Package Item."
                            },
                            "manufacturer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Manufacturer of this Package Item."
                                }
                            },
                            "batchIdentifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BatchIdentifier",
                                    "description": "Batch numbering."
                                }
                            },
                            "packageItem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PackageItem",
                                    "description": "A packaging item, as a contained for medicine, possibly with other packaging items within."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "packageItem"
                ]
            },
            "MedicinalProductPharmaceutical": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "An identifier for the pharmaceutical medicinal product."
                                }
                            },
                            "administrableDoseForm": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The administrable dose form, after necessary reconstitution."
                            },
                            "unitOfPresentation": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "ingredient": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Ingredient."
                                }
                            },
                            "device": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Accompanying device."
                                }
                            },
                            "characteristics": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Characteristics",
                                    "description": "Characteristics e.g. a products onset of action."
                                }
                            },
                            "routeOfAdministration": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RouteOfAdministration",
                                    "description": "The path by which the pharmaceutical product is taken into or makes contact with the body."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "administrableDoseForm",
                    "routeOfAdministration"
                ]
            },
            "MedicinalProductUndesirableEffect": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "subject": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The medication for which this is an indication."
                                }
                            },
                            "symptomConditionEffect": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The symptom, condition or undesirable effect."
                            },
                            "classification": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Classification of the effect."
                            },
                            "frequencyOfOccurrence": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The frequency of occurrence of the effect."
                            },
                            "population": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Population",
                                    "description": "The population group to which this applies."
                                }
                            }
                        }
                    }
                ]
            },
            "MessageDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The business identifier that is used to reference the MessageDefinition and *is* expected to be consistent from server to server."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this message definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the message definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the message definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the message definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the message definition."
                            },
                            "replaces": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "A MessageDefinition that is superseded by this definition."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this message definition. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this message definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the message definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the message definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the message definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the message definition from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate message definition instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the message definition is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this message definition is needed and why it has been designed as it has."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the message definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the message definition."
                            },
                            "base": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The MessageDefinition that is the basis for the contents of this resource."
                            },
                            "parent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "Identifies a protocol or workflow that this MessageDefinition represents a step in."
                                }
                            },
                            "eventCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Event code or link to the EventDefinition."
                            },
                            "eventUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Event code or link to the EventDefinition."
                            },
                            "category": {
                                "type": "string",
                                "enum": [
                                    "consequence",
                                    "currency",
                                    "notification"
                                ],
                                "description": "The impact of the content of the message."
                            },
                            "focus": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Focus",
                                    "description": "Identifies the resource (or resources) that are being addressed by the event.  For example, the Encounter for an admit message or two Account records for a merge."
                                }
                            },
                            "responseRequired": {
                                "type": "string",
                                "enum": [
                                    "always",
                                    "on-error",
                                    "never",
                                    "on-success"
                                ],
                                "description": "Declare at a message definition level whether a response is required or only upon error or success, or never."
                            },
                            "allowedResponse": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AllowedResponse",
                                    "description": "Indicates what types of messages may be sent as an application-level response to this message."
                                }
                            },
                            "graph": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "Canonical reference to a GraphDefinition. If a URL is provided, it is the canonical reference to a [GraphDefinition](graphdefinition.html) that it controls what resources are to be added to the bundle when building the document. The GraphDefinition can also specify profiles that apply to the various resources."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "date"
                ]
            },
            "MessageHeader": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Code that identifies the event this message represents and connects it with its definition. Events defined as part of the FHIR specification have the system value \"http://terminology.hl7.org/CodeSystem/message-events\".  Alternatively uri to the EventDefinition."
                            },
                            "eventUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Code that identifies the event this message represents and connects it with its definition. Events defined as part of the FHIR specification have the system value \"http://terminology.hl7.org/CodeSystem/message-events\".  Alternatively uri to the EventDefinition."
                            },
                            "destination": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Destination",
                                    "description": "The destination application which the message is intended for."
                                }
                            },
                            "sender": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the sending system to allow the use of a trust relationship."
                            },
                            "enterer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person or device that performed the data entry leading to this message. When there is more than one candidate, pick the most proximal to the message. Can provide other enterers in extensions."
                            },
                            "author": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The logical author of the message - the person or device that decided the described event should happen. When there is more than one candidate, pick the most proximal to the MessageHeader. Can provide other authors in extensions."
                            },
                            "source": {
                                "$ref": "#/components/schemas/Source",
                                "description": "The source application from which this message originated."
                            },
                            "responsible": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person or organization that accepts overall responsibility for the contents of the message. The implication is that the message event happened under the policies of the responsible party."
                            },
                            "reason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Coded indication of the cause for the event - indicates  a reason for the occurrence of the event that is a focus of this message."
                            },
                            "response": {
                                "$ref": "#/components/schemas/Response",
                                "description": "Information about the message that this message is a response to.  Only present if this message is a response."
                            },
                            "focus": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The actual data of the message - a reference to the root/focus class of the event."
                                }
                            },
                            "definition": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Permanent link to the MessageDefinition for this message."
                            }
                        }
                    }
                ],
                "required": [
                    "source"
                ]
            },
            "MolecularSequence": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier for this particular sequence instance. This is a FHIR-defined id."
                                }
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "aa",
                                    "dna",
                                    "rna"
                                ],
                                "description": "Amino Acid Sequence/ DNA Sequence / RNA Sequence."
                            },
                            "coordinateSystem": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Whether the sequence is numbered starting at 0 (0-based numbering or coordinates, inclusive start, exclusive end) or starting at 1 (1-based numbering, inclusive start and inclusive end)."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient whose sequencing results are described by this resource."
                            },
                            "specimen": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Specimen used for sequencing."
                            },
                            "device": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The method for sequencing, for example, chip information."
                            },
                            "performer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organization or lab that should be responsible for this result."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The number of copies of the sequence of interest. (RNASeq)."
                            },
                            "referenceSeq": {
                                "$ref": "#/components/schemas/ReferenceSeq",
                                "description": "A sequence that is used as a reference to describe variants that are present in a sequence analyzed."
                            },
                            "variant": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Variant",
                                    "description": "The definition of variant here originates from Sequence ontology ([variant_of](http://www.sequenceontology.org/browser/current_svn/term/variant_of)). This element can represent amino acid or nucleic sequence change(including insertion,deletion,SNP,etc.)  It can represent some complex mutation or segment variation with the assist of CIGAR string."
                                }
                            },
                            "observedSeq": {
                                "$ref": "#/components/schemas/String",
                                "description": "Sequence that was observed. It is the result marked by referenceSeq along with variant records on referenceSeq. This shall start from referenceSeq.windowStart and end by referenceSeq.windowEnd."
                            },
                            "quality": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Quality",
                                    "description": "An experimental feature attribute that defines the quality of the feature in a quantitative way, such as a phred quality score ([SO:0001686](http://www.sequenceontology.org/browser/current_svn/term/SO:0001686))."
                                }
                            },
                            "readCoverage": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Coverage (read depth or depth) is the average number of reads representing a given nucleotide in the reconstructed sequence."
                            },
                            "repository": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Repository",
                                    "description": "Configurations of the external repository. The repository shall store target's observedSeq or records related with target's observedSeq."
                                }
                            },
                            "pointer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Pointer to next atomic sequence which at most contains one variant."
                                }
                            },
                            "structureVariant": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/StructureVariant",
                                    "description": "Information about chromosome structure variation."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "coordinateSystem"
                ]
            },
            "NamingSystem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the naming system. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this naming system. Enables tracking the life-cycle of the content."
                            },
                            "kind": {
                                "type": "string",
                                "enum": [
                                    "codesystem",
                                    "identifier",
                                    "root"
                                ],
                                "description": "Indicates the purpose for the naming system - what kinds of things does it make unique?"
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the naming system was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the naming system changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the naming system."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "responsible": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization that is responsible for issuing identifiers or codes for this namespace and ensuring their non-collision."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Categorizes a naming system for easier search by grouping related naming systems."
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the naming system from a consumer's perspective. Details about what the namespace identifies including scope, granularity, version labeling, etc."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate naming system instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the naming system is intended to be used."
                                }
                            },
                            "usage": {
                                "$ref": "#/components/schemas/String",
                                "description": "Provides guidance on the use of the namespace, including the handling of formatting characters, use of upper vs. lower case, etc."
                            },
                            "uniqueId": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UniqueId",
                                    "description": "Indicates how the system may be identified when referenced in electronic exchange."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "status",
                    "kind",
                    "date",
                    "uniqueId"
                ]
            },
            "NutritionOrder": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers assigned to this order by the order sender or by the order receiver."
                                }
                            },
                            "instantiatesCanonical": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder."
                                }
                            },
                            "instantiatesUri": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder."
                                }
                            },
                            "instantiates": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "on-hold",
                                    "revoked",
                                    "completed",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "The workflow status of the nutrition order/request."
                            },
                            "intent": {
                                "type": "string",
                                "enum": [
                                    "proposal",
                                    "plan",
                                    "directive",
                                    "order",
                                    "original-order",
                                    "reflex-order",
                                    "filler-order",
                                    "instance-order",
                                    "option"
                                ],
                                "description": "Indicates the level of authority/intentionality associated with the NutrionOrder and where the request fits into the workflow chain."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person (patient) who needs the nutrition order for an oral diet, nutritional supplement and/or enteral or formula feeding."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "An encounter that provides additional information about the healthcare context in which this request is made."
                            },
                            "dateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date and time that this nutrition order was requested."
                            },
                            "orderer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The practitioner that holds legal responsibility for ordering the diet, nutritional supplement, or formula feedings."
                            },
                            "allergyIntolerance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A link to a record of allergies or intolerances  which should be included in the nutrition order."
                                }
                            },
                            "foodPreferenceModifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "This modifier is used to convey order-specific modifiers about the type of food that should be given. These can be derived from patient allergies, intolerances, or preferences such as Halal, Vegan or Kosher. This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings."
                                }
                            },
                            "excludeFoodModifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "This modifier is used to convey Order-specific modifier about the type of oral food or oral fluids that should not be given. These can be derived from patient allergies, intolerances, or preferences such as No Red Meat, No Soy or No Wheat or  Gluten-Free.  While it should not be necessary to repeat allergy or intolerance information captured in the referenced AllergyIntolerance resource in the excludeFoodModifier, this element may be used to convey additional specificity related to foods that should be eliminated from the patient’s diet for any reason.  This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings."
                                }
                            },
                            "oralDiet": {
                                "$ref": "#/components/schemas/OralDiet",
                                "description": "Diet given orally in contrast to enteral (tube) feeding."
                            },
                            "supplement": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Supplement",
                                    "description": "Oral nutritional products given in order to add further nutritional value to the patient's diet."
                                }
                            },
                            "enteralFormula": {
                                "$ref": "#/components/schemas/EnteralFormula",
                                "description": "Feeding provided through the gastrointestinal tract via a tube, catheter, or stoma that delivers nutrition distal to the oral cavity."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Comments made about the {{title}} by the requester, performer, subject or other participants."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "intent",
                    "patient",
                    "dateTime"
                ]
            },
            "Observation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this observation."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed."
                                }
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "registered",
                                    "preliminary",
                                    "final",
                                    "amended",
                                    "corrected",
                                    "cancelled",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "The status of the result value."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A code that classifies the general type of observation being made."
                                }
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Describes what was observed. Sometimes this is called the observation \"name\"."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation."
                            },
                            "focus": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus."
                                }
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made."
                            },
                            "effectiveDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself."
                            },
                            "effectiveTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself."
                            },
                            "effectiveInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself."
                            },
                            "issued": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified."
                            },
                            "performer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Who was responsible for asserting the observed value as \"true\"."
                                }
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "valueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "valueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "valueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "valueRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "valueRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "valueSampledData": {
                                "$ref": "#/components/schemas/SampledData",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "valueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "valueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "valuePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The information determined as a result of making the observation, if the information has a simple value."
                            },
                            "dataAbsentReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Provides a reason why the expected value in the element Observation.value[x] is missing."
                            },
                            "interpretation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A categorical assessment of an observation value.  For example, high, low, normal."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Comments about the observation or the results."
                                }
                            },
                            "bodySite": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the site on the subject's body where the observation was made (i.e. the target site)."
                            },
                            "method": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the mechanism used to perform the observation."
                            },
                            "specimen": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The specimen that was used when this observation was made."
                            },
                            "device": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The device used to generate the observation data."
                            },
                            "referenceRange": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ReferenceRange",
                                    "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an \"OR\".   In other words, to represent two distinct target populations, two `referenceRange` elements would be used."
                                }
                            },
                            "hasMember": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group."
                                }
                            },
                            "derivedFrom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image."
                                }
                            },
                            "component": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Component",
                                    "description": "Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "code"
                ]
            },
            "ObservationDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A code that classifies the general type of observation."
                                }
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Describes what will be observed. Sometimes this is called the observation \"name\"."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this ObservationDefinition artifact."
                                }
                            },
                            "permittedDataType": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "Quantity",
                                        "CodeableConcept",
                                        "string",
                                        "boolean",
                                        "integer",
                                        "Range",
                                        "Ratio",
                                        "SampledData",
                                        "time",
                                        "dateTime",
                                        "Period"
                                    ],
                                    "description": "The data types allowed for the value element of the instance observations conforming to this ObservationDefinition."
                                }
                            },
                            "multipleResultsAllowed": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Multiple results allowed for observations conforming to this ObservationDefinition."
                            },
                            "method": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The method or technique used to perform the observation."
                            },
                            "preferredReportName": {
                                "$ref": "#/components/schemas/String",
                                "description": "The preferred name to be used when reporting the results of observations conforming to this ObservationDefinition."
                            },
                            "quantitativeDetails": {
                                "$ref": "#/components/schemas/QuantitativeDetails",
                                "description": "Characteristics for quantitative results of this observation."
                            },
                            "qualifiedInterval": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/QualifiedInterval",
                                    "description": "Multiple  ranges of results qualified by different contexts for ordinal or continuous observations conforming to this ObservationDefinition."
                                }
                            },
                            "validCodedValueSet": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The set of valid coded results for the observations  conforming to this ObservationDefinition."
                            },
                            "normalCodedValueSet": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The set of normal coded results for the observations conforming to this ObservationDefinition."
                            },
                            "abnormalCodedValueSet": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The set of abnormal coded results for the observation conforming to this ObservationDefinition."
                            },
                            "criticalCodedValueSet": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The set of critical coded results for the observation conforming to this ObservationDefinition."
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "OperationDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this operation definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this operation definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the operation definition is stored on different servers."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the operation definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the operation definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the operation definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the operation definition."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this operation definition. Enables tracking the life-cycle of the content."
                            },
                            "kind": {
                                "type": "string",
                                "enum": [
                                    "operation",
                                    "query"
                                ],
                                "description": "Whether this is an operation or a named query."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this operation definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the operation definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the operation definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the operation definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the operation definition from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate operation definition instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the operation definition is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this operation definition is needed and why it has been designed as it has."
                            },
                            "affectsState": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether the operation affects state. Side effects such as producing audit trail entries do not count as 'affecting  state'."
                            },
                            "code": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The name used to invoke the operation."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Additional information about how to use this operation or named query."
                            },
                            "base": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Indicates that this operation definition is a constraining profile on the base."
                            },
                            "resource": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "Account",
                                        "ActivityDefinition",
                                        "AdverseEvent",
                                        "AllergyIntolerance",
                                        "Appointment",
                                        "AppointmentResponse",
                                        "AuditEvent",
                                        "Basic",
                                        "Binary",
                                        "BiologicallyDerivedProduct",
                                        "BodyStructure",
                                        "Bundle",
                                        "CapabilityStatement",
                                        "CarePlan",
                                        "CareTeam",
                                        "CatalogEntry",
                                        "ChargeItem",
                                        "ChargeItemDefinition",
                                        "Claim",
                                        "ClaimResponse",
                                        "ClinicalImpression",
                                        "CodeSystem",
                                        "Communication",
                                        "CommunicationRequest",
                                        "CompartmentDefinition",
                                        "Composition",
                                        "ConceptMap",
                                        "Condition",
                                        "Consent",
                                        "Contract",
                                        "Coverage",
                                        "CoverageEligibilityRequest",
                                        "CoverageEligibilityResponse",
                                        "DetectedIssue",
                                        "Device",
                                        "DeviceDefinition",
                                        "DeviceMetric",
                                        "DeviceRequest",
                                        "DeviceUseStatement",
                                        "DiagnosticReport",
                                        "DocumentManifest",
                                        "DocumentReference",
                                        "DomainResource",
                                        "EffectEvidenceSynthesis",
                                        "Encounter",
                                        "Endpoint",
                                        "EnrollmentRequest",
                                        "EnrollmentResponse",
                                        "EpisodeOfCare",
                                        "EventDefinition",
                                        "Evidence",
                                        "EvidenceVariable",
                                        "ExampleScenario",
                                        "ExplanationOfBenefit",
                                        "FamilyMemberHistory",
                                        "Flag",
                                        "Goal",
                                        "GraphDefinition",
                                        "Group",
                                        "GuidanceResponse",
                                        "HealthcareService",
                                        "ImagingStudy",
                                        "Immunization",
                                        "ImmunizationEvaluation",
                                        "ImmunizationRecommendation",
                                        "ImplementationGuide",
                                        "InsurancePlan",
                                        "Invoice",
                                        "Library",
                                        "Linkage",
                                        "List",
                                        "Location",
                                        "Measure",
                                        "MeasureReport",
                                        "Media",
                                        "Medication",
                                        "MedicationAdministration",
                                        "MedicationDispense",
                                        "MedicationKnowledge",
                                        "MedicationRequest",
                                        "MedicationStatement",
                                        "MedicinalProduct",
                                        "MedicinalProductAuthorization",
                                        "MedicinalProductContraindication",
                                        "MedicinalProductIndication",
                                        "MedicinalProductIngredient",
                                        "MedicinalProductInteraction",
                                        "MedicinalProductManufactured",
                                        "MedicinalProductPackaged",
                                        "MedicinalProductPharmaceutical",
                                        "MedicinalProductUndesirableEffect",
                                        "MessageDefinition",
                                        "MessageHeader",
                                        "MolecularSequence",
                                        "NamingSystem",
                                        "NutritionOrder",
                                        "Observation",
                                        "ObservationDefinition",
                                        "OperationDefinition",
                                        "OperationOutcome",
                                        "Organization",
                                        "OrganizationAffiliation",
                                        "Parameters",
                                        "Patient",
                                        "PaymentNotice",
                                        "PaymentReconciliation",
                                        "Person",
                                        "PlanDefinition",
                                        "Practitioner",
                                        "PractitionerRole",
                                        "Procedure",
                                        "Provenance",
                                        "Questionnaire",
                                        "QuestionnaireResponse",
                                        "RelatedPerson",
                                        "RequestGroup",
                                        "ResearchDefinition",
                                        "ResearchElementDefinition",
                                        "ResearchStudy",
                                        "ResearchSubject",
                                        "Resource",
                                        "RiskAssessment",
                                        "RiskEvidenceSynthesis",
                                        "Schedule",
                                        "SearchParameter",
                                        "ServiceRequest",
                                        "Slot",
                                        "Specimen",
                                        "SpecimenDefinition",
                                        "StructureDefinition",
                                        "StructureMap",
                                        "Subscription",
                                        "Substance",
                                        "SubstanceNucleicAcid",
                                        "SubstancePolymer",
                                        "SubstanceProtein",
                                        "SubstanceReferenceInformation",
                                        "SubstanceSourceMaterial",
                                        "SubstanceSpecification",
                                        "SupplyDelivery",
                                        "SupplyRequest",
                                        "Task",
                                        "TerminologyCapabilities",
                                        "TestReport",
                                        "TestScript",
                                        "ValueSet",
                                        "VerificationResult",
                                        "VisionPrescription"
                                    ],
                                    "description": "The types on which this operation can be executed."
                                }
                            },
                            "system": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates whether this operation or named query can be invoked at the system level (e.g. without needing to choose a resource type for the context)."
                            },
                            "type": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates whether this operation or named query can be invoked at the resource type level for any given resource type level (e.g. without needing to choose a specific resource id for the context)."
                            },
                            "instance": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates whether this operation can be invoked on a particular instance of one of the given types."
                            },
                            "inputProfile": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Additional validation information for the in parameters - a single profile that covers all the parameters. The profile is a constraint on the parameters resource as a whole."
                            },
                            "outputProfile": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Additional validation information for the out parameters - a single profile that covers all the parameters. The profile is a constraint on the parameters resource."
                            },
                            "parameter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Parameter",
                                    "description": "The parameters for the operation/query."
                                }
                            },
                            "overload": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Overload",
                                    "description": "Defines an appropriate combination of parameters to use when invoking this operation, to help code generators when generating overloaded parameter sets for this operation."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "status",
                    "kind",
                    "code",
                    "system",
                    "type",
                    "instance"
                ]
            },
            "OperationOutcome": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "issue": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Issue",
                                    "description": "An error, warning, or information message that results from a system action."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "issue"
                ]
            },
            "Organization": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifier for the organization that is used to identify the organization across multiple disparate systems."
                                }
                            },
                            "active": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether the organization's record is still in active use."
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The kind(s) of organization that this is."
                                }
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A name associated with the organization."
                            },
                            "alias": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "A list of alternate names that the organization is known as, or was known as in the past."
                                }
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "A contact detail for the organization."
                                }
                            },
                            "address": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Address",
                                    "description": "An address for the organization."
                                }
                            },
                            "partOf": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organization of which this organization forms a part."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Contact",
                                    "description": "Contact for the organization for a certain purpose."
                                }
                            },
                            "endpoint": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Technical endpoints providing access to services operated for the organization."
                                }
                            }
                        }
                    }
                ]
            },
            "OrganizationAffiliation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifiers that are specific to this role."
                                }
                            },
                            "active": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether this organization affiliation record is in active use."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the participatingOrganization is affiliated with the primary organization."
                            },
                            "organization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Organization where the role is available (primary organization/has members)."
                            },
                            "participatingOrganization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Participating Organization provides/performs the role(s) defined by the code to the Primary Organization (e.g. providing services or is a member of)."
                            },
                            "network": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Health insurance provider network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined)."
                                }
                            },
                            "code": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Definition of the role the participatingOrganization plays in the association."
                                }
                            },
                            "specialty": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Specific specialty of the participatingOrganization in the context of the role."
                                }
                            },
                            "location": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The location(s) at which the role occurs."
                                }
                            },
                            "healthcareService": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Healthcare services provided through the role."
                                }
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "Contact details at the participatingOrganization relevant to this Affiliation."
                                }
                            },
                            "endpoint": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Technical endpoints providing access to services operated for this role."
                                }
                            }
                        }
                    }
                ]
            },
            "Parameters": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Resource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "parameter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Parameter",
                                    "description": "A parameter passed to or received from the operation."
                                }
                            }
                        }
                    }
                ]
            },
            "Patient": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "An identifier for this patient."
                                }
                            },
                            "active": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether this patient record is in active use. \nMany systems use this property to mark as non-current patients, such as those that have not been seen for a period of time based on an organization's business rules.\n\nIt is often used to filter patient lists to exclude inactive patients\n\nDeceased patients may also be marked as inactive for the same reasons, but may be active for some time after death."
                            },
                            "name": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HumanName",
                                    "description": "A name associated with the individual."
                                }
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted."
                                }
                            },
                            "gender": {
                                "type": "string",
                                "enum": [
                                    "male",
                                    "female",
                                    "other",
                                    "unknown"
                                ],
                                "description": "Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes."
                            },
                            "birthDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date of birth for the individual."
                            },
                            "deceasedBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates if the individual is deceased or not."
                            },
                            "deceasedDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Indicates if the individual is deceased or not."
                            },
                            "address": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Address",
                                    "description": "An address for the individual."
                                }
                            },
                            "maritalStatus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "This field contains a patient's most recent marital (civil) status."
                            },
                            "multipleBirthBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer)."
                            },
                            "multipleBirthInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer)."
                            },
                            "photo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Attachment",
                                    "description": "Image of the patient."
                                }
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Contact",
                                    "description": "A contact party (e.g. guardian, partner, friend) for the patient."
                                }
                            },
                            "communication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Communication",
                                    "description": "A language which may be used to communicate with the patient about his or her health."
                                }
                            },
                            "generalPractitioner": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Patient's nominated care provider."
                                }
                            },
                            "managingOrganization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Organization that is the custodian of the patient record."
                            },
                            "link": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Link",
                                    "description": "Link to another patient resource that concerns the same actual patient."
                                }
                            }
                        }
                    }
                ]
            },
            "PaymentNotice": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this payment notice."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "request": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference of resource for which payment is being made."
                            },
                            "response": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference of response to resource for which payment is being made."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date when this resource was created."
                            },
                            "provider": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The practitioner who is responsible for the services rendered to the patient."
                            },
                            "payment": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to the payment which is the subject of this notice."
                            },
                            "paymentDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date when the above payment action occurred."
                            },
                            "payee": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party who will receive or has received payment that is the subject of this notification."
                            },
                            "recipient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party who is notified of the payment status."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The amount sent to the payee."
                            },
                            "paymentStatus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code indicating whether payment has been sent or cleared."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "created",
                    "payment",
                    "recipient",
                    "amount"
                ]
            },
            "PaymentReconciliation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this payment reconciliation."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period of time for which payments have been gathered into this bulk payment for settlement."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date when the resource was created."
                            },
                            "paymentIssuer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party who generated the payment."
                            },
                            "request": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Original request resource reference."
                            },
                            "requestor": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The practitioner who is responsible for the services rendered to the patient."
                            },
                            "outcome": {
                                "type": "string",
                                "enum": [
                                    "queued",
                                    "complete",
                                    "error",
                                    "partial"
                                ],
                                "description": "The outcome of a request for a reconciliation."
                            },
                            "disposition": {
                                "$ref": "#/components/schemas/String",
                                "description": "A human readable description of the status of the request for the reconciliation."
                            },
                            "paymentDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date of payment as indicated on the financial instrument."
                            },
                            "paymentAmount": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Total payment amount as indicated on the financial instrument."
                            },
                            "paymentIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Issuer's unique identifier for the payment instrument."
                            },
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Detail",
                                    "description": "Distribution of the payment amount for a previously acknowledged payable."
                                }
                            },
                            "formCode": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code for the form to be used for printing the content."
                            },
                            "processNote": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProcessNote",
                                    "description": "A note that describes or explains the processing in a human readable form."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "created",
                    "paymentDate",
                    "paymentAmount"
                ]
            },
            "Person": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifier for a person within a particular scope."
                                }
                            },
                            "name": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HumanName",
                                    "description": "A name associated with the person."
                                }
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "A contact detail for the person, e.g. a telephone number or an email address."
                                }
                            },
                            "gender": {
                                "type": "string",
                                "enum": [
                                    "male",
                                    "female",
                                    "other",
                                    "unknown"
                                ],
                                "description": "Administrative Gender."
                            },
                            "birthDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The birth date for the person."
                            },
                            "address": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Address",
                                    "description": "One or more addresses for the person."
                                }
                            },
                            "photo": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "An image that can be displayed as a thumbnail of the person to enhance the identification of the individual."
                            },
                            "managingOrganization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organization that is the custodian of the person record."
                            },
                            "active": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether this person's record is in active use."
                            },
                            "link": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Link",
                                    "description": "Link to a resource that concerns the same actual person."
                                }
                            }
                        }
                    }
                ]
            },
            "PlanDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this plan definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this plan definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the plan definition is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this plan definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the plan definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the plan definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the plan definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the plan definition."
                            },
                            "subtitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "An explanatory or alternate title for the plan definition giving additional information about its content."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A high-level category for the plan definition that distinguishes the kinds of systems that would be interested in the plan definition."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this plan definition. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this plan definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "subjectCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code or group definition that describes the intended subject of the plan definition."
                            },
                            "subjectReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A code or group definition that describes the intended subject of the plan definition."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the plan definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the plan definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the plan definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the plan definition from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate plan definition instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the plan definition is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this plan definition is needed and why it has been designed as it has."
                            },
                            "usage": {
                                "$ref": "#/components/schemas/String",
                                "description": "A detailed description of how the plan definition is used from a clinical perspective."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the plan definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the plan definition."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the plan definition content was or is planned to be in active use."
                            },
                            "topic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Descriptive topics related to the content of the plan definition. Topics provide a high-level categorization of the definition that can be useful for filtering and searching."
                                }
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                                }
                            },
                            "editor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for internal coherence of the content."
                                }
                            },
                            "reviewer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for review of some aspect of the content."
                                }
                            },
                            "endorser": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Related artifacts such as additional documentation, justification, or bibliographic references."
                                }
                            },
                            "library": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "A reference to a Library resource containing any formal logic used by the plan definition."
                                }
                            },
                            "goal": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Goal",
                                    "description": "Goals that describe what the activities within the plan are intended to achieve. For example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc."
                                }
                            },
                            "action": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Action",
                                    "description": "An action or group of actions to be taken as part of the plan."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "Practitioner": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "An identifier that applies to this person in this role."
                                }
                            },
                            "active": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether this practitioner's record is in active use."
                            },
                            "name": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HumanName",
                                    "description": "The name(s) associated with the practitioner."
                                }
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "A contact detail for the practitioner, e.g. a telephone number or an email address."
                                }
                            },
                            "address": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Address",
                                    "description": "Address(es) of the practitioner that are not role specific (typically home address). \rWork addresses are not typically entered in this property as they are usually role dependent."
                                }
                            },
                            "gender": {
                                "type": "string",
                                "enum": [
                                    "male",
                                    "female",
                                    "other",
                                    "unknown"
                                ],
                                "description": "Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes."
                            },
                            "birthDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date of birth for the practitioner."
                            },
                            "photo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Attachment",
                                    "description": "Image of the person."
                                }
                            },
                            "qualification": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Qualification",
                                    "description": "The official certifications, training, and licenses that authorize or otherwise pertain to the provision of care by the practitioner.  For example, a medical license issued by a medical board authorizing the practitioner to practice medicine within a certian locality."
                                }
                            },
                            "communication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A language the practitioner can use in patient communication."
                                }
                            }
                        }
                    }
                ]
            },
            "PractitionerRole": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business Identifiers that are specific to a role/location."
                                }
                            },
                            "active": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether this practitioner role record is in active use."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the person is authorized to act as a practitioner in these role(s) for the organization."
                            },
                            "practitioner": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Practitioner that is able to provide the defined services for the organization."
                            },
                            "organization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organization where the Practitioner performs the roles associated."
                            },
                            "code": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Roles which this practitioner is authorized to perform for the organization."
                                }
                            },
                            "specialty": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Specific specialty of the practitioner."
                                }
                            },
                            "location": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The location(s) at which this practitioner provides care."
                                }
                            },
                            "healthcareService": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The list of healthcare services that this worker provides for this role's Organization/Location(s)."
                                }
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "Contact details that are specific to the role/location/service."
                                }
                            },
                            "availableTime": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AvailableTime",
                                    "description": "A collection of times the practitioner is available or performing this role at the location and/or healthcareservice."
                                }
                            },
                            "notAvailable": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NotAvailable",
                                    "description": "The practitioner is not available or performing this role during this period of time due to the provided reason."
                                }
                            },
                            "availabilityExceptions": {
                                "$ref": "#/components/schemas/String",
                                "description": "A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times."
                            },
                            "endpoint": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Technical endpoints providing access to services operated for the practitioner with this role."
                                }
                            }
                        }
                    }
                ]
            },
            "Procedure": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Identifier for this procedure."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of procedure."
                            },
                            "datePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Date of procedure."
                            },
                            "dateDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date of procedure."
                            },
                            "application": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Procedure",
                                    "description": "Applcations submitted to obtain a marketing authorization."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Provenance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "target": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The Reference(s) that were generated or updated by  the activity described in this resource. A provenance can point to more than one target if multiple resources were created/updated by the same activity."
                                }
                            },
                            "occurredPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the activity occurred."
                            },
                            "occurredDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The period during which the activity occurred."
                            },
                            "recorded": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The instant of time at which the activity was recorded."
                            },
                            "policy": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "Policy or plan the activity was defined by. Typically, a single activity may have multiple applicable policy documents, such as patient consent, guarantor funding, etc."
                                }
                            },
                            "location": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Where the activity occurred, if relevant."
                            },
                            "reason": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The reason that the activity was taking place."
                                }
                            },
                            "activity": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities."
                            },
                            "agent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Agent",
                                    "description": "An actor taking a role in an activity  for which it can be assigned some degree of responsibility for the activity taking place."
                                }
                            },
                            "entity": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Entity",
                                    "description": "An entity used in this activity."
                                }
                            },
                            "signature": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Signature",
                                    "description": "A digital signature on the target Reference(s). The signer should match a Provenance.agent. The purpose of the signature is indicated."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "target",
                    "recorded",
                    "agent"
                ]
            },
            "Questionnaire": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this questionnaire when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this questionnaire is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the questionnaire is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this questionnaire when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the questionnaire when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the questionnaire author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the questionnaire. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the questionnaire."
                            },
                            "derivedFrom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "The URL of a Questionnaire that this Questionnaire is based on."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this questionnaire. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this questionnaire is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "subjectType": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "Account",
                                        "ActivityDefinition",
                                        "AdverseEvent",
                                        "AllergyIntolerance",
                                        "Appointment",
                                        "AppointmentResponse",
                                        "AuditEvent",
                                        "Basic",
                                        "Binary",
                                        "BiologicallyDerivedProduct",
                                        "BodyStructure",
                                        "Bundle",
                                        "CapabilityStatement",
                                        "CarePlan",
                                        "CareTeam",
                                        "CatalogEntry",
                                        "ChargeItem",
                                        "ChargeItemDefinition",
                                        "Claim",
                                        "ClaimResponse",
                                        "ClinicalImpression",
                                        "CodeSystem",
                                        "Communication",
                                        "CommunicationRequest",
                                        "CompartmentDefinition",
                                        "Composition",
                                        "ConceptMap",
                                        "Condition",
                                        "Consent",
                                        "Contract",
                                        "Coverage",
                                        "CoverageEligibilityRequest",
                                        "CoverageEligibilityResponse",
                                        "DetectedIssue",
                                        "Device",
                                        "DeviceDefinition",
                                        "DeviceMetric",
                                        "DeviceRequest",
                                        "DeviceUseStatement",
                                        "DiagnosticReport",
                                        "DocumentManifest",
                                        "DocumentReference",
                                        "DomainResource",
                                        "EffectEvidenceSynthesis",
                                        "Encounter",
                                        "Endpoint",
                                        "EnrollmentRequest",
                                        "EnrollmentResponse",
                                        "EpisodeOfCare",
                                        "EventDefinition",
                                        "Evidence",
                                        "EvidenceVariable",
                                        "ExampleScenario",
                                        "ExplanationOfBenefit",
                                        "FamilyMemberHistory",
                                        "Flag",
                                        "Goal",
                                        "GraphDefinition",
                                        "Group",
                                        "GuidanceResponse",
                                        "HealthcareService",
                                        "ImagingStudy",
                                        "Immunization",
                                        "ImmunizationEvaluation",
                                        "ImmunizationRecommendation",
                                        "ImplementationGuide",
                                        "InsurancePlan",
                                        "Invoice",
                                        "Library",
                                        "Linkage",
                                        "List",
                                        "Location",
                                        "Measure",
                                        "MeasureReport",
                                        "Media",
                                        "Medication",
                                        "MedicationAdministration",
                                        "MedicationDispense",
                                        "MedicationKnowledge",
                                        "MedicationRequest",
                                        "MedicationStatement",
                                        "MedicinalProduct",
                                        "MedicinalProductAuthorization",
                                        "MedicinalProductContraindication",
                                        "MedicinalProductIndication",
                                        "MedicinalProductIngredient",
                                        "MedicinalProductInteraction",
                                        "MedicinalProductManufactured",
                                        "MedicinalProductPackaged",
                                        "MedicinalProductPharmaceutical",
                                        "MedicinalProductUndesirableEffect",
                                        "MessageDefinition",
                                        "MessageHeader",
                                        "MolecularSequence",
                                        "NamingSystem",
                                        "NutritionOrder",
                                        "Observation",
                                        "ObservationDefinition",
                                        "OperationDefinition",
                                        "OperationOutcome",
                                        "Organization",
                                        "OrganizationAffiliation",
                                        "Parameters",
                                        "Patient",
                                        "PaymentNotice",
                                        "PaymentReconciliation",
                                        "Person",
                                        "PlanDefinition",
                                        "Practitioner",
                                        "PractitionerRole",
                                        "Procedure",
                                        "Provenance",
                                        "Questionnaire",
                                        "QuestionnaireResponse",
                                        "RelatedPerson",
                                        "RequestGroup",
                                        "ResearchDefinition",
                                        "ResearchElementDefinition",
                                        "ResearchStudy",
                                        "ResearchSubject",
                                        "Resource",
                                        "RiskAssessment",
                                        "RiskEvidenceSynthesis",
                                        "Schedule",
                                        "SearchParameter",
                                        "ServiceRequest",
                                        "Slot",
                                        "Specimen",
                                        "SpecimenDefinition",
                                        "StructureDefinition",
                                        "StructureMap",
                                        "Subscription",
                                        "Substance",
                                        "SubstanceNucleicAcid",
                                        "SubstancePolymer",
                                        "SubstanceProtein",
                                        "SubstanceReferenceInformation",
                                        "SubstanceSourceMaterial",
                                        "SubstanceSpecification",
                                        "SupplyDelivery",
                                        "SupplyRequest",
                                        "Task",
                                        "TerminologyCapabilities",
                                        "TestReport",
                                        "TestScript",
                                        "ValueSet",
                                        "VerificationResult",
                                        "VisionPrescription"
                                    ],
                                    "description": "The types of subjects that can be the subject of responses created for the questionnaire."
                                }
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the questionnaire was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the questionnaire changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the questionnaire."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the questionnaire from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate questionnaire instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the questionnaire is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this questionnaire is needed and why it has been designed as it has."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the questionnaire and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the questionnaire."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the questionnaire content was or is planned to be in active use."
                            },
                            "code": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "An identifier for this question or group of questions in a particular terminology such as LOINC."
                                }
                            },
                            "item": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Item",
                                    "description": "A particular question, question grouping or display text that is part of the questionnaire."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "QuestionnaireResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A business identifier assigned to a particular completed (or partially completed) questionnaire."
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The order, proposal or plan that is fulfilled in whole or in part by this QuestionnaireResponse.  For example, a ServiceRequest seeking an intake assessment or a decision support recommendation to assess for post-partum depression."
                                }
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A procedure or observation that this questionnaire was performed as part of the execution of.  For example, the surgery a checklist was executed as part of."
                                }
                            },
                            "questionnaire": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The Questionnaire that defines and organizes the questions for which answers are being provided."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "in-progress",
                                    "completed",
                                    "amended",
                                    "entered-in-error",
                                    "stopped"
                                ],
                                "description": "The position of the questionnaire response within its overall lifecycle."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The subject of the questionnaire response.  This could be a patient, organization, practitioner, device, etc.  This is who/what the answers apply to, but is not necessarily the source of information."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Encounter during which this questionnaire response was created or to which the creation of this record is tightly associated."
                            },
                            "authored": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date and/or time that this set of answers were last changed."
                            },
                            "author": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Person who received the answers to the questions in the QuestionnaireResponse and recorded them in the system."
                            },
                            "source": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The person who answered the questions about the subject."
                            },
                            "item": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Item",
                                    "description": "A group or question item from the original questionnaire for which answers are provided."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "RelatedPerson": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifier for a person within a particular scope."
                                }
                            },
                            "active": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether this related person record is in active use."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient this person is related to."
                            },
                            "relationship": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The nature of the relationship between a patient and the related person."
                                }
                            },
                            "name": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HumanName",
                                    "description": "A name associated with the person."
                                }
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "A contact detail for the person, e.g. a telephone number or an email address."
                                }
                            },
                            "gender": {
                                "type": "string",
                                "enum": [
                                    "male",
                                    "female",
                                    "other",
                                    "unknown"
                                ],
                                "description": "Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes."
                            },
                            "birthDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the related person was born."
                            },
                            "address": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Address",
                                    "description": "Address where the related person can be contacted or visited."
                                }
                            },
                            "photo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Attachment",
                                    "description": "Image of the person."
                                }
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period of time during which this relationship is or was active. If there are no dates defined, then the interval is unknown."
                            },
                            "communication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Communication",
                                    "description": "A language which may be used to communicate with about the patient's health."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "patient"
                ]
            },
            "RequestGroup": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Allows a service to provide a unique, business identifier for the request."
                                }
                            },
                            "instantiatesCanonical": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request."
                                }
                            },
                            "instantiatesUri": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "A URL referencing an externally defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A plan, proposal or order that is fulfilled in whole or in part by this request."
                                }
                            },
                            "replaces": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Completed or terminated request(s) whose function is taken by this new request."
                                }
                            },
                            "groupIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "on-hold",
                                    "revoked",
                                    "completed",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "The current state of the request. For request groups, the status reflects the status of all the requests in the group."
                            },
                            "intent": {
                                "type": "string",
                                "enum": [
                                    "proposal",
                                    "plan",
                                    "directive",
                                    "order",
                                    "original-order",
                                    "reflex-order",
                                    "filler-order",
                                    "instance-order",
                                    "option"
                                ],
                                "description": "Indicates the level of authority/intentionality associated with the request and where the request fits into the workflow chain."
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "routine",
                                    "urgent",
                                    "asap",
                                    "stat"
                                ],
                                "description": "Indicates how quickly the request should be addressed with respect to other requests."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code that identifies what the overall request group is."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The subject for which the request group was created."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Describes the context of the request group, if any."
                            },
                            "authoredOn": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Indicates when the request group was created."
                            },
                            "author": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Provides a reference to the author of the request group."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Describes the reason for the request group in coded or textual form."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates another resource whose existence justifies this request group."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Provides a mechanism to communicate additional information about the response."
                                }
                            },
                            "action": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Action",
                                    "description": "The actions, if any, produced by the evaluation of the artifact."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "intent"
                ]
            },
            "ResearchDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this research definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this research definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the research definition is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this research definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the research definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the research definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the research definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the research definition."
                            },
                            "shortTitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary."
                            },
                            "subtitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "An explanatory or alternate title for the ResearchDefinition giving additional information about its content."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this research definition. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this research definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "subjectCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The intended subjects for the ResearchDefinition. If this element is not provided, a Patient subject is assumed, but the subject of the ResearchDefinition can be anything."
                            },
                            "subjectReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The intended subjects for the ResearchDefinition. If this element is not provided, a Patient subject is assumed, but the subject of the ResearchDefinition can be anything."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the research definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the research definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the research definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the research definition from a consumer's perspective."
                            },
                            "comment": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "A human-readable string to clarify or explain concepts about the resource."
                                }
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate research definition instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the research definition is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this research definition is needed and why it has been designed as it has."
                            },
                            "usage": {
                                "$ref": "#/components/schemas/String",
                                "description": "A detailed description, from a clinical perspective, of how the ResearchDefinition is used."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the research definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the research definition."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the research definition content was or is planned to be in active use."
                            },
                            "topic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Descriptive topics related to the content of the ResearchDefinition. Topics provide a high-level categorization grouping types of ResearchDefinitions that can be useful for filtering and searching."
                                }
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                                }
                            },
                            "editor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for internal coherence of the content."
                                }
                            },
                            "reviewer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for review of some aspect of the content."
                                }
                            },
                            "endorser": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Related artifacts such as additional documentation, justification, or bibliographic references."
                                }
                            },
                            "library": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "A reference to a Library resource containing the formal logic used by the ResearchDefinition."
                                }
                            },
                            "population": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a ResearchElementDefinition resource that defines the population for the research."
                            },
                            "exposure": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a ResearchElementDefinition resource that defines the exposure for the research."
                            },
                            "exposureAlternative": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a ResearchElementDefinition resource that defines the exposureAlternative for the research."
                            },
                            "outcome": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a ResearchElementDefinition resomece that defines the outcome for the research."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "population"
                ]
            },
            "ResearchElementDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this research element definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this research element definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the research element definition is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this research element definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the research element definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the research element definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the research element definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the research element definition."
                            },
                            "shortTitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary."
                            },
                            "subtitle": {
                                "$ref": "#/components/schemas/String",
                                "description": "An explanatory or alternate title for the ResearchElementDefinition giving additional information about its content."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this research element definition. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this research element definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "subjectCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The intended subjects for the ResearchElementDefinition. If this element is not provided, a Patient subject is assumed, but the subject of the ResearchElementDefinition can be anything."
                            },
                            "subjectReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The intended subjects for the ResearchElementDefinition. If this element is not provided, a Patient subject is assumed, but the subject of the ResearchElementDefinition can be anything."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the research element definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the research element definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the research element definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the research element definition from a consumer's perspective."
                            },
                            "comment": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "A human-readable string to clarify or explain concepts about the resource."
                                }
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate research element definition instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the research element definition is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this research element definition is needed and why it has been designed as it has."
                            },
                            "usage": {
                                "$ref": "#/components/schemas/String",
                                "description": "A detailed description, from a clinical perspective, of how the ResearchElementDefinition is used."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the research element definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the research element definition."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the research element definition content was or is planned to be in active use."
                            },
                            "topic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Descriptive topics related to the content of the ResearchElementDefinition. Topics provide a high-level categorization grouping types of ResearchElementDefinitions that can be useful for filtering and searching."
                                }
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                                }
                            },
                            "editor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for internal coherence of the content."
                                }
                            },
                            "reviewer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for review of some aspect of the content."
                                }
                            },
                            "endorser": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Related artifacts such as additional documentation, justification, or bibliographic references."
                                }
                            },
                            "library": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "A reference to a Library resource containing the formal logic used by the ResearchElementDefinition."
                                }
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "population",
                                    "exposure",
                                    "outcome"
                                ],
                                "description": "The type of research element, a population, an exposure, or an outcome."
                            },
                            "variableType": {
                                "type": "string",
                                "enum": [
                                    "dichotomous",
                                    "continuous",
                                    "descriptive"
                                ],
                                "description": "The type of the outcome (e.g. Dichotomous, Continuous, or Descriptive)."
                            },
                            "characteristic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Characteristic",
                                    "description": "A characteristic that defines the members of the research element. Multiple characteristics are applied with \"and\" semantics."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "type",
                    "characteristic"
                ]
            },
            "ResearchStudy": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers assigned to this research study by the sponsor or other systems."
                                }
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive user-friendly label for the study."
                            },
                            "protocol": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The set of steps expected to be performed as part of the execution of the study."
                                }
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A larger research study of which this particular study is a component or step."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "administratively-completed",
                                    "approved",
                                    "closed-to-accrual",
                                    "closed-to-accrual-and-intervention",
                                    "completed",
                                    "disapproved",
                                    "in-review",
                                    "temporarily-closed-to-accrual",
                                    "temporarily-closed-to-accrual-and-intervention",
                                    "withdrawn"
                                ],
                                "description": "The current state of the study."
                            },
                            "primaryPurposeType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of study based upon the intent of the study's activities. A classification of the intent of the study."
                            },
                            "phase": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The stage in the progression of a therapy from initial experimental use in humans in clinical trials to post-market evaluation."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Codes categorizing the type of study such as investigational vs. observational, type of blinding, type of randomization, safety vs. efficacy, etc."
                                }
                            },
                            "focus": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The medication(s), food(s), therapy(ies), device(s) or other concerns or interventions that the study is seeking to gain more information about."
                                }
                            },
                            "condition": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The condition that is the focus of the study.  For example, In a study to examine risk factors for Lupus, might have as an inclusion criterion \"healthy volunteer\", but the target condition code would be a Lupus SNOMED code."
                                }
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in learning more about or engaging with the study."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Citations, references and other related documents."
                                }
                            },
                            "keyword": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Key terms to aid in searching for or filtering the study."
                                }
                            },
                            "location": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Indicates a country, state or other region where the study is taking place."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A full description of how the study is being conducted."
                            },
                            "enrollment": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Reference to a Group that defines the criteria for and quantity of subjects participating in the study.  E.g. \" 200 female Europeans between the ages of 20 and 45 with early onset diabetes\"."
                                }
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Identifies the start date and the expected (or actual, depending on status) end date for the study."
                            },
                            "sponsor": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "An organization that initiates the investigation and is legally responsible for the study."
                            },
                            "principalInvestigator": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A researcher in a study who oversees multiple aspects of the study, such as concept development, protocol writing, protocol submission for IRB approval, participant recruitment, informed consent, data collection, analysis, interpretation and presentation."
                            },
                            "site": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A facility in which study activities are conducted."
                                }
                            },
                            "reasonStopped": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A description and/or code explaining the premature termination of the study."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Comments made about the study by the performer, subject or other participants."
                                }
                            },
                            "arm": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Arm",
                                    "description": "Describes an expected sequence of events for one of the participants of a study.  E.g. Exposure to drug A, wash-out, exposure to drug B, wash-out, follow-up."
                                }
                            },
                            "objective": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Objective",
                                    "description": "A goal that the study is aiming to achieve in terms of a scientific question to be answered by the analysis of data collected during the study."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "ResearchSubject": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers assigned to this research subject for a study."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "candidate",
                                    "eligible",
                                    "follow-up",
                                    "ineligible",
                                    "not-registered",
                                    "off-study",
                                    "on-study",
                                    "on-study-intervention",
                                    "on-study-observation",
                                    "pending-on-study",
                                    "potential-candidate",
                                    "screening",
                                    "withdrawn"
                                ],
                                "description": "The current state of the subject."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The dates the subject began and ended their participation in the study."
                            },
                            "study": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the study the subject is participating in."
                            },
                            "individual": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The record of the person or animal who is involved in the study."
                            },
                            "assignedArm": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the arm in the study the subject is expected to follow as part of this study."
                            },
                            "actualArm": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the arm in the study the subject actually followed as part of this study."
                            },
                            "consent": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A record of the patient's informed agreement to participate in the study."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "study",
                    "individual"
                ]
            },
            "Resource": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "reference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Where this resource is found."
                            },
                            "exampleBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile."
                            },
                            "exampleCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile."
                            },
                            "relativePath": {
                                "$ref": "#/components/schemas/Url",
                                "description": "The relative path for primary page for this resource within the IG."
                            }
                        }
                    }
                ],
                "required": [
                    "reference"
                ]
            },
            "RiskAssessment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifier assigned to the risk assessment."
                                }
                            },
                            "basedOn": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to the request that is fulfilled by this risk assessment."
                            },
                            "parent": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a resource that this risk assessment is part of, such as a Procedure."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "registered",
                                    "preliminary",
                                    "final",
                                    "amended",
                                    "corrected",
                                    "cancelled",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "The status of the RiskAssessment, using the same statuses as an Observation."
                            },
                            "method": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The algorithm, process or mechanism used to evaluate the risk."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of the risk assessment performed."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The patient or group the risk assessment applies to."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The encounter where the assessment was performed."
                            },
                            "occurrenceDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date (and possibly time) the risk assessment was performed."
                            },
                            "occurrencePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date (and possibly time) the risk assessment was performed."
                            },
                            "condition": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "For assessments or prognosis specific to a particular condition, indicates the condition being assessed."
                            },
                            "performer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The provider or software application that performed the assessment."
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The reason the risk assessment was performed."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Resources supporting the reason the risk assessment was performed."
                                }
                            },
                            "basis": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates the source data considered as part of the assessment (for example, FamilyHistory, Observations, Procedures, Conditions, etc.)."
                                }
                            },
                            "prediction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Prediction",
                                    "description": "Describes the expected outcome for the subject."
                                }
                            },
                            "mitigation": {
                                "$ref": "#/components/schemas/String",
                                "description": "A description of the steps that might be taken to reduce the identified risk(s)."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Additional comments about the risk assessment."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "subject"
                ]
            },
            "RiskEvidenceSynthesis": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this risk evidence synthesis when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this risk evidence synthesis is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the risk evidence synthesis is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this risk evidence synthesis when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the risk evidence synthesis when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the risk evidence synthesis author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the risk evidence synthesis. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the risk evidence synthesis."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this risk evidence synthesis. Enables tracking the life-cycle of the content."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the risk evidence synthesis was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the risk evidence synthesis changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the risk evidence synthesis."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the risk evidence synthesis from a consumer's perspective."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "A human-readable string to clarify or explain concepts about the resource."
                                }
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate risk evidence synthesis instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the risk evidence synthesis is intended to be used."
                                }
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the risk evidence synthesis and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the risk evidence synthesis."
                            },
                            "approvalDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
                            },
                            "lastReviewDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
                            },
                            "effectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which the risk evidence synthesis content was or is planned to be in active use."
                            },
                            "topic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Descriptive topics related to the content of the RiskEvidenceSynthesis. Topics provide a high-level categorization grouping types of EffectEvidenceSynthesiss that can be useful for filtering and searching."
                                }
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individiual or organization primarily involved in the creation and maintenance of the content."
                                }
                            },
                            "editor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for internal coherence of the content."
                                }
                            },
                            "reviewer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization primarily responsible for review of some aspect of the content."
                                }
                            },
                            "endorser": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "An individual or organization responsible for officially endorsing the content for use in some setting."
                                }
                            },
                            "relatedArtifact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedArtifact",
                                    "description": "Related artifacts such as additional documentation, justification, or bibliographic references."
                                }
                            },
                            "synthesisType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of synthesis eg meta-analysis."
                            },
                            "studyType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of study eg randomized trial."
                            },
                            "population": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a EvidenceVariable resource that defines the population for the research."
                            },
                            "exposure": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a EvidenceVariable resource that defines the exposure for the research."
                            },
                            "outcome": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a EvidenceVariable resomece that defines the outcome for the research."
                            },
                            "sampleSize": {
                                "$ref": "#/components/schemas/SampleSize",
                                "description": "A description of the size of the sample involved in the synthesis."
                            },
                            "riskEstimate": {
                                "$ref": "#/components/schemas/RiskEstimate",
                                "description": "The estimated risk of the outcome."
                            },
                            "certainty": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Certainty",
                                    "description": "A description of the certainty of the risk estimate."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "population",
                    "outcome"
                ]
            },
            "Schedule": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "schedule": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specifies the specific drug schedule."
                            }
                        }
                    }
                ],
                "required": [
                    "schedule"
                ]
            },
            "SearchParameter": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this search parameter when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this search parameter is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the search parameter is stored on different servers."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the search parameter when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the search parameter author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the search parameter. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "derivedFrom": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Where this search parameter is originally defined. If a derivedFrom is provided, then the details in the search parameter must be consistent with the definition from which it is defined. i.e. the parameter should have the same meaning, and (usually) the functionality should be a proper subset of the underlying search parameter."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this search parameter. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this search parameter is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the search parameter was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the search parameter changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the search parameter."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "And how it used."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate search parameter instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the search parameter is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this search parameter is needed and why it has been designed as it has."
                            },
                            "code": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The code used in the URL or the parameter name in a parameters resource for this search parameter."
                            },
                            "base": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "Account",
                                        "ActivityDefinition",
                                        "AdverseEvent",
                                        "AllergyIntolerance",
                                        "Appointment",
                                        "AppointmentResponse",
                                        "AuditEvent",
                                        "Basic",
                                        "Binary",
                                        "BiologicallyDerivedProduct",
                                        "BodyStructure",
                                        "Bundle",
                                        "CapabilityStatement",
                                        "CarePlan",
                                        "CareTeam",
                                        "CatalogEntry",
                                        "ChargeItem",
                                        "ChargeItemDefinition",
                                        "Claim",
                                        "ClaimResponse",
                                        "ClinicalImpression",
                                        "CodeSystem",
                                        "Communication",
                                        "CommunicationRequest",
                                        "CompartmentDefinition",
                                        "Composition",
                                        "ConceptMap",
                                        "Condition",
                                        "Consent",
                                        "Contract",
                                        "Coverage",
                                        "CoverageEligibilityRequest",
                                        "CoverageEligibilityResponse",
                                        "DetectedIssue",
                                        "Device",
                                        "DeviceDefinition",
                                        "DeviceMetric",
                                        "DeviceRequest",
                                        "DeviceUseStatement",
                                        "DiagnosticReport",
                                        "DocumentManifest",
                                        "DocumentReference",
                                        "DomainResource",
                                        "EffectEvidenceSynthesis",
                                        "Encounter",
                                        "Endpoint",
                                        "EnrollmentRequest",
                                        "EnrollmentResponse",
                                        "EpisodeOfCare",
                                        "EventDefinition",
                                        "Evidence",
                                        "EvidenceVariable",
                                        "ExampleScenario",
                                        "ExplanationOfBenefit",
                                        "FamilyMemberHistory",
                                        "Flag",
                                        "Goal",
                                        "GraphDefinition",
                                        "Group",
                                        "GuidanceResponse",
                                        "HealthcareService",
                                        "ImagingStudy",
                                        "Immunization",
                                        "ImmunizationEvaluation",
                                        "ImmunizationRecommendation",
                                        "ImplementationGuide",
                                        "InsurancePlan",
                                        "Invoice",
                                        "Library",
                                        "Linkage",
                                        "List",
                                        "Location",
                                        "Measure",
                                        "MeasureReport",
                                        "Media",
                                        "Medication",
                                        "MedicationAdministration",
                                        "MedicationDispense",
                                        "MedicationKnowledge",
                                        "MedicationRequest",
                                        "MedicationStatement",
                                        "MedicinalProduct",
                                        "MedicinalProductAuthorization",
                                        "MedicinalProductContraindication",
                                        "MedicinalProductIndication",
                                        "MedicinalProductIngredient",
                                        "MedicinalProductInteraction",
                                        "MedicinalProductManufactured",
                                        "MedicinalProductPackaged",
                                        "MedicinalProductPharmaceutical",
                                        "MedicinalProductUndesirableEffect",
                                        "MessageDefinition",
                                        "MessageHeader",
                                        "MolecularSequence",
                                        "NamingSystem",
                                        "NutritionOrder",
                                        "Observation",
                                        "ObservationDefinition",
                                        "OperationDefinition",
                                        "OperationOutcome",
                                        "Organization",
                                        "OrganizationAffiliation",
                                        "Parameters",
                                        "Patient",
                                        "PaymentNotice",
                                        "PaymentReconciliation",
                                        "Person",
                                        "PlanDefinition",
                                        "Practitioner",
                                        "PractitionerRole",
                                        "Procedure",
                                        "Provenance",
                                        "Questionnaire",
                                        "QuestionnaireResponse",
                                        "RelatedPerson",
                                        "RequestGroup",
                                        "ResearchDefinition",
                                        "ResearchElementDefinition",
                                        "ResearchStudy",
                                        "ResearchSubject",
                                        "Resource",
                                        "RiskAssessment",
                                        "RiskEvidenceSynthesis",
                                        "Schedule",
                                        "SearchParameter",
                                        "ServiceRequest",
                                        "Slot",
                                        "Specimen",
                                        "SpecimenDefinition",
                                        "StructureDefinition",
                                        "StructureMap",
                                        "Subscription",
                                        "Substance",
                                        "SubstanceNucleicAcid",
                                        "SubstancePolymer",
                                        "SubstanceProtein",
                                        "SubstanceReferenceInformation",
                                        "SubstanceSourceMaterial",
                                        "SubstanceSpecification",
                                        "SupplyDelivery",
                                        "SupplyRequest",
                                        "Task",
                                        "TerminologyCapabilities",
                                        "TestReport",
                                        "TestScript",
                                        "ValueSet",
                                        "VerificationResult",
                                        "VisionPrescription"
                                    ],
                                    "description": "The base resource type(s) that this search parameter can be used against."
                                }
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "number",
                                    "date",
                                    "string",
                                    "token",
                                    "reference",
                                    "composite",
                                    "quantity",
                                    "uri",
                                    "special"
                                ],
                                "description": "The type of value that a search parameter may contain, and how the content is interpreted."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/String",
                                "description": "A FHIRPath expression that returns a set of elements for the search parameter."
                            },
                            "xpath": {
                                "$ref": "#/components/schemas/String",
                                "description": "An XPath expression that returns a set of elements for the search parameter."
                            },
                            "xpathUsage": {
                                "type": "string",
                                "enum": [
                                    "normal",
                                    "phonetic",
                                    "nearby",
                                    "distance",
                                    "other"
                                ],
                                "description": "How the search parameter relates to the set of elements returned by evaluating the xpath query."
                            },
                            "target": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "Account",
                                        "ActivityDefinition",
                                        "AdverseEvent",
                                        "AllergyIntolerance",
                                        "Appointment",
                                        "AppointmentResponse",
                                        "AuditEvent",
                                        "Basic",
                                        "Binary",
                                        "BiologicallyDerivedProduct",
                                        "BodyStructure",
                                        "Bundle",
                                        "CapabilityStatement",
                                        "CarePlan",
                                        "CareTeam",
                                        "CatalogEntry",
                                        "ChargeItem",
                                        "ChargeItemDefinition",
                                        "Claim",
                                        "ClaimResponse",
                                        "ClinicalImpression",
                                        "CodeSystem",
                                        "Communication",
                                        "CommunicationRequest",
                                        "CompartmentDefinition",
                                        "Composition",
                                        "ConceptMap",
                                        "Condition",
                                        "Consent",
                                        "Contract",
                                        "Coverage",
                                        "CoverageEligibilityRequest",
                                        "CoverageEligibilityResponse",
                                        "DetectedIssue",
                                        "Device",
                                        "DeviceDefinition",
                                        "DeviceMetric",
                                        "DeviceRequest",
                                        "DeviceUseStatement",
                                        "DiagnosticReport",
                                        "DocumentManifest",
                                        "DocumentReference",
                                        "DomainResource",
                                        "EffectEvidenceSynthesis",
                                        "Encounter",
                                        "Endpoint",
                                        "EnrollmentRequest",
                                        "EnrollmentResponse",
                                        "EpisodeOfCare",
                                        "EventDefinition",
                                        "Evidence",
                                        "EvidenceVariable",
                                        "ExampleScenario",
                                        "ExplanationOfBenefit",
                                        "FamilyMemberHistory",
                                        "Flag",
                                        "Goal",
                                        "GraphDefinition",
                                        "Group",
                                        "GuidanceResponse",
                                        "HealthcareService",
                                        "ImagingStudy",
                                        "Immunization",
                                        "ImmunizationEvaluation",
                                        "ImmunizationRecommendation",
                                        "ImplementationGuide",
                                        "InsurancePlan",
                                        "Invoice",
                                        "Library",
                                        "Linkage",
                                        "List",
                                        "Location",
                                        "Measure",
                                        "MeasureReport",
                                        "Media",
                                        "Medication",
                                        "MedicationAdministration",
                                        "MedicationDispense",
                                        "MedicationKnowledge",
                                        "MedicationRequest",
                                        "MedicationStatement",
                                        "MedicinalProduct",
                                        "MedicinalProductAuthorization",
                                        "MedicinalProductContraindication",
                                        "MedicinalProductIndication",
                                        "MedicinalProductIngredient",
                                        "MedicinalProductInteraction",
                                        "MedicinalProductManufactured",
                                        "MedicinalProductPackaged",
                                        "MedicinalProductPharmaceutical",
                                        "MedicinalProductUndesirableEffect",
                                        "MessageDefinition",
                                        "MessageHeader",
                                        "MolecularSequence",
                                        "NamingSystem",
                                        "NutritionOrder",
                                        "Observation",
                                        "ObservationDefinition",
                                        "OperationDefinition",
                                        "OperationOutcome",
                                        "Organization",
                                        "OrganizationAffiliation",
                                        "Parameters",
                                        "Patient",
                                        "PaymentNotice",
                                        "PaymentReconciliation",
                                        "Person",
                                        "PlanDefinition",
                                        "Practitioner",
                                        "PractitionerRole",
                                        "Procedure",
                                        "Provenance",
                                        "Questionnaire",
                                        "QuestionnaireResponse",
                                        "RelatedPerson",
                                        "RequestGroup",
                                        "ResearchDefinition",
                                        "ResearchElementDefinition",
                                        "ResearchStudy",
                                        "ResearchSubject",
                                        "Resource",
                                        "RiskAssessment",
                                        "RiskEvidenceSynthesis",
                                        "Schedule",
                                        "SearchParameter",
                                        "ServiceRequest",
                                        "Slot",
                                        "Specimen",
                                        "SpecimenDefinition",
                                        "StructureDefinition",
                                        "StructureMap",
                                        "Subscription",
                                        "Substance",
                                        "SubstanceNucleicAcid",
                                        "SubstancePolymer",
                                        "SubstanceProtein",
                                        "SubstanceReferenceInformation",
                                        "SubstanceSourceMaterial",
                                        "SubstanceSpecification",
                                        "SupplyDelivery",
                                        "SupplyRequest",
                                        "Task",
                                        "TerminologyCapabilities",
                                        "TestReport",
                                        "TestScript",
                                        "ValueSet",
                                        "VerificationResult",
                                        "VisionPrescription"
                                    ],
                                    "description": "Types of resource (if a resource is referenced)."
                                }
                            },
                            "multipleOr": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether multiple values are allowed for each time the parameter exists. Values are separated by commas, and the parameter matches if any of the values match."
                            },
                            "multipleAnd": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether multiple parameters are allowed - e.g. more than one parameter with the same name. The search matches if all the parameters match."
                            },
                            "comparator": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "eq",
                                        "ne",
                                        "gt",
                                        "lt",
                                        "ge",
                                        "le",
                                        "sa",
                                        "eb",
                                        "ap"
                                    ],
                                    "description": "Comparators supported for the search parameter."
                                }
                            },
                            "modifier": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "missing",
                                        "exact",
                                        "contains",
                                        "not",
                                        "text",
                                        "in",
                                        "not-in",
                                        "below",
                                        "above",
                                        "type",
                                        "identifier",
                                        "ofType"
                                    ],
                                    "description": "A modifier supported for the search parameter."
                                }
                            },
                            "chain": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from SearchParameter.code for a parameter on the target resource type."
                                }
                            },
                            "component": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Component",
                                    "description": "Used to define the parts of a composite search parameter."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "url",
                    "name",
                    "status",
                    "description",
                    "code",
                    "base",
                    "type"
                ]
            },
            "ServiceRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller."
                                }
                            },
                            "instantiatesCanonical": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest."
                                }
                            },
                            "instantiatesUri": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Plan/proposal/order fulfilled by this request."
                                }
                            },
                            "replaces": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The request takes the place of the referenced completed or terminated request(s)."
                                }
                            },
                            "requisition": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "on-hold",
                                    "revoked",
                                    "completed",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "The status of the order."
                            },
                            "intent": {
                                "type": "string",
                                "enum": [
                                    "proposal",
                                    "plan",
                                    "directive",
                                    "order",
                                    "original-order",
                                    "reflex-order",
                                    "filler-order",
                                    "instance-order",
                                    "option"
                                ],
                                "description": "Whether the request is a proposal, plan, an original order or a reflex order."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A code that classifies the service for searching, sorting and display purposes (e.g. \"Surgical Procedure\")."
                                }
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "routine",
                                    "urgent",
                                    "asap",
                                    "stat"
                                ],
                                "description": "Indicates how quickly the ServiceRequest should be addressed with respect to other requests."
                            },
                            "doNotPerform": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Set this to true if the record is saying that the service/procedure should NOT be performed."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code that identifies a particular service (i.e., procedure, diagnostic investigation, or panel of investigations) that have been requested."
                            },
                            "orderDetail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Additional details and instructions about the how the services are to be delivered.   For example, and order for a urinary catheter may have an order detail for an external or indwelling catheter, or an order for a bandage may require additional instructions specifying how the bandage should be applied."
                                }
                            },
                            "quantityQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction)."
                            },
                            "quantityRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction)."
                            },
                            "quantityRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction)."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "On whom or what the service is to be performed. This is usually a human patient, but can also be requested on animals, groups of humans or animals, devices such as dialysis machines, or even locations (typically for environmental scans)."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "An encounter that provides additional information about the healthcare context in which this request is made."
                            },
                            "occurrenceDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date/time at which the requested service should occur."
                            },
                            "occurrencePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date/time at which the requested service should occur."
                            },
                            "occurrenceTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The date/time at which the requested service should occur."
                            },
                            "asNeededBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \"pain\", \"on flare-up\", etc."
                            },
                            "asNeededCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \"pain\", \"on flare-up\", etc."
                            },
                            "authoredOn": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When the request transitioned to being actionable."
                            },
                            "requester": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual who initiated the request and has responsibility for its activation."
                            },
                            "performerType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Desired type of performer for doing the requested service."
                            },
                            "performer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The desired performer for doing the requested service.  For example, the surgeon, dermatopathologist, endoscopist, etc."
                                }
                            },
                            "locationCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The preferred location(s) where the procedure should actually happen in coded or free text form. E.g. at home or nursing day care center."
                                }
                            },
                            "locationReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A reference to the the preferred location(s) where the procedure should actually happen. E.g. at home or nursing day care center."
                                }
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "An explanation or justification for why this service is being requested in coded or textual form.   This is often for billing purposes.  May relate to the resources referred to in `supportingInfo`."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Indicates another resource that provides a justification for why this service is being requested.   May relate to the resources referred to in `supportingInfo`."
                                }
                            },
                            "insurance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service."
                                }
                            },
                            "supportingInfo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Additional clinical information about the patient or specimen that may influence the services or their interpretations.     This information includes diagnosis, clinical findings and other observations.  In laboratory ordering these are typically referred to as \"ask at order entry questions (AOEs)\".  This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example,  reporting the amount of inspired oxygen for blood gas measurements."
                                }
                            },
                            "specimen": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "One or more specimens that the laboratory procedure will use."
                                }
                            },
                            "bodySite": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Anatomic location where the procedure should be performed. This is the target site."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Any other notes and comments made about the service request. For example, internal billing notes."
                                }
                            },
                            "patientInstruction": {
                                "$ref": "#/components/schemas/String",
                                "description": "Instructions in terms that are understood by the patient or consumer."
                            },
                            "relevantHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Key events in the history of the request."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "intent",
                    "subject"
                ]
            },
            "Slot": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "External Ids for this item."
                                }
                            },
                            "serviceCategory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A broad categorization of the service that is to be performed during this appointment."
                                }
                            },
                            "serviceType": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The type of appointments that can be booked into this slot (ideally this would be an identifiable service - which is at a location, rather than the location itself). If provided then this overrides the value provided on the availability resource."
                                }
                            },
                            "specialty": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment."
                                }
                            },
                            "appointmentType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The style of appointment or patient that may be booked in the slot (not service type)."
                            },
                            "schedule": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The schedule resource that this slot defines an interval of status information."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "busy",
                                    "free",
                                    "busy-unavailable",
                                    "busy-tentative",
                                    "entered-in-error"
                                ],
                                "description": "busy | free | busy-unavailable | busy-tentative | entered-in-error."
                            },
                            "start": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "Date/Time that the slot is to begin."
                            },
                            "end": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "Date/Time that the slot is to conclude."
                            },
                            "overbooked": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "This slot has already been overbooked, appointments are unlikely to be accepted for this time."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Comments on the slot to describe any extended information. Such as custom constraints on the slot."
                            }
                        }
                    }
                ],
                "required": [
                    "schedule",
                    "status",
                    "start",
                    "end"
                ]
            },
            "Specimen": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Id for specimen."
                                }
                            },
                            "accessionIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "The identifier assigned by the lab when accessioning specimen(s). This is not necessarily the same as the specimen identifier, depending on local lab procedures."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "available",
                                    "unavailable",
                                    "unsatisfactory",
                                    "entered-in-error"
                                ],
                                "description": "The availability of the specimen."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The kind of material that forms the specimen."
                            },
                            "subject": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Where the specimen came from. This may be from patient(s), from a location (e.g., the source of an environmental sample), or a sampling of a substance or a device."
                            },
                            "receivedTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Time when specimen was received for processing or testing."
                            },
                            "parent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Reference to the parent (source) specimen which is used when the specimen was either derived from or a component of another specimen."
                                }
                            },
                            "request": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Details concerning a service request that required a specimen to be collected."
                                }
                            },
                            "collection": {
                                "$ref": "#/components/schemas/Collection",
                                "description": "Details concerning the specimen collection."
                            },
                            "processing": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Processing",
                                    "description": "Details concerning processing and processing steps for the specimen."
                                }
                            },
                            "container": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Container",
                                    "description": "The container holding the specimen.  The recursive nature of containers; i.e. blood in tube in tray in rack is not addressed here."
                                }
                            },
                            "condition": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A mode or state of being that describes the nature of the specimen."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "To communicate any details or issues about the specimen or during the specimen collection. (for example: broken vial, sent with patient, frozen)."
                                }
                            }
                        }
                    }
                ]
            },
            "SpecimenDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A business identifier associated with the kind of specimen."
                            },
                            "typeCollected": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The kind of material to be collected."
                            },
                            "patientPreparation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Preparation of the patient for specimen collection."
                                }
                            },
                            "timeAspect": {
                                "$ref": "#/components/schemas/String",
                                "description": "Time aspect of specimen collection (duration or offset)."
                            },
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The action to be performed for collecting the specimen."
                                }
                            },
                            "typeTested": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TypeTested",
                                    "description": "Specimen conditioned in a container as expected by the testing laboratory."
                                }
                            }
                        }
                    }
                ]
            },
            "StructureDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this structure definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this structure definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the structure definition is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this structure definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the structure definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the structure definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the structure definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the structure definition."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this structure definition. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this structure definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the structure definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the structure definition changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the structure definition."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the structure definition from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure definition instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the structure definition is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this structure definition is needed and why it has been designed as it has."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the structure definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure definition."
                            },
                            "keyword": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "A set of key words or terms from external terminologies that may be used to assist with indexing and searching of templates nby describing the use of this structure definition, or the content it describes."
                                }
                            },
                            "fhirVersion": {
                                "type": "string",
                                "enum": [
                                    "0.01",
                                    "0.05",
                                    "0.06",
                                    "0.11",
                                    "0.0.80",
                                    "0.0.81",
                                    "0.0.82",
                                    "0.4.0",
                                    "0.5.0",
                                    "1.0.0",
                                    "1.0.1",
                                    "1.0.2",
                                    "1.1.0",
                                    "1.4.0",
                                    "1.6.0",
                                    "1.8.0",
                                    "3.0.0",
                                    "3.0.1",
                                    "3.3.0",
                                    "3.5.0",
                                    "4.0.0"
                                ],
                                "description": "The version of the FHIR specification on which this StructureDefinition is based - this is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.0.0. for this version."
                            },
                            "mapping": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Mapping",
                                    "description": "An external specification that the content is mapped to."
                                }
                            },
                            "kind": {
                                "type": "string",
                                "enum": [
                                    "primitive-type",
                                    "complex-type",
                                    "resource",
                                    "logical"
                                ],
                                "description": "Defines the kind of structure that this definition is describing."
                            },
                            "abstract": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether structure this definition describes is abstract or not  - that is, whether the structure is not intended to be instantiated. For Resources and Data types, abstract types will never be exchanged  between systems."
                            },
                            "context": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Context",
                                    "description": "Identifies the types of resource or data type elements to which the extension can be applied."
                                }
                            },
                            "contextInvariant": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "A set of rules as FHIRPath Invariants about when the extension can be used (e.g. co-occurrence variants for the extension). All the rules must be true."
                                }
                            },
                            "type": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Defines how to interpret the expression that defines what the context of the extension is."
                            },
                            "baseDefinition": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "An absolute URI that is the base structure from which this type is derived, either by specialization or constraint."
                            },
                            "derivation": {
                                "type": "string",
                                "enum": [
                                    "specialization",
                                    "constraint"
                                ],
                                "description": "How the type relates to the baseDefinition."
                            },
                            "snapshot": {
                                "$ref": "#/components/schemas/Snapshot",
                                "description": "A snapshot view is expressed in a standalone form that can be used and interpreted without considering the base StructureDefinition."
                            },
                            "differential": {
                                "$ref": "#/components/schemas/Differential",
                                "description": "A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies."
                            }
                        }
                    }
                ],
                "required": [
                    "url",
                    "name",
                    "status",
                    "kind",
                    "abstract",
                    "type"
                ]
            },
            "StructureMap": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this structure map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this structure map is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the structure map is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this structure map when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the structure map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the structure map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the structure map. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the structure map."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this structure map. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this structure map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the structure map was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the structure map changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the structure map."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the structure map from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure map instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the structure map is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this structure map is needed and why it has been designed as it has."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the structure map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure map."
                            },
                            "structure": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Structure",
                                    "description": "A structure definition used by this map. The structure definition may describe instances that are converted, or the instances that are produced."
                                }
                            },
                            "import": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "Other maps used by this map (canonical URLs)."
                                }
                            },
                            "group": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Group",
                                    "description": "Organizes the mapping into manageable chunks for human review/ease of maintenance."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "url",
                    "name",
                    "status",
                    "group"
                ]
            },
            "Subscription": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": [
                                    "requested",
                                    "active",
                                    "error",
                                    "off"
                                ],
                                "description": "The status of the subscription, which marks the server state for managing the subscription."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting."
                                }
                            },
                            "end": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The time for the server to turn the subscription off."
                            },
                            "reason": {
                                "$ref": "#/components/schemas/String",
                                "description": "A description of why this subscription is defined."
                            },
                            "criteria": {
                                "$ref": "#/components/schemas/String",
                                "description": "The rules that the server should use to determine when to generate notifications for this subscription."
                            },
                            "error": {
                                "$ref": "#/components/schemas/String",
                                "description": "A record of the last error that occurred when the server processed a notification."
                            },
                            "channel": {
                                "$ref": "#/components/schemas/Channel",
                                "description": "Details where to send notifications when resources are received that meet the criteria."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "reason",
                    "criteria",
                    "channel"
                ]
            },
            "Substance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The ingredient substance."
                            },
                            "strength": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Strength",
                                    "description": "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "SubstanceNucleicAcid": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequenceType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of the sequence shall be specified based on a controlled vocabulary."
                            },
                            "numberOfSubunits": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The number of linear sequences of nucleotides linked through phosphodiester bonds shall be described. Subunits would be strands of nucleic acids that are tightly associated typically through Watson-Crick base pairing. NOTE: If not specified in the reference source, the assumption is that there is 1 subunit."
                            },
                            "areaOfHybridisation": {
                                "$ref": "#/components/schemas/String",
                                "description": "The area of hybridisation shall be described if applicable for double stranded RNA or DNA. The number associated with the subunit followed by the number associated to the residue shall be specified in increasing order. The underscore “” shall be used as separator as follows: “Subunitnumber Residue”."
                            },
                            "oligoNucleotideType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "(TBC)."
                            },
                            "subunit": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Subunit",
                                    "description": "Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times."
                                }
                            }
                        }
                    }
                ]
            },
            "SubstancePolymer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "class": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "geometry": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "copolymerConnectivity": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Todo."
                                }
                            },
                            "modification": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Todo."
                                }
                            },
                            "monomerSet": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MonomerSet",
                                    "description": "Todo."
                                }
                            },
                            "repeat": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Repeat",
                                    "description": "Todo."
                                }
                            }
                        }
                    }
                ]
            },
            "SubstanceProtein": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequenceType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The SubstanceProtein descriptive elements will only be used when a complete or partial amino acid sequence is available or derivable from a nucleic acid sequence."
                            },
                            "numberOfSubunits": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Number of linear sequences of amino acids linked through peptide bonds. The number of subunits constituting the SubstanceProtein shall be described. It is possible that the number of subunits can be variable."
                            },
                            "disulfideLinkage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "The disulphide bond between two cysteine residues either on the same subunit or on two different subunits shall be described. The position of the disulfide bonds in the SubstanceProtein shall be listed in increasing order of subunit number and position within subunit followed by the abbreviation of the amino acids involved. The disulfide linkage positions shall actually contain the amino acid Cysteine at the respective positions."
                                }
                            },
                            "subunit": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Subunit",
                                    "description": "This subclause refers to the description of each subunit constituting the SubstanceProtein. A subunit is a linear sequence of amino acids linked through peptide bonds. The Subunit information shall be provided when the finished SubstanceProtein is a complex of multiple sequences; subunits are not used to delineate domains within a single sequence. Subunits are listed in order of decreasing length; sequences of the same length will be ordered by decreasing molecular weight; subunits that have identical sequences will be repeated multiple times."
                                }
                            }
                        }
                    }
                ]
            },
            "SubstanceReferenceInformation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Todo."
                            },
                            "gene": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Gene",
                                    "description": "Todo."
                                }
                            },
                            "geneElement": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GeneElement",
                                    "description": "Todo."
                                }
                            },
                            "classification": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Classification",
                                    "description": "Todo."
                                }
                            },
                            "target": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Target",
                                    "description": "Todo."
                                }
                            }
                        }
                    }
                ]
            },
            "SubstanceSourceMaterial": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sourceMaterialClass": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "General high level classification of the source material specific to the origin of the material."
                            },
                            "sourceMaterialType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of the source material shall be specified based on a controlled vocabulary. For vaccines, this subclause refers to the class of infectious agent."
                            },
                            "sourceMaterialState": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The state of the source material when extracted."
                            },
                            "organismId": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "The unique identifier associated with the source material parent organism shall be specified."
                            },
                            "organismName": {
                                "$ref": "#/components/schemas/String",
                                "description": "The organism accepted Scientific name shall be provided based on the organism taxonomy."
                            },
                            "parentSubstanceId": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "The parent of the herbal drug Ginkgo biloba, Leaf is the substance ID of the substance (fresh) of Ginkgo biloba L. or Ginkgo biloba L. (Whole plant)."
                                }
                            },
                            "parentSubstanceName": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "The parent substance of the Herbal Drug, or Herbal preparation."
                                }
                            },
                            "countryOfOrigin": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The country where the plant material is harvested or the countries where the plasma is sourced from as laid down in accordance with the Plasma Master File. For “Plasma-derived substances” the attribute country of origin provides information about the countries used for the manufacturing of the Cryopoor plama or Crioprecipitate."
                                }
                            },
                            "geographicalLocation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "The place/region where the plant is harvested or the places/regions where the animal source material has its habitat."
                                }
                            },
                            "developmentStage": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Stage of life for animals, plants, insects and microorganisms. This information shall be provided only when the substance is significantly different in these stages (e.g. foetal bovine serum)."
                            },
                            "fractionDescription": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FractionDescription",
                                    "description": "Many complex materials are fractions of parts of plants, animals, or minerals. Fraction elements are often necessary to define both Substances and Specified Group 1 Substances. For substances derived from Plants, fraction information will be captured at the Substance information level ( . Oils, Juices and Exudates). Additional information for Extracts, such as extraction solvent composition, will be captured at the Specified Substance Group 1 information level. For plasma-derived products fraction information will be captured at the Substance and the Specified Substance Group 1 levels."
                                }
                            },
                            "organism": {
                                "$ref": "#/components/schemas/Organism",
                                "description": "This subclause describes the organism which the substance is derived from. For vaccines, the parent organism shall be specified based on these subclause elements. As an example, full taxonomy will be described for the Substance Name: ., Leaf."
                            },
                            "partDescription": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PartDescription",
                                    "description": "To do."
                                }
                            }
                        }
                    }
                ]
            },
            "SubstanceSpecification": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Identifier by which this substance is known."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "High level categorization, e.g. polymer or nucleic acid."
                            },
                            "status": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Status of substance within the catalogue e.g. approved."
                            },
                            "domain": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "If the substance applies to only human or veterinary use."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Textual description of the substance."
                            },
                            "source": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Supporting literature."
                                }
                            },
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Textual comment about this record of a substance."
                            },
                            "moiety": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Moiety",
                                    "description": "Moiety, for structural modifications."
                                }
                            },
                            "property": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Property",
                                    "description": "General specifications for this substance, including how it is related to other substances."
                                }
                            },
                            "referenceInformation": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "General information detailing this substance."
                            },
                            "structure": {
                                "$ref": "#/components/schemas/Structure",
                                "description": "Structural information."
                            },
                            "code": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Code",
                                    "description": "Property type e.g. viscosity, pH, isoelectric point."
                                }
                            },
                            "name": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Name",
                                    "description": "Textual name for this moiety substance."
                                }
                            },
                            "molecularWeight": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MolecularWeight",
                                    "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids)."
                                }
                            },
                            "relationship": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Relationship",
                                    "description": "A link between this substance and another, with details of the relationship."
                                }
                            },
                            "nucleicAcid": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Data items specific to nucleic acids."
                            },
                            "polymer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Data items specific to polymers."
                            },
                            "protein": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Data items specific to proteins."
                            },
                            "sourceMaterial": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Material or taxonomic/anatomical source for the substance."
                            }
                        }
                    }
                ]
            },
            "SupplyDelivery": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifier for the supply delivery event that is used to identify it across multiple disparate systems."
                                }
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A plan, proposal or order that is fulfilled in whole or in part by this event."
                                }
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A larger event of which this particular event is a component or step."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "in-progress",
                                    "completed",
                                    "abandoned",
                                    "entered-in-error"
                                ],
                                "description": "A code specifying the state of the dispense event."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A link to a resource representing the person whom the delivered item is for."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the type of dispensing event that is performed. Examples include: Trial Fill, Completion of Trial, Partial Fill, Emergency Fill, Samples, etc."
                            },
                            "suppliedItem": {
                                "$ref": "#/components/schemas/SuppliedItem",
                                "description": "The item that is being delivered or has been supplied."
                            },
                            "occurrenceDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date or time(s) the activity occurred."
                            },
                            "occurrencePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date or time(s) the activity occurred."
                            },
                            "occurrenceTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The date or time(s) the activity occurred."
                            },
                            "supplier": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual responsible for dispensing the medication, supplier or device."
                            },
                            "destination": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identification of the facility/location where the Supply was shipped to, as part of the dispense event."
                            },
                            "receiver": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies the person who picked up the Supply."
                                }
                            }
                        }
                    }
                ]
            },
            "SupplyRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifiers assigned to this SupplyRequest by the author and/or other systems. These identifiers remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "suspended",
                                    "cancelled",
                                    "completed",
                                    "entered-in-error",
                                    "unknown"
                                ],
                                "description": "Status of the supply request."
                            },
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Category of supply, e.g.  central, non-stock, etc. This is used to support work flows associated with the supply process."
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "routine",
                                    "urgent",
                                    "asap",
                                    "stat"
                                ],
                                "description": "Indicates how quickly this SupplyRequest should be addressed with respect to other requests."
                            },
                            "itemCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The item that is requested to be supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list."
                            },
                            "itemReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The item that is requested to be supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The amount that is being ordered of the indicated item."
                            },
                            "parameter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Parameter",
                                    "description": "Specific parameters for the ordered item.  For example, the size of the indicated item."
                                }
                            },
                            "occurrenceDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When the request should be fulfilled."
                            },
                            "occurrencePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "When the request should be fulfilled."
                            },
                            "occurrenceTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "When the request should be fulfilled."
                            },
                            "authoredOn": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When the request was made."
                            },
                            "requester": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The device, practitioner, etc. who initiated the request."
                            },
                            "supplier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Who is intended to fulfill the request."
                                }
                            },
                            "reasonCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The reason why the supply item was requested."
                                }
                            },
                            "reasonReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The reason why the supply item was requested."
                                }
                            },
                            "deliverFrom": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Where the supply is expected to come from."
                            },
                            "deliverTo": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Where the supply is destined to go."
                            }
                        }
                    }
                ],
                "required": [
                    "quantity"
                ]
            },
            "Task": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "The business identifier for this task."
                                }
                            },
                            "instantiatesCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The URL pointing to a *FHIR*-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task."
                            },
                            "instantiatesUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The URL pointing to an *externally* maintained  protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task."
                            },
                            "basedOn": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a \"request\" resource such as a ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc. which is distinct from the \"request\" resource the task is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (= BasedOn), a task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient."
                                }
                            },
                            "groupIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "An identifier that links together multiple tasks and other requests that were created in the same context."
                            },
                            "partOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Task that this particular task is part of."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "requested",
                                    "received",
                                    "accepted",
                                    "rejected",
                                    "ready",
                                    "cancelled",
                                    "in-progress",
                                    "on-hold",
                                    "failed",
                                    "completed",
                                    "entered-in-error"
                                ],
                                "description": "The current status of the task."
                            },
                            "statusReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "An explanation as to why this task is held, failed, was refused, etc."
                            },
                            "businessStatus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Contains business-specific nuances of the business state."
                            },
                            "intent": {
                                "type": "string",
                                "enum": [
                                    "unknown",
                                    "proposal",
                                    "plan",
                                    "order",
                                    "original-order",
                                    "reflex-order",
                                    "filler-order",
                                    "instance-order",
                                    "option"
                                ],
                                "description": "Indicates the \"level\" of actionability associated with the Task, i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc."
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "routine",
                                    "urgent",
                                    "asap",
                                    "stat"
                                ],
                                "description": "Indicates how quickly the Task should be addressed with respect to other requests."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A name or code (or both) briefly describing what the task involves."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A free-text description of what is to be performed."
                            },
                            "focus": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The request being actioned or the resource being manipulated by this task."
                            },
                            "for": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The entity who benefits from the performance of the service specified in the task (e.g., the patient)."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created."
                            },
                            "executionPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Identifies the time action was first taken against the task (start) and/or the time final action was taken against the task prior to marking it as completed (end)."
                            },
                            "authoredOn": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date and time this task was created."
                            },
                            "lastModified": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date and time of last modification to this task."
                            },
                            "requester": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The creator of the task."
                            },
                            "performerType": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The kind of participant that should perform the task."
                                }
                            },
                            "owner": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Individual organization or Device currently responsible for task execution."
                            },
                            "location": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Principal physical location where the this task is performed."
                            },
                            "reasonCode": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A description or code indicating why this task needs to be performed."
                            },
                            "reasonReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A resource reference indicating why this task needs to be performed."
                            },
                            "insurance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Free-text information captured about the task as it progresses."
                                }
                            },
                            "relevantHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task."
                                }
                            },
                            "restriction": {
                                "$ref": "#/components/schemas/Restriction",
                                "description": "If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned."
                            },
                            "input": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Input",
                                    "description": "Additional information that may be needed in the execution of the task."
                                }
                            },
                            "output": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Output",
                                    "description": "Outputs produced by the Task."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "intent"
                ]
            },
            "TerminologyCapabilities": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this terminology capabilities when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this terminology capabilities is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the terminology capabilities is stored on different servers."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the terminology capabilities when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the terminology capabilities author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the terminology capabilities. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the terminology capabilities."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this terminology capabilities. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this terminology capabilities is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the terminology capabilities was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the terminology capabilities changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the terminology capabilities."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the terminology capabilities from a consumer's perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate terminology capabilities instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the terminology capabilities is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this terminology capabilities is needed and why it has been designed as it has."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the terminology capabilities and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the terminology capabilities."
                            },
                            "kind": {
                                "type": "string",
                                "enum": [
                                    "instance",
                                    "capability",
                                    "requirements"
                                ],
                                "description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase)."
                            },
                            "software": {
                                "$ref": "#/components/schemas/Software",
                                "description": "Software that is covered by this terminology capability statement.  It is used when the statement describes the capabilities of a particular software version, independent of an installation."
                            },
                            "implementation": {
                                "$ref": "#/components/schemas/Implementation",
                                "description": "Identifies a specific implementation instance that is described by the terminology capability statement - i.e. a particular installation, rather than the capabilities of a software program."
                            },
                            "lockedDate": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether the server supports lockedDate."
                            },
                            "codeSystem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeSystem",
                                    "description": "Identifies a code system that is supported by the server. If there is a no code system URL, then this declares the general assumptions a client can make about support for any CodeSystem resource."
                                }
                            },
                            "expansion": {
                                "$ref": "#/components/schemas/Expansion",
                                "description": "Information about the [ValueSet/$expand](valueset-operation-expand.html) operation."
                            },
                            "codeSearch": {
                                "type": "string",
                                "enum": [
                                    "explicit",
                                    "all"
                                ],
                                "description": "The degree to which the server supports the code search parameter on ValueSet, if it is supported."
                            },
                            "validateCode": {
                                "$ref": "#/components/schemas/ValidateCode",
                                "description": "Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation."
                            },
                            "translation": {
                                "$ref": "#/components/schemas/Translation",
                                "description": "Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation."
                            },
                            "closure": {
                                "$ref": "#/components/schemas/Closure",
                                "description": "Whether the $closure operation is supported."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "date",
                    "kind"
                ]
            },
            "TestReport": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Identifier for the TestScript assigned for external purposes outside the context of FHIR."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A free text natural language name identifying the executed TestScript."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "completed",
                                    "in-progress",
                                    "waiting",
                                    "stopped",
                                    "entered-in-error"
                                ],
                                "description": "The current state of this test report."
                            },
                            "testScript": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Ideally this is an absolute URL that is used to identify the version-specific TestScript that was executed, matching the `TestScript.url`."
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "pass",
                                    "fail",
                                    "pending"
                                ],
                                "description": "The overall result from the execution of the TestScript."
                            },
                            "score": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The final score (percentage of tests passed) resulting from the execution of the TestScript."
                            },
                            "tester": {
                                "$ref": "#/components/schemas/String",
                                "description": "Name of the tester producing this report (Organization or individual)."
                            },
                            "issued": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When the TestScript was executed and this TestReport was generated."
                            },
                            "participant": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Participant",
                                    "description": "A participant in the test execution, either the execution engine, a client, or a server."
                                }
                            },
                            "setup": {
                                "$ref": "#/components/schemas/Setup",
                                "description": "The results of the series of required setup operations before the tests were executed."
                            },
                            "test": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Test",
                                    "description": "A test executed from the test script."
                                }
                            },
                            "teardown": {
                                "$ref": "#/components/schemas/Teardown",
                                "description": "The results of the series of operations required to clean up after all the tests were executed (successfully or otherwise)."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "testScript",
                    "result"
                ]
            },
            "TestScript": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this test script when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this test script is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the test script is stored on different servers."
                            },
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A formal identifier that is used to identify this test script when it is represented in other formats, or referenced in a specification, model, design or an instance."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the test script when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the test script author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the test script. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the test script."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this test script. Enables tracking the life-cycle of the content."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this test script is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date  (and optionally time) when the test script was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the test script changes."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the test script."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the test script from a consumer's perspective."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate test script instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the test script is intended to be used."
                                }
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this test script is needed and why it has been designed as it has."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the test script and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the test script."
                            },
                            "origin": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Origin",
                                    "description": "An abstract server used in operations within this test script in the origin element."
                                }
                            },
                            "destination": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Destination",
                                    "description": "An abstract server used in operations within this test script in the destination element."
                                }
                            },
                            "metadata": {
                                "$ref": "#/components/schemas/Metadata",
                                "description": "The required capability must exist and are assumed to function correctly on the FHIR server being tested."
                            },
                            "fixture": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Fixture",
                                    "description": "Fixture in the test script - by reference (uri). All fixtures are required for the test script to execute."
                                }
                            },
                            "profile": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The type of origin profile the test system supports."
                                }
                            },
                            "variable": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Variable",
                                    "description": "Variable is set based either on element value in response body or on header field value in the response headers."
                                }
                            },
                            "setup": {
                                "$ref": "#/components/schemas/Setup",
                                "description": "A series of required setup operations before tests are executed."
                            },
                            "test": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Test",
                                    "description": "A test in this script."
                                }
                            },
                            "teardown": {
                                "$ref": "#/components/schemas/Teardown",
                                "description": "A series of operations required to clean up after all the tests are executed (successfully or otherwise)."
                            }
                        }
                    }
                ],
                "required": [
                    "url",
                    "name",
                    "status"
                ]
            },
            "ValueSet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that is used to identify this value set when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this value set is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the value set is stored on different servers."
                            },
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance."
                                }
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is used to identify this version of the value set when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the value set author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A natural language name identifying the value set. This name should be usable as an identifier for the module by machine processing applications such as code generation."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short, descriptive, user-friendly title for the value set."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "active",
                                    "retired",
                                    "unknown"
                                ],
                                "description": "The status of this value set. Enables tracking the life-cycle of the content. The status of the value set applies to the value set definition (ValueSet.compose) and the associated ValueSet metadata. Expansions do not have a state."
                            },
                            "experimental": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A Boolean value to indicate that this value set is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date (and optionally time) when the value set was created or revised (e.g. the 'content logical definition')."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the organization or individual that published the value set."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the publisher."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A free text natural language description of the value set from a consumer's perspective. The textual description specifies the span of meanings for concepts to be included within the Value Set Expansion, and also may specify the intended use and limitations of the Value Set."
                            },
                            "useContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate value set instances."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A legal or geographic region in which the value set is intended to be used."
                                }
                            },
                            "immutable": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If this is set to 'true', then no new versions of the content logical definition can be created.  Note: Other metadata might still change."
                            },
                            "purpose": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanation of why this value set is needed and why it has been designed as it has."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to the value set and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the value set."
                            },
                            "compose": {
                                "$ref": "#/components/schemas/Compose",
                                "description": "A set of criteria that define the contents of the value set by including or excluding codes selected from the specified code system(s) that the value set draws from. This is also known as the Content Logical Definition (CLD)."
                            },
                            "expansion": {
                                "$ref": "#/components/schemas/Expansion",
                                "description": "A value set can also be \"expanded\", where the value set is turned into a simple collection of enumerated codes. This element holds the expansion, if it has been performed."
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "VerificationResult": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "target": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A resource that was validated."
                                }
                            },
                            "targetLocation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "The fhirpath location(s) within the resource that was validated."
                                }
                            },
                            "need": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The frequency with which the target must be validated (none; initial; periodic)."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "attested",
                                    "validated",
                                    "in-process",
                                    "req-revalid",
                                    "val-fail",
                                    "reval-fail"
                                ],
                                "description": "The validation status of the target (attested; validated; in process; requires revalidation; validation failed; revalidation failed)."
                            },
                            "statusDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When the validation status was updated."
                            },
                            "validationType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "What the target is validated against (nothing; primary source; multiple sources)."
                            },
                            "validationProcess": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context)."
                                }
                            },
                            "frequency": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "Frequency of revalidation."
                            },
                            "lastPerformed": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date/time validation was last completed (including failed validations)."
                            },
                            "nextScheduled": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date when target is next validated, if appropriate."
                            },
                            "failureAction": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The result if validation fails (fatal; warning; record only; none)."
                            },
                            "primarySource": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PrimarySource",
                                    "description": "Information about the primary source(s) involved in validation."
                                }
                            },
                            "attestation": {
                                "$ref": "#/components/schemas/Attestation",
                                "description": "Information about the entity attesting to information."
                            },
                            "validator": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Validator",
                                    "description": "Information about the entity validating information."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status"
                ]
            },
            "VisionPrescription": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this vision prescription."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "created": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date this resource was created."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A resource reference to the person to whom the vision prescription applies."
                            },
                            "encounter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a resource that identifies the particular occurrence of contact between patient and health care provider during which the prescription was issued."
                            },
                            "dateWritten": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date (and perhaps time) when the prescription was written."
                            },
                            "prescriber": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The healthcare professional responsible for authorizing the prescription."
                            },
                            "lensSpecification": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LensSpecification",
                                    "description": "Contain the details of  the individual lens specifications and serves as the authorization for the fullfillment by certified professionals."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "created",
                    "patient",
                    "dateWritten",
                    "prescriber",
                    "lensSpecification"
                ]
            },
            "HumanName": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "use": {
                                "type": "string",
                                "enum": [
                                    "usual",
                                    "official",
                                    "temp",
                                    "nickname",
                                    "anonymous",
                                    "old",
                                    "maiden"
                                ],
                                "description": "Identifies the purpose for this name."
                            },
                            "text": {
                                "$ref": "#/components/schemas/String",
                                "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
                            },
                            "family": {
                                "$ref": "#/components/schemas/String",
                                "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
                            },
                            "given": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Given name."
                                }
                            },
                            "prefix": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name."
                                }
                            },
                            "suffix": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name."
                                }
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Indicates the period of time when this name was valid for the named person."
                            }
                        }
                    }
                ]
            },
            "Meta": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "versionId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                            },
                            "lastUpdated": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "When the resource last changed - e.g. when the version changed."
                            },
                            "source": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                            },
                            "profile": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition-definitions.html#StructureDefinition.url)."
                                }
                            },
                            "security": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure."
                                }
                            },
                            "tag": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource."
                                }
                            }
                        }
                    }
                ]
            },
            "TriggerDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "named-event",
                                    "periodic",
                                    "data-changed",
                                    "data-added",
                                    "data-modified",
                                    "data-removed",
                                    "data-accessed",
                                    "data-access-ended"
                                ],
                                "description": "The type of triggering event."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context."
                            },
                            "timingTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The timing of the event (if this is a periodic trigger)."
                            },
                            "timingReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The timing of the event (if this is a periodic trigger)."
                            },
                            "timingDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The timing of the event (if this is a periodic trigger)."
                            },
                            "timingDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The timing of the event (if this is a periodic trigger)."
                            },
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DataRequirement",
                                    "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true."
                                }
                            },
                            "condition": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "ElementDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "path": {
                                "$ref": "#/components/schemas/String",
                                "description": "The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension."
                            },
                            "representation": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "xmlAttr",
                                        "xmlText",
                                        "typeAttr",
                                        "cdaText",
                                        "xhtml"
                                    ],
                                    "description": "Codes that define how this element is represented in instances, when the deviation varies from the normal case."
                                }
                            },
                            "sliceName": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of this element definition slice, when slicing is working. The name must be a token with no dots or spaces. This is a unique name referring to a specific set of constraints applied to this element, used to provide a name to different slices of the same element."
                            },
                            "sliceIsConstraining": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If true, indicates that this slice definition is constraining a slice definition with the same name in an inherited profile. If false, the slice is not overriding any slice in an inherited profile. If missing, the slice might or might not be overriding a slice in an inherited profile, depending on the sliceName."
                            },
                            "label": {
                                "$ref": "#/components/schemas/String",
                                "description": "A single preferred label which is the text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form."
                            },
                            "code": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "A code that has the same meaning as the element in a particular terminology."
                                }
                            },
                            "slicing": {
                                "$ref": "#/components/schemas/Slicing",
                                "description": "Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set)."
                            },
                            "short": {
                                "$ref": "#/components/schemas/String",
                                "description": "A concise description of what this element means (e.g. for use in autogenerated summaries)."
                            },
                            "definition": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Provides a complete explanation of the meaning of the data element for human readability.  For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource. (Note: The text you are reading is specified in ElementDefinition.definition)."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc. (Note: The text you are reading is specified in ElementDefinition.comment)."
                            },
                            "requirements": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element."
                            },
                            "alias": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Identifies additional names by which this element might also be known."
                                }
                            },
                            "min": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The minimum number of times this element SHALL appear in the instance."
                            },
                            "max": {
                                "$ref": "#/components/schemas/String",
                                "description": "The maximum number of times this element is permitted to appear in the instance."
                            },
                            "base": {
                                "$ref": "#/components/schemas/Base",
                                "description": "Information about the base definition of the element, provided to make it unnecessary for tools to trace the deviation of the element through the derived and related profiles. When the element definition is not the original definition of an element - i.g. either in a constraint on another type, or for elements from a super type in a snap shot - then the information in provided in the element definition may be different to the base definition. On the original definition of the element, it will be same."
                            },
                            "contentReference": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Identifies an element defined elsewhere in the definition whose content rules should be applied to the current element. ContentReferences bring across all the rules that are in the ElementDefinition for the element, including definitions, cardinality constraints, bindings, invariants etc."
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Type",
                                    "description": "How the element value is interpreted when discrimination is evaluated."
                                }
                            },
                            "defaultValueBase64Binary": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueCode": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueMarkdown": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueOid": {
                                "$ref": "#/components/schemas/Oid",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValuePositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueUrl": {
                                "$ref": "#/components/schemas/Url",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueUuid": {
                                "$ref": "#/components/schemas/Uuid",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueAnnotation": {
                                "$ref": "#/components/schemas/Annotation",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueContactPoint": {
                                "$ref": "#/components/schemas/ContactPoint",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueCount": {
                                "$ref": "#/components/schemas/Count",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueDistance": {
                                "$ref": "#/components/schemas/Distance",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueHumanName": {
                                "$ref": "#/components/schemas/HumanName",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValuePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueSampledData": {
                                "$ref": "#/components/schemas/SampledData",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueContactDetail": {
                                "$ref": "#/components/schemas/ContactDetail",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueContributor": {
                                "$ref": "#/components/schemas/Contributor",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueDataRequirement": {
                                "$ref": "#/components/schemas/DataRequirement",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueExpression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueParameterDefinition": {
                                "$ref": "#/components/schemas/ParameterDefinition",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueRelatedArtifact": {
                                "$ref": "#/components/schemas/RelatedArtifact",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueTriggerDefinition": {
                                "$ref": "#/components/schemas/TriggerDefinition",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueUsageContext": {
                                "$ref": "#/components/schemas/UsageContext",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "defaultValueDosage": {
                                "$ref": "#/components/schemas/Dosage",
                                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
                            },
                            "meaningWhenMissing": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "The Implicit meaning that is to be understood when this element is missing (e.g. 'when this element is missing, the period is ongoing')."
                            },
                            "orderMeaning": {
                                "$ref": "#/components/schemas/String",
                                "description": "If present, indicates that the order of the repeating element has meaning and describes what that meaning is.  If absent, it means that the order of the element has no meaning."
                            },
                            "fixedBase64Binary": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedCode": {
                                "$ref": "#/components/schemas/Code",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedMarkdown": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedOid": {
                                "$ref": "#/components/schemas/Oid",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedPositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedUrl": {
                                "$ref": "#/components/schemas/Url",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedUuid": {
                                "$ref": "#/components/schemas/Uuid",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedAnnotation": {
                                "$ref": "#/components/schemas/Annotation",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedContactPoint": {
                                "$ref": "#/components/schemas/ContactPoint",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedCount": {
                                "$ref": "#/components/schemas/Count",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedDistance": {
                                "$ref": "#/components/schemas/Distance",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedHumanName": {
                                "$ref": "#/components/schemas/HumanName",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedSampledData": {
                                "$ref": "#/components/schemas/SampledData",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedContactDetail": {
                                "$ref": "#/components/schemas/ContactDetail",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedContributor": {
                                "$ref": "#/components/schemas/Contributor",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedDataRequirement": {
                                "$ref": "#/components/schemas/DataRequirement",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedExpression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedParameterDefinition": {
                                "$ref": "#/components/schemas/ParameterDefinition",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedRelatedArtifact": {
                                "$ref": "#/components/schemas/RelatedArtifact",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedTriggerDefinition": {
                                "$ref": "#/components/schemas/TriggerDefinition",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedUsageContext": {
                                "$ref": "#/components/schemas/UsageContext",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "fixedDosage": {
                                "$ref": "#/components/schemas/Dosage",
                                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
                            },
                            "patternBase64Binary": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternCode": {
                                "$ref": "#/components/schemas/Code",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternMarkdown": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternOid": {
                                "$ref": "#/components/schemas/Oid",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternPositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternUrl": {
                                "$ref": "#/components/schemas/Url",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternUuid": {
                                "$ref": "#/components/schemas/Uuid",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternAnnotation": {
                                "$ref": "#/components/schemas/Annotation",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternContactPoint": {
                                "$ref": "#/components/schemas/ContactPoint",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternCount": {
                                "$ref": "#/components/schemas/Count",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternDistance": {
                                "$ref": "#/components/schemas/Distance",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternHumanName": {
                                "$ref": "#/components/schemas/HumanName",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternSampledData": {
                                "$ref": "#/components/schemas/SampledData",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternContactDetail": {
                                "$ref": "#/components/schemas/ContactDetail",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternContributor": {
                                "$ref": "#/components/schemas/Contributor",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternDataRequirement": {
                                "$ref": "#/components/schemas/DataRequirement",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternExpression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternParameterDefinition": {
                                "$ref": "#/components/schemas/ParameterDefinition",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternRelatedArtifact": {
                                "$ref": "#/components/schemas/RelatedArtifact",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternTriggerDefinition": {
                                "$ref": "#/components/schemas/TriggerDefinition",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternUsageContext": {
                                "$ref": "#/components/schemas/UsageContext",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "patternDosage": {
                                "$ref": "#/components/schemas/Dosage",
                                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
                            },
                            "example": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Example",
                                    "description": "A sample value for this element demonstrating the type of information that would typically be found in the element."
                                }
                            },
                            "minValueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "minValueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "minValueInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "minValueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "minValueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "minValueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "minValuePositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "minValueUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "minValueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "maxValueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "maxValueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "maxValueInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "maxValueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "maxValueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "maxValueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "maxValuePositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "maxValueUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "maxValueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
                            },
                            "maxLength": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element."
                            },
                            "condition": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Id",
                                    "description": "A reference to an invariant that may make additional statements about the cardinality or value in the instance."
                                }
                            },
                            "constraint": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Constraint",
                                    "description": "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance."
                                }
                            },
                            "mustSupport": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If true, implementations that produce or consume resources SHALL provide \"support\" for the element in some meaningful way.  If false, the element may be ignored and not supported. If false, whether to populate or use the data element in any way is at the discretion of the implementation."
                            },
                            "isModifier": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system."
                            },
                            "isModifierReason": {
                                "$ref": "#/components/schemas/String",
                                "description": "Explains how that element affects the interpretation of the resource or element that contains it."
                            },
                            "isSummary": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether the element should be included if a client requests a search with the parameter _summary=true."
                            },
                            "binding": {
                                "$ref": "#/components/schemas/Binding",
                                "description": "Binds to a value set if this element is coded (code, Coding, CodeableConcept, Quantity), or the data types (string, uri)."
                            },
                            "mapping": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Mapping",
                                    "description": "Identifies a concept from an external specification that roughly corresponds to this element."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "path"
                ]
            },
            "Identifier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "use": {
                                "type": "string",
                                "enum": [
                                    "usual",
                                    "official",
                                    "temp",
                                    "secondary",
                                    "old"
                                ],
                                "description": "The purpose of this identifier."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                            },
                            "system": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                            },
                            "value": {
                                "$ref": "#/components/schemas/String",
                                "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Time period during which identifier is/was valid for use."
                            },
                            "assigner": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Organization that issued/manages the identifier."
                            }
                        }
                    }
                ]
            },
            "Element": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/Code",
                                "description": "Identity (code or path) or the element/item being mapped."
                            },
                            "display": {
                                "$ref": "#/components/schemas/String",
                                "description": "The display for the code. The display is only provided to help editors when editing the concept map."
                            },
                            "target": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Target",
                                    "description": "A concept from the target value set that this concept maps to."
                                }
                            }
                        }
                    }
                ]
            },
            "Signature": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document."
                                }
                            },
                            "when": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "When the digital signature was signed."
                            },
                            "who": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key)."
                            },
                            "onBehalfOf": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to an application-usable description of the identity that is represented by the signature."
                            },
                            "targetFormat": {
                                "$ref": "#/components/schemas/Code",
                                "description": "A mime type that indicates the technical format of the target resources signed by the signature."
                            },
                            "sigFormat": {
                                "$ref": "#/components/schemas/Code",
                                "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
                            },
                            "data": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "when",
                    "who"
                ]
            },
            "Dosage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of dosage (for example, prophylaxis, maintenance, therapeutic, etc.)."
                            },
                            "dosage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dosage",
                                    "description": "Dosage for the medication for the specific guidelines."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "dosage"
                ]
            },
            "Integer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Primitive value for integer"
                            }
                        }
                    }
                ]
            },
            "Extension": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "Source of the definition for the extension code - a logical name or a URL."
                            },
                            "valueBase64Binary": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueCode": {
                                "$ref": "#/components/schemas/Code",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueMarkdown": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueOid": {
                                "$ref": "#/components/schemas/Oid",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valuePositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueUrl": {
                                "$ref": "#/components/schemas/Url",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueUuid": {
                                "$ref": "#/components/schemas/Uuid",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueAnnotation": {
                                "$ref": "#/components/schemas/Annotation",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueContactPoint": {
                                "$ref": "#/components/schemas/ContactPoint",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueCount": {
                                "$ref": "#/components/schemas/Count",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDistance": {
                                "$ref": "#/components/schemas/Distance",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueHumanName": {
                                "$ref": "#/components/schemas/HumanName",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valuePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueSampledData": {
                                "$ref": "#/components/schemas/SampledData",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueContactDetail": {
                                "$ref": "#/components/schemas/ContactDetail",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueContributor": {
                                "$ref": "#/components/schemas/Contributor",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDataRequirement": {
                                "$ref": "#/components/schemas/DataRequirement",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueExpression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueParameterDefinition": {
                                "$ref": "#/components/schemas/ParameterDefinition",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueRelatedArtifact": {
                                "$ref": "#/components/schemas/RelatedArtifact",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueTriggerDefinition": {
                                "$ref": "#/components/schemas/TriggerDefinition",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueUsageContext": {
                                "$ref": "#/components/schemas/UsageContext",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDosage": {
                                "$ref": "#/components/schemas/Dosage",
                                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            }
                        }
                    }
                ],
                "required": [
                    "url"
                ]
            },
            "Duration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Ratio": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "numerator": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The value of the numerator."
                            },
                            "denominator": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The value of the denominator."
                            }
                        }
                    }
                ]
            },
            "ParameterDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts."
                            },
                            "use": {
                                "type": "string",
                                "enum": [
                                    "in",
                                    "out"
                                ],
                                "description": "Whether the parameter is input or output for the module."
                            },
                            "min": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The minimum number of times this parameter SHALL appear in the request or response."
                            },
                            "max": {
                                "$ref": "#/components/schemas/String",
                                "description": "The maximum number of times this element is permitted to appear in the request or response."
                            },
                            "documentation": {
                                "$ref": "#/components/schemas/String",
                                "description": "A brief discussion of what the parameter is for and how it is used by the module."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "Address",
                                    "Age",
                                    "Annotation",
                                    "Attachment",
                                    "BackboneElement",
                                    "CodeableConcept",
                                    "Coding",
                                    "ContactDetail",
                                    "ContactPoint",
                                    "Contributor",
                                    "Count",
                                    "DataRequirement",
                                    "Distance",
                                    "Dosage",
                                    "Duration",
                                    "Element",
                                    "ElementDefinition",
                                    "Expression",
                                    "Extension",
                                    "HumanName",
                                    "Identifier",
                                    "MarketingStatus",
                                    "Meta",
                                    "Money",
                                    "MoneyQuantity",
                                    "Narrative",
                                    "ParameterDefinition",
                                    "Period",
                                    "Population",
                                    "ProdCharacteristic",
                                    "ProductShelfLife",
                                    "Quantity",
                                    "Range",
                                    "Ratio",
                                    "Reference",
                                    "RelatedArtifact",
                                    "SampledData",
                                    "Signature",
                                    "SimpleQuantity",
                                    "SubstanceAmount",
                                    "Timing",
                                    "TriggerDefinition",
                                    "UsageContext",
                                    "base64Binary",
                                    "boolean",
                                    "canonical",
                                    "code",
                                    "date",
                                    "dateTime",
                                    "decimal",
                                    "id",
                                    "instant",
                                    "integer",
                                    "markdown",
                                    "oid",
                                    "positiveInt",
                                    "string",
                                    "time",
                                    "unsignedInt",
                                    "uri",
                                    "url",
                                    "uuid",
                                    "xhtml",
                                    "Account",
                                    "ActivityDefinition",
                                    "AdverseEvent",
                                    "AllergyIntolerance",
                                    "Appointment",
                                    "AppointmentResponse",
                                    "AuditEvent",
                                    "Basic",
                                    "Binary",
                                    "BiologicallyDerivedProduct",
                                    "BodyStructure",
                                    "Bundle",
                                    "CapabilityStatement",
                                    "CarePlan",
                                    "CareTeam",
                                    "CatalogEntry",
                                    "ChargeItem",
                                    "ChargeItemDefinition",
                                    "Claim",
                                    "ClaimResponse",
                                    "ClinicalImpression",
                                    "CodeSystem",
                                    "Communication",
                                    "CommunicationRequest",
                                    "CompartmentDefinition",
                                    "Composition",
                                    "ConceptMap",
                                    "Condition",
                                    "Consent",
                                    "Contract",
                                    "Coverage",
                                    "CoverageEligibilityRequest",
                                    "CoverageEligibilityResponse",
                                    "DetectedIssue",
                                    "Device",
                                    "DeviceDefinition",
                                    "DeviceMetric",
                                    "DeviceRequest",
                                    "DeviceUseStatement",
                                    "DiagnosticReport",
                                    "DocumentManifest",
                                    "DocumentReference",
                                    "DomainResource",
                                    "EffectEvidenceSynthesis",
                                    "Encounter",
                                    "Endpoint",
                                    "EnrollmentRequest",
                                    "EnrollmentResponse",
                                    "EpisodeOfCare",
                                    "EventDefinition",
                                    "Evidence",
                                    "EvidenceVariable",
                                    "ExampleScenario",
                                    "ExplanationOfBenefit",
                                    "FamilyMemberHistory",
                                    "Flag",
                                    "Goal",
                                    "GraphDefinition",
                                    "Group",
                                    "GuidanceResponse",
                                    "HealthcareService",
                                    "ImagingStudy",
                                    "Immunization",
                                    "ImmunizationEvaluation",
                                    "ImmunizationRecommendation",
                                    "ImplementationGuide",
                                    "InsurancePlan",
                                    "Invoice",
                                    "Library",
                                    "Linkage",
                                    "List",
                                    "Location",
                                    "Measure",
                                    "MeasureReport",
                                    "Media",
                                    "Medication",
                                    "MedicationAdministration",
                                    "MedicationDispense",
                                    "MedicationKnowledge",
                                    "MedicationRequest",
                                    "MedicationStatement",
                                    "MedicinalProduct",
                                    "MedicinalProductAuthorization",
                                    "MedicinalProductContraindication",
                                    "MedicinalProductIndication",
                                    "MedicinalProductIngredient",
                                    "MedicinalProductInteraction",
                                    "MedicinalProductManufactured",
                                    "MedicinalProductPackaged",
                                    "MedicinalProductPharmaceutical",
                                    "MedicinalProductUndesirableEffect",
                                    "MessageDefinition",
                                    "MessageHeader",
                                    "MolecularSequence",
                                    "NamingSystem",
                                    "NutritionOrder",
                                    "Observation",
                                    "ObservationDefinition",
                                    "OperationDefinition",
                                    "OperationOutcome",
                                    "Organization",
                                    "OrganizationAffiliation",
                                    "Parameters",
                                    "Patient",
                                    "PaymentNotice",
                                    "PaymentReconciliation",
                                    "Person",
                                    "PlanDefinition",
                                    "Practitioner",
                                    "PractitionerRole",
                                    "Procedure",
                                    "Provenance",
                                    "Questionnaire",
                                    "QuestionnaireResponse",
                                    "RelatedPerson",
                                    "RequestGroup",
                                    "ResearchDefinition",
                                    "ResearchElementDefinition",
                                    "ResearchStudy",
                                    "ResearchSubject",
                                    "Resource",
                                    "RiskAssessment",
                                    "RiskEvidenceSynthesis",
                                    "Schedule",
                                    "SearchParameter",
                                    "ServiceRequest",
                                    "Slot",
                                    "Specimen",
                                    "SpecimenDefinition",
                                    "StructureDefinition",
                                    "StructureMap",
                                    "Subscription",
                                    "Substance",
                                    "SubstanceNucleicAcid",
                                    "SubstancePolymer",
                                    "SubstanceProtein",
                                    "SubstanceReferenceInformation",
                                    "SubstanceSourceMaterial",
                                    "SubstanceSpecification",
                                    "SupplyDelivery",
                                    "SupplyRequest",
                                    "Task",
                                    "TerminologyCapabilities",
                                    "TestReport",
                                    "TestScript",
                                    "ValueSet",
                                    "VerificationResult",
                                    "VisionPrescription",
                                    "Type",
                                    "Any"
                                ],
                                "description": "The type of the parameter."
                            },
                            "profile": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to."
                            }
                        }
                    }
                ],
                "required": [
                    "use",
                    "type"
                ]
            },
            "Id": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/String"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Base64Binary": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                                "description": "Primitive value for base64Binary"
                            }
                        }
                    }
                ]
            },
            "Coding": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "system": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The identification of the code system that defines the meaning of the symbol in the code."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                                "$ref": "#/components/schemas/Code",
                                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                            },
                            "display": {
                                "$ref": "#/components/schemas/String",
                                "description": "A representation of the meaning of the code in the system, following the rules of the system."
                            },
                            "userSelected": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                            }
                        }
                    }
                ]
            },
            "Instant": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                                "description": "Primitive value for instant"
                            }
                        }
                    }
                ]
            },
            "CodeableConcept": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "coding": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "A reference to a code defined by a terminology system."
                                }
                            },
                            "text": {
                                "$ref": "#/components/schemas/String",
                                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                            }
                        }
                    }
                ]
            },
            "ContactPoint": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "system": {
                                "type": "string",
                                "enum": [
                                    "phone",
                                    "fax",
                                    "email",
                                    "pager",
                                    "url",
                                    "sms",
                                    "other"
                                ],
                                "description": "Telecommunications form for contact point - what communications system is required to make use of the contact."
                            },
                            "value": {
                                "$ref": "#/components/schemas/String",
                                "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                            },
                            "use": {
                                "type": "string",
                                "enum": [
                                    "home",
                                    "work",
                                    "temp",
                                    "old",
                                    "mobile"
                                ],
                                "description": "Identifies the purpose for the contact point."
                            },
                            "rank": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Time period when the contact point was/is in use."
                            }
                        }
                    }
                ]
            },
            "Age": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Uuid": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Uri"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Distance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "SimpleQuantity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Decimal": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "pattern": "-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?",
                                "description": "Primitive value for decimal"
                            }
                        }
                    }
                ]
            },
            "PositiveInt": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Integer"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Canonical": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Uri"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "MarketingStatus": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "country": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The country in which the marketing authorisation has been granted shall be specified It should be specified using the ISO 3166 ‑ 1 alpha-2 code elements."
                            },
                            "jurisdiction": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Where a Medicines Regulatory Agency has granted a marketing authorisation for which specific provisions within a jurisdiction apply, the jurisdiction can be specified using an appropriate controlled terminology The controlled term and the controlled term identifier shall be specified."
                            },
                            "status": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "This attribute provides information on the status of the marketing of the medicinal product See ISO/TS 20443 for more information and examples."
                            },
                            "dateRange": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain."
                            },
                            "restoreDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain."
                            }
                        }
                    }
                ],
                "required": [
                    "country",
                    "status",
                    "dateRange"
                ]
            },
            "ContactDetail": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of an individual to contact."
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "The contact details for the individual (if a name was provided) or the organization."
                                }
                            }
                        }
                    }
                ]
            },
            "Url": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Uri"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Count": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Quantity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                            },
                            "comparator": {
                                "type": "string",
                                "enum": [
                                    "<",
                                    "<=",
                                    ">=",
                                    ">"
                                ],
                                "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                            },
                            "unit": {
                                "$ref": "#/components/schemas/String",
                                "description": "A human-readable form of the unit."
                            },
                            "system": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The identification of the system that provides the coded form of the unit."
                            },
                            "code": {
                                "$ref": "#/components/schemas/Code",
                                "description": "A computer processable form of the unit in some unit representation system."
                            }
                        }
                    }
                ]
            },
            "Time": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                                "description": "Primitive value for time"
                            }
                        }
                    }
                ]
            },
            "Narrative": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": [
                                    "generated",
                                    "extensions",
                                    "additional",
                                    "empty"
                                ],
                                "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
                            },
                            "div": {
                                "$ref": "#/components/schemas/Xhtml",
                                "description": "The actual narrative content, a stripped down version of XHTML."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "div"
                ]
            },
            "Address": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "use": {
                                "type": "string",
                                "enum": [
                                    "home",
                                    "work",
                                    "temp",
                                    "old",
                                    "billing"
                                ],
                                "description": "The purpose of this address."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "postal",
                                    "physical",
                                    "both"
                                ],
                                "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both."
                            },
                            "text": {
                                "$ref": "#/components/schemas/String",
                                "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
                            },
                            "line": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information."
                                }
                            },
                            "city": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the city, town, suburb, village or other community or delivery center."
                            },
                            "district": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the administrative area (county)."
                            },
                            "state": {
                                "$ref": "#/components/schemas/String",
                                "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
                            },
                            "postalCode": {
                                "$ref": "#/components/schemas/String",
                                "description": "A postal code designating a region defined by the postal service."
                            },
                            "country": {
                                "$ref": "#/components/schemas/String",
                                "description": "Country - a nation as commonly understood or generally accepted."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Time period when address was/is in use."
                            }
                        }
                    }
                ]
            },
            "Contributor": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "author",
                                    "editor",
                                    "reviewer",
                                    "endorser"
                                ],
                                "description": "The type of contributor."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the individual or organization responsible for the contribution."
                            },
                            "contact": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactDetail",
                                    "description": "Contact details to assist a user in finding and communicating with the contributor."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "name"
                ]
            },
            "String": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "description": "Primitive value for string"
                            }
                        }
                    }
                ]
            },
            "Expression": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
                            },
                            "name": {
                                "$ref": "#/components/schemas/Id",
                                "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
                            },
                            "language": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The media type of the language for the expression."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/String",
                                "description": "An expression in the specified language that returns a value."
                            },
                            "reference": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "A URI that defines where the expression is found."
                            }
                        }
                    }
                ],
                "required": [
                    "language"
                ]
            },
            "Reference": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "reference": {
                                "$ref": "#/components/schemas/String",
                                "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                            },
                            "type": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                            },
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                            },
                            "display": {
                                "$ref": "#/components/schemas/String",
                                "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                            }
                        }
                    }
                ]
            },
            "SubstanceAmount": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "amountQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field."
                            },
                            "amountRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field."
                            },
                            "amountString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field."
                            },
                            "amountType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Most elements that require a quantitative value will also have a field called amount type. Amount type should always be specified because the actual value of the amount is often dependent on it. EXAMPLE: In capturing the actual relative amounts of substances or molecular fragments it is essential to indicate whether the amount refers to a mole ratio or weight ratio. For any given element an effort should be made to use same the amount type for all related definitional elements."
                            },
                            "amountText": {
                                "$ref": "#/components/schemas/String",
                                "description": "A textual comment on a numeric value."
                            },
                            "referenceRange": {
                                "$ref": "#/components/schemas/ReferenceRange",
                                "description": "Reference range of possible or expected values."
                            }
                        }
                    }
                ]
            },
            "Money": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Numerical value (with implicit precision)."
                            },
                            "currency": {
                                "$ref": "#/components/schemas/Code",
                                "description": "ISO 4217 Currency Code."
                            }
                        }
                    }
                ]
            },
            "Markdown": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/String"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "ProductShelfLife": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Unique identifier for the packaged Medicinal Product."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "This describes the shelf life, taking into account various scenarios such as shelf life of the packaged Medicinal Product itself, shelf life after transformation where necessary and shelf life after the first opening of a bottle, etc. The shelf life type shall be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used."
                            },
                            "specialPrecautionsForStorage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "period"
                ]
            },
            "Range": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "low": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The low limit. The boundary is inclusive."
                            },
                            "high": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The high limit. The boundary is inclusive."
                            }
                        }
                    }
                ]
            },
            "DataRequirement": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "Address",
                                    "Age",
                                    "Annotation",
                                    "Attachment",
                                    "BackboneElement",
                                    "CodeableConcept",
                                    "Coding",
                                    "ContactDetail",
                                    "ContactPoint",
                                    "Contributor",
                                    "Count",
                                    "DataRequirement",
                                    "Distance",
                                    "Dosage",
                                    "Duration",
                                    "Element",
                                    "ElementDefinition",
                                    "Expression",
                                    "Extension",
                                    "HumanName",
                                    "Identifier",
                                    "MarketingStatus",
                                    "Meta",
                                    "Money",
                                    "MoneyQuantity",
                                    "Narrative",
                                    "ParameterDefinition",
                                    "Period",
                                    "Population",
                                    "ProdCharacteristic",
                                    "ProductShelfLife",
                                    "Quantity",
                                    "Range",
                                    "Ratio",
                                    "Reference",
                                    "RelatedArtifact",
                                    "SampledData",
                                    "Signature",
                                    "SimpleQuantity",
                                    "SubstanceAmount",
                                    "Timing",
                                    "TriggerDefinition",
                                    "UsageContext",
                                    "base64Binary",
                                    "boolean",
                                    "canonical",
                                    "code",
                                    "date",
                                    "dateTime",
                                    "decimal",
                                    "id",
                                    "instant",
                                    "integer",
                                    "markdown",
                                    "oid",
                                    "positiveInt",
                                    "string",
                                    "time",
                                    "unsignedInt",
                                    "uri",
                                    "url",
                                    "uuid",
                                    "xhtml",
                                    "Account",
                                    "ActivityDefinition",
                                    "AdverseEvent",
                                    "AllergyIntolerance",
                                    "Appointment",
                                    "AppointmentResponse",
                                    "AuditEvent",
                                    "Basic",
                                    "Binary",
                                    "BiologicallyDerivedProduct",
                                    "BodyStructure",
                                    "Bundle",
                                    "CapabilityStatement",
                                    "CarePlan",
                                    "CareTeam",
                                    "CatalogEntry",
                                    "ChargeItem",
                                    "ChargeItemDefinition",
                                    "Claim",
                                    "ClaimResponse",
                                    "ClinicalImpression",
                                    "CodeSystem",
                                    "Communication",
                                    "CommunicationRequest",
                                    "CompartmentDefinition",
                                    "Composition",
                                    "ConceptMap",
                                    "Condition",
                                    "Consent",
                                    "Contract",
                                    "Coverage",
                                    "CoverageEligibilityRequest",
                                    "CoverageEligibilityResponse",
                                    "DetectedIssue",
                                    "Device",
                                    "DeviceDefinition",
                                    "DeviceMetric",
                                    "DeviceRequest",
                                    "DeviceUseStatement",
                                    "DiagnosticReport",
                                    "DocumentManifest",
                                    "DocumentReference",
                                    "DomainResource",
                                    "EffectEvidenceSynthesis",
                                    "Encounter",
                                    "Endpoint",
                                    "EnrollmentRequest",
                                    "EnrollmentResponse",
                                    "EpisodeOfCare",
                                    "EventDefinition",
                                    "Evidence",
                                    "EvidenceVariable",
                                    "ExampleScenario",
                                    "ExplanationOfBenefit",
                                    "FamilyMemberHistory",
                                    "Flag",
                                    "Goal",
                                    "GraphDefinition",
                                    "Group",
                                    "GuidanceResponse",
                                    "HealthcareService",
                                    "ImagingStudy",
                                    "Immunization",
                                    "ImmunizationEvaluation",
                                    "ImmunizationRecommendation",
                                    "ImplementationGuide",
                                    "InsurancePlan",
                                    "Invoice",
                                    "Library",
                                    "Linkage",
                                    "List",
                                    "Location",
                                    "Measure",
                                    "MeasureReport",
                                    "Media",
                                    "Medication",
                                    "MedicationAdministration",
                                    "MedicationDispense",
                                    "MedicationKnowledge",
                                    "MedicationRequest",
                                    "MedicationStatement",
                                    "MedicinalProduct",
                                    "MedicinalProductAuthorization",
                                    "MedicinalProductContraindication",
                                    "MedicinalProductIndication",
                                    "MedicinalProductIngredient",
                                    "MedicinalProductInteraction",
                                    "MedicinalProductManufactured",
                                    "MedicinalProductPackaged",
                                    "MedicinalProductPharmaceutical",
                                    "MedicinalProductUndesirableEffect",
                                    "MessageDefinition",
                                    "MessageHeader",
                                    "MolecularSequence",
                                    "NamingSystem",
                                    "NutritionOrder",
                                    "Observation",
                                    "ObservationDefinition",
                                    "OperationDefinition",
                                    "OperationOutcome",
                                    "Organization",
                                    "OrganizationAffiliation",
                                    "Parameters",
                                    "Patient",
                                    "PaymentNotice",
                                    "PaymentReconciliation",
                                    "Person",
                                    "PlanDefinition",
                                    "Practitioner",
                                    "PractitionerRole",
                                    "Procedure",
                                    "Provenance",
                                    "Questionnaire",
                                    "QuestionnaireResponse",
                                    "RelatedPerson",
                                    "RequestGroup",
                                    "ResearchDefinition",
                                    "ResearchElementDefinition",
                                    "ResearchStudy",
                                    "ResearchSubject",
                                    "Resource",
                                    "RiskAssessment",
                                    "RiskEvidenceSynthesis",
                                    "Schedule",
                                    "SearchParameter",
                                    "ServiceRequest",
                                    "Slot",
                                    "Specimen",
                                    "SpecimenDefinition",
                                    "StructureDefinition",
                                    "StructureMap",
                                    "Subscription",
                                    "Substance",
                                    "SubstanceNucleicAcid",
                                    "SubstancePolymer",
                                    "SubstanceProtein",
                                    "SubstanceReferenceInformation",
                                    "SubstanceSourceMaterial",
                                    "SubstanceSpecification",
                                    "SupplyDelivery",
                                    "SupplyRequest",
                                    "Task",
                                    "TerminologyCapabilities",
                                    "TestReport",
                                    "TestScript",
                                    "ValueSet",
                                    "VerificationResult",
                                    "VisionPrescription",
                                    "Type",
                                    "Any"
                                ],
                                "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile."
                            },
                            "profile": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "The profile of the required data, specified as the uri of the profile definition."
                                }
                            },
                            "subjectCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                            },
                            "subjectReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                            },
                            "mustSupport": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details)."
                                }
                            },
                            "codeFilter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeFilter",
                                    "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed."
                                }
                            },
                            "dateFilter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DateFilter",
                                    "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed."
                                }
                            },
                            "limit": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Specifies a maximum number of results that are required (uses the _count search parameter)."
                            },
                            "sort": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Sort",
                                    "description": "Specifies the order of the results to be returned."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "MoneyQuantity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Attachment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contentType": {
                                "$ref": "#/components/schemas/Code",
                                "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                            },
                            "language": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The human language of the content. The value can be any valid value according to BCP 47."
                            },
                            "data": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."
                            },
                            "url": {
                                "$ref": "#/components/schemas/Url",
                                "description": "A location where the data can be accessed."
                            },
                            "size": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                            },
                            "hash": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "The calculated hash of the data using SHA-1. Represented using base64."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A label or set of text to display in place of the data."
                            },
                            "creation": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date that the attachment was first created."
                            }
                        }
                    }
                ]
            },
            "Code": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The specific code."
                            },
                            "status": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Status of the code assignment."
                            },
                            "statusDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date at which the code status is changed as part of the terminology maintenance."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Any comment can be provided in this field, if necessary."
                            },
                            "source": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Supporting literature."
                                }
                            }
                        }
                    }
                ]
            },
            "Uri": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "description": "Primitive value for uri"
                            }
                        }
                    }
                ]
            },
            "UnsignedInt": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Integer"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Oid": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Uri"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "DateTime": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                "description": "Primitive value for dateTime"
                            }
                        }
                    }
                ]
            },
            "Timing": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "event": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DateTime",
                                    "description": "Identifies specific times when the event occurs."
                                }
                            },
                            "repeat": {
                                "$ref": "#/components/schemas/Repeat",
                                "description": "A set of rules that describe when the event is scheduled."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
                            }
                        }
                    }
                ]
            },
            "SampledData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "origin": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The length of time between sampling times, measured in milliseconds."
                            },
                            "factor": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                            },
                            "lowerLimit": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                            },
                            "upperLimit": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                            },
                            "dimensions": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once."
                            },
                            "data": {
                                "$ref": "#/components/schemas/String",
                                "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                            }
                        }
                    }
                ],
                "required": [
                    "origin",
                    "period",
                    "dimensions"
                ]
            },
            "Boolean": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "boolean",
                                "description": "Primitive value for boolean"
                            }
                        }
                    }
                ]
            },
            "RelatedArtifact": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "documentation",
                                    "justification",
                                    "citation",
                                    "predecessor",
                                    "successor",
                                    "derived-from",
                                    "depends-on",
                                    "composed-of"
                                ],
                                "description": "The type of relationship to the related artifact."
                            },
                            "label": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                            },
                            "display": {
                                "$ref": "#/components/schemas/String",
                                "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                            },
                            "citation": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                            },
                            "url": {
                                "$ref": "#/components/schemas/Url",
                                "description": "A url for the artifact that can be followed to access the actual content."
                            },
                            "document": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
                            },
                            "resource": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Xhtml": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "description": "Actual xhtml"
                            }
                        }
                    }
                ],
                "required": [
                    "value"
                ]
            },
            "Date": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                                "description": "Primitive value for date"
                            }
                        }
                    }
                ]
            },
            "Period": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "start": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The start of the period. The boundary is inclusive."
                            },
                            "end": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                            }
                        }
                    }
                ]
            },
            "BackboneElement": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "modifierExtension": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Extension",
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
                                }
                            }
                        }
                    }
                ]
            },
            "Population": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of the population."
                            },
                            "count": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The number of members of the population."
                            },
                            "subjectResults": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "This element refers to a List of subject level MeasureReport resources, one for each subject in this population."
                            }
                        }
                    }
                ]
            },
            "ProdCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "height": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Where applicable, the height can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used."
                            },
                            "width": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Where applicable, the width can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used."
                            },
                            "depth": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Where applicable, the depth can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used."
                            },
                            "weight": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Where applicable, the weight can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used."
                            },
                            "nominalVolume": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Where applicable, the nominal volume can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used."
                            },
                            "externalDiameter": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Where applicable, the external diameter can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used."
                            },
                            "shape": {
                                "$ref": "#/components/schemas/String",
                                "description": "Where applicable, the shape can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used."
                            },
                            "color": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Where applicable, the color can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used."
                                }
                            },
                            "imprint": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Where applicable, the imprint can be specified as text."
                                }
                            },
                            "image": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Attachment",
                                    "description": "Where applicable, the image can be provided The format of the image attachment shall be specified by regional implementations."
                                }
                            },
                            "scoring": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Where applicable, the scoring can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used."
                            }
                        }
                    }
                ]
            },
            "Annotation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "authorReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual responsible for making the annotation."
                            },
                            "authorString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The individual responsible for making the annotation."
                            },
                            "time": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Indicates when this particular annotation was made."
                            },
                            "text": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "The text of the annotation in markdown format."
                            }
                        }
                    }
                ],
                "required": [
                    "text"
                ]
            },
            "UsageContext": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "A code that identifies the type of context being specified by this usage context."
                            },
                            "valueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                            },
                            "valueRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "Base": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "path": {
                                "$ref": "#/components/schemas/String",
                                "description": "The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [StructureDefinition](structuredefinition.html#) without a StructureDefinition.base."
                            },
                            "min": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "Minimum cardinality of the base element identified by the path."
                            },
                            "max": {
                                "$ref": "#/components/schemas/String",
                                "description": "Maximum cardinality of the base element identified by the path."
                            }
                        }
                    }
                ],
                "required": [
                    "path",
                    "min",
                    "max"
                ]
            },
            "Binding": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "strength": {
                                "type": "string",
                                "enum": [
                                    "required",
                                    "extensible",
                                    "preferred",
                                    "example"
                                ],
                                "description": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances."
                            },
                            "valueSet": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used."
                            }
                        }
                    }
                ],
                "required": [
                    "strength",
                    "valueSet"
                ]
            },
            "Constraint": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "key": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality."
                            },
                            "requirements": {
                                "$ref": "#/components/schemas/String",
                                "description": "Description of why this constraint is necessary or appropriate."
                            },
                            "severity": {
                                "type": "string",
                                "enum": [
                                    "error",
                                    "warning"
                                ],
                                "description": "Identifies the impact constraint violation has on the conformance of the instance."
                            },
                            "human": {
                                "$ref": "#/components/schemas/String",
                                "description": "Text that can be used to describe the constraint in messages identifying that the constraint has been violated."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/String",
                                "description": "A [FHIRPath](fhirpath.html) expression of constraint that can be executed to see if this constraint is met."
                            },
                            "xpath": {
                                "$ref": "#/components/schemas/String",
                                "description": "An XPath expression of constraint that can be executed to see if this constraint is met."
                            },
                            "source": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "A reference to the original source of the constraint, for traceability purposes."
                            }
                        }
                    }
                ],
                "required": [
                    "key",
                    "severity",
                    "human"
                ]
            },
            "Example": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "label": {
                                "$ref": "#/components/schemas/String",
                                "description": "Describes the purpose of this example amoung the set of examples."
                            },
                            "valueBase64Binary": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueCode": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueMarkdown": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueOid": {
                                "$ref": "#/components/schemas/Oid",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valuePositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueUrl": {
                                "$ref": "#/components/schemas/Url",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueUuid": {
                                "$ref": "#/components/schemas/Uuid",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueAnnotation": {
                                "$ref": "#/components/schemas/Annotation",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueContactPoint": {
                                "$ref": "#/components/schemas/ContactPoint",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueCount": {
                                "$ref": "#/components/schemas/Count",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueDistance": {
                                "$ref": "#/components/schemas/Distance",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueHumanName": {
                                "$ref": "#/components/schemas/HumanName",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valuePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueSampledData": {
                                "$ref": "#/components/schemas/SampledData",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueContactDetail": {
                                "$ref": "#/components/schemas/ContactDetail",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueContributor": {
                                "$ref": "#/components/schemas/Contributor",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueDataRequirement": {
                                "$ref": "#/components/schemas/DataRequirement",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueExpression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueParameterDefinition": {
                                "$ref": "#/components/schemas/ParameterDefinition",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueRelatedArtifact": {
                                "$ref": "#/components/schemas/RelatedArtifact",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueTriggerDefinition": {
                                "$ref": "#/components/schemas/TriggerDefinition",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueUsageContext": {
                                "$ref": "#/components/schemas/UsageContext",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            },
                            "valueDosage": {
                                "$ref": "#/components/schemas/Dosage",
                                "description": "The actual value for the element, which must be one of the types allowed for this element."
                            }
                        }
                    }
                ],
                "required": [
                    "label"
                ]
            },
            "Mapping": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identity": {
                                "$ref": "#/components/schemas/Id",
                                "description": "An Internal id that is used to identify this mapping set when specific mappings are made."
                            },
                            "uri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI that identifies the specification that this mapping is expressed to."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A name for the specification that is being mapped to."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage."
                            }
                        }
                    }
                ],
                "required": [
                    "identity"
                ]
            },
            "Slicing": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "discriminator": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Discriminator",
                                    "description": "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated."
                            },
                            "ordered": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If the matching elements have to occur in the same order as defined in the profile."
                            },
                            "rules": {
                                "type": "string",
                                "enum": [
                                    "closed",
                                    "open",
                                    "openAtEnd"
                                ],
                                "description": "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end."
                            }
                        }
                    }
                ],
                "required": [
                    "rules"
                ]
            },
            "Discriminator": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "value",
                                    "exists",
                                    "pattern",
                                    "type",
                                    "profile"
                                ],
                                "description": "How the element value is interpreted when discrimination is evaluated."
                            },
                            "path": {
                                "$ref": "#/components/schemas/String",
                                "description": "A FHIRPath expression, using [the simple subset of FHIRPath](fhirpath.html#simple), that is used to identify the element on which discrimination is based."
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "path"
                ]
            },
            "Type": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "URL of Data type or Resource that is a(or the) type used for this element. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models."
                            },
                            "profile": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide."
                                }
                            },
                            "targetProfile": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide."
                                }
                            },
                            "aggregation": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "contained",
                                        "referenced",
                                        "bundled"
                                    ],
                                    "description": "If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle."
                                }
                            },
                            "versioning": {
                                "type": "string",
                                "enum": [
                                    "either",
                                    "independent",
                                    "specific"
                                ],
                                "description": "Whether this reference needs to be version specific or version independent, or whether either can be used."
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "DoseAndRate": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The kind of dose or rate specified, for example, ordered or calculated."
                            },
                            "doseRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Amount of medication per dose."
                            },
                            "doseQuantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "Amount of medication per dose."
                            },
                            "rateRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "Amount of medication per unit of time."
                            },
                            "rateRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Amount of medication per unit of time."
                            },
                            "rateQuantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "Amount of medication per unit of time."
                            }
                        }
                    }
                ]
            },
            "ReferenceRange": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "low": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The value of the low bound of the reference range.  The low bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the low bound is omitted,  it is assumed to be meaningless (e.g. reference range is <=2.3)."
                            },
                            "high": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The value of the high bound of the reference range.  The high bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the high bound is omitted,  it is assumed to be meaningless (e.g. reference range is >= 2.3)."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range."
                            },
                            "appliesTo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple `appliesTo`  are interpreted as an \"AND\" of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used."
                                }
                            },
                            "age": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so."
                            },
                            "text": {
                                "$ref": "#/components/schemas/String",
                                "description": "Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation.  An example would be a reference value of \"Negative\" or a list or table of \"normals\"."
                            }
                        }
                    }
                ]
            },
            "CodeFilter": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "path": {
                                "$ref": "#/components/schemas/String",
                                "description": "The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept."
                            },
                            "searchParam": {
                                "$ref": "#/components/schemas/String",
                                "description": "A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept."
                            },
                            "valueSet": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset."
                            },
                            "code": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes."
                                }
                            }
                        }
                    }
                ]
            },
            "DateFilter": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "path": {
                                "$ref": "#/components/schemas/String",
                                "description": "The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing."
                            },
                            "searchParam": {
                                "$ref": "#/components/schemas/String",
                                "description": "A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing."
                            },
                            "valueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now."
                            },
                            "valuePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now."
                            },
                            "valueDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now."
                            }
                        }
                    }
                ]
            },
            "Sort": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "path": {
                                "$ref": "#/components/schemas/String",
                                "description": "The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant."
                            },
                            "direction": {
                                "type": "string",
                                "enum": [
                                    "ascending",
                                    "descending"
                                ],
                                "description": "The direction of the sort, ascending or descending."
                            }
                        }
                    }
                ],
                "required": [
                    "path",
                    "direction"
                ]
            },
            "Repeat": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "numberOfUnits": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Todo."
                            },
                            "averageMolecularFormula": {
                                "$ref": "#/components/schemas/String",
                                "description": "Todo."
                            },
                            "repeatUnitAmountType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "repeatUnit": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RepeatUnit",
                                    "description": "Todo."
                                }
                            }
                        }
                    }
                ]
            },
            "Guarantor": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "party": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The entity who is responsible."
                            },
                            "onHold": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A guarantor may be placed on credit hold or otherwise have their role temporarily suspended."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The timeframe during which the guarantor accepts responsibility for the account."
                            }
                        }
                    }
                ],
                "required": [
                    "party"
                ]
            },
            "DynamicValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "path": {
                                "$ref": "#/components/schemas/String",
                                "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details)."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "An expression specifying the value of the customized element."
                            }
                        }
                    }
                ]
            },
            "Participant": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "test-engine",
                                    "client",
                                    "server"
                                ],
                                "description": "The type of participant."
                            },
                            "uri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The uri of the participant. An absolute URL is preferred."
                            },
                            "display": {
                                "$ref": "#/components/schemas/String",
                                "description": "The display name of the participant."
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "uri"
                ]
            },
            "SuspectEntity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "instance": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the actual instance of what caused the adverse event.  May be a substance, medication, medication administration, medication statement or a device."
                            },
                            "causality": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Causality",
                                    "description": "Information on the possible cause of the event."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "instance"
                ]
            },
            "Causality": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "assessment": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Assessment of if the entity caused the event."
                            },
                            "productRelatedness": {
                                "$ref": "#/components/schemas/String",
                                "description": "AdverseEvent.suspectEntity.causalityProductRelatedness."
                            },
                            "author": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "AdverseEvent.suspectEntity.causalityAuthor."
                            },
                            "method": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "ProbabilityScale | Bayesian | Checklist."
                            }
                        }
                    }
                ]
            },
            "Reaction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date of reaction to the immunization."
                            },
                            "detail": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Details of the reaction."
                            },
                            "reported": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Self-reported indicator."
                            }
                        }
                    }
                ]
            },
            "Agent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The participation the agent had with respect to the activity."
                            },
                            "role": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The function of the agent with respect to the activity. The security role enabling the agent with respect to the activity."
                                }
                            },
                            "who": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual, device or organization that participated in the event."
                            },
                            "onBehalfOf": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual, device, or organization for whom the change was made."
                            }
                        }
                    }
                ],
                "required": [
                    "who"
                ]
            },
            "Network": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "address": {
                                "$ref": "#/components/schemas/String",
                                "description": "An identifier for the network access point of the user device for the audit event."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "1",
                                    "2",
                                    "3",
                                    "4",
                                    "5"
                                ],
                                "description": "An identifier for the type of network access point that originated the audit event."
                            }
                        }
                    }
                ]
            },
            "Entity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "role": {
                                "type": "string",
                                "enum": [
                                    "derivation",
                                    "revision",
                                    "quotation",
                                    "source",
                                    "removal"
                                ],
                                "description": "How the entity was used during the activity."
                            },
                            "what": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identity of the  Entity used. May be a logical or physical uri and maybe absolute or relative."
                            },
                            "agent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Agent",
                                    "description": "The entity is attributed to an agent to express the agent's responsibility for that entity, possibly along with other agents. This description can be understood as shorthand for saying that the agent was responsible for the activity which generated the entity."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "role",
                    "what"
                ]
            },
            "Detail": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Unique identifier for the current payment item for the referenced payable."
                            },
                            "predecessor": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Unique identifier for the prior payment item for the referenced payable."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Code to indicate the nature of the payment."
                            },
                            "request": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A resource, such as a Claim, the evaluation of which could lead to payment."
                            },
                            "submitter": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party which submitted the claim or financial transaction."
                            },
                            "response": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A resource, such as a ClaimResponse, which contains a commitment to payment."
                            },
                            "date": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date from the response resource containing a commitment to pay."
                            },
                            "responsible": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to the individual who is responsible for inquiries regarding the response and its payment."
                            },
                            "payee": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party which is receiving the payment."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The monetary amount allocated from the total payment to the payable."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Source": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "context": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Type or variable this rule applies to."
                            },
                            "min": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Specified minimum cardinality for the element. This is optional; if present, it acts an implicit check on the input content."
                            },
                            "max": {
                                "$ref": "#/components/schemas/String",
                                "description": "Specified maximum cardinality for the element - a number or a \"*\". This is optional; if present, it acts an implicit check on the input content (* just serves as documentation; it's the default value)."
                            },
                            "type": {
                                "$ref": "#/components/schemas/String",
                                "description": "Specified type for the element. This works as a condition on the mapping - use for polymorphic elements."
                            },
                            "defaultValueBase64Binary": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueCode": {
                                "$ref": "#/components/schemas/Code",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueMarkdown": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueOid": {
                                "$ref": "#/components/schemas/Oid",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValuePositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueUrl": {
                                "$ref": "#/components/schemas/Url",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueUuid": {
                                "$ref": "#/components/schemas/Uuid",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueAnnotation": {
                                "$ref": "#/components/schemas/Annotation",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueContactPoint": {
                                "$ref": "#/components/schemas/ContactPoint",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueCount": {
                                "$ref": "#/components/schemas/Count",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueDistance": {
                                "$ref": "#/components/schemas/Distance",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueHumanName": {
                                "$ref": "#/components/schemas/HumanName",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValuePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueSampledData": {
                                "$ref": "#/components/schemas/SampledData",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueContactDetail": {
                                "$ref": "#/components/schemas/ContactDetail",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueContributor": {
                                "$ref": "#/components/schemas/Contributor",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueDataRequirement": {
                                "$ref": "#/components/schemas/DataRequirement",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueExpression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueParameterDefinition": {
                                "$ref": "#/components/schemas/ParameterDefinition",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueRelatedArtifact": {
                                "$ref": "#/components/schemas/RelatedArtifact",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueTriggerDefinition": {
                                "$ref": "#/components/schemas/TriggerDefinition",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueUsageContext": {
                                "$ref": "#/components/schemas/UsageContext",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "defaultValueDosage": {
                                "$ref": "#/components/schemas/Dosage",
                                "description": "A value to use if there is no existing value in the source object."
                            },
                            "element": {
                                "$ref": "#/components/schemas/String",
                                "description": "Optional field for this source."
                            },
                            "listMode": {
                                "type": "string",
                                "enum": [
                                    "first",
                                    "not_first",
                                    "last",
                                    "not_last",
                                    "only_one"
                                ],
                                "description": "How to handle the list mode for this element."
                            },
                            "variable": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Named context for field, if a field is specified."
                            },
                            "condition": {
                                "$ref": "#/components/schemas/String",
                                "description": "FHIRPath expression  - must be true or the rule does not apply."
                            },
                            "check": {
                                "$ref": "#/components/schemas/String",
                                "description": "FHIRPath expression  - must be true or the mapping engine throws an error instead of completing."
                            },
                            "logMessage": {
                                "$ref": "#/components/schemas/String",
                                "description": "A FHIRPath expression which specifies a message to put in the transform log when content matching the source rule is found."
                            }
                        }
                    }
                ],
                "required": [
                    "context"
                ]
            },
            "Collection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "collector": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Person who collected the specimen."
                            },
                            "collectedDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Time when specimen was collected from subject - the physiologically relevant time."
                            },
                            "collectedPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Time when specimen was collected from subject - the physiologically relevant time."
                            },
                            "duration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The span of time over which the collection of a specimen occurred."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The quantity of specimen collected; for instance the volume of a blood sample, or the physical measurement of an anatomic pathology sample."
                            },
                            "method": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A coded value specifying the technique that is used to perform the procedure."
                            },
                            "bodySite": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Anatomical location from which the specimen was collected (if subject is a patient). This is the target site.  This element is not used for environmental specimens."
                            },
                            "fastingStatusCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection."
                            },
                            "fastingStatusDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection."
                            }
                        }
                    }
                ]
            },
            "Manipulation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Description of manipulation."
                            },
                            "timeDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Time of manipulation."
                            },
                            "timePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Time of manipulation."
                            }
                        }
                    }
                ]
            },
            "Processing": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Textual description of procedure."
                            },
                            "procedure": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A coded value specifying the procedure used to process the specimen."
                            },
                            "additive": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Material used in the processing step."
                                }
                            },
                            "timeDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin."
                            },
                            "timePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin."
                            }
                        }
                    }
                ]
            },
            "Storage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Description of storage."
                            },
                            "temperature": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Storage temperature."
                            },
                            "scale": {
                                "type": "string",
                                "enum": [
                                    "farenheit",
                                    "celsius",
                                    "kelvin"
                                ],
                                "description": "Temperature scale used."
                            },
                            "duration": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Storage timeperiod."
                            }
                        }
                    }
                ]
            },
            "Entry": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "flag": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The flag allows the system constructing the list to indicate the role and significance of the item in the list."
                            },
                            "deleted": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "True if this item is marked as deleted in the list."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When this item was added to the list."
                            },
                            "item": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to the actual resource from which data was derived."
                            }
                        }
                    }
                ],
                "required": [
                    "item"
                ]
            },
            "Request": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "method": {
                                "type": "string",
                                "enum": [
                                    "GET",
                                    "HEAD",
                                    "POST",
                                    "PUT",
                                    "DELETE",
                                    "PATCH"
                                ],
                                "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred."
                            },
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The URL for this entry, relative to the root (the address to which the request is posted)."
                            },
                            "ifNoneMatch": {
                                "$ref": "#/components/schemas/String",
                                "description": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread)."
                            },
                            "ifModifiedSince": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread)."
                            },
                            "ifMatch": {
                                "$ref": "#/components/schemas/String",
                                "description": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency)."
                            },
                            "ifNoneExist": {
                                "$ref": "#/components/schemas/String",
                                "description": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\")."
                            }
                        }
                    }
                ],
                "required": [
                    "method",
                    "url"
                ]
            },
            "Response": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The MessageHeader.id of the message to which this message is a response."
                            },
                            "code": {
                                "type": "string",
                                "enum": [
                                    "ok",
                                    "transient-error",
                                    "fatal-error"
                                ],
                                "description": "Code that identifies the type of response to the message - whether it was successful or not, and whether it should be resent or not."
                            },
                            "details": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Full details of any issues found in the message."
                            }
                        }
                    }
                ],
                "required": [
                    "identifier",
                    "code"
                ]
            },
            "Search": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "match",
                                    "include",
                                    "outcome"
                                ],
                                "description": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process."
                            },
                            "score": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "When searching, the server's search ranking score for the entry."
                            }
                        }
                    }
                ]
            },
            "Link": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "URL to a particular requirement or feature within the FHIR specification."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Short description of the link."
                            }
                        }
                    }
                ],
                "required": [
                    "url"
                ]
            },
            "Document": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "producer",
                                    "consumer"
                                ],
                                "description": "Mode of this document declaration - whether an application is a producer or consumer."
                            },
                            "documentation": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A description of how the application supports or uses the specified document profile.  For example, when documents are created, what action is taken with consumed documents, etc."
                            },
                            "profile": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "A profile on the document Bundle that constrains which resources are present, and their contents."
                            }
                        }
                    }
                ],
                "required": [
                    "mode",
                    "profile"
                ]
            },
            "Implementation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Information about the specific installation that this terminology capability statement relates to."
                            },
                            "url": {
                                "$ref": "#/components/schemas/Url",
                                "description": "An absolute base URL for the implementation."
                            }
                        }
                    }
                ],
                "required": [
                    "description"
                ]
            },
            "Messaging": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "endpoint": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Endpoint",
                                    "description": "An endpoint (network accessible address) to which messages and/or replies are to be sent."
                                }
                            },
                            "reliableCache": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "Length if the receiver's reliable messaging cache in minutes (if a receiver) or how long the cache length on the receiver should be (if a sender)."
                            },
                            "documentation": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Documentation about the system's messaging capabilities for this endpoint not otherwise documented by the capability statement.  For example, the process for becoming an authorized messaging exchange partner."
                            },
                            "supportedMessage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SupportedMessage",
                                    "description": "References to message definitions for messages this system can send or receive."
                                }
                            }
                        }
                    }
                ]
            },
            "SupportedMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "sender",
                                    "receiver"
                                ],
                                "description": "The mode of this event declaration - whether application is sender or receiver."
                            },
                            "definition": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Points to a message definition that identifies the messaging event, message structure, allowed responses, etc."
                            }
                        }
                    }
                ],
                "required": [
                    "mode",
                    "definition"
                ]
            },
            "Rest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "client",
                                    "server"
                                ],
                                "description": "Identifies whether this portion of the statement is describing the ability to initiate or receive restful operations."
                            },
                            "documentation": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Information about the system's restful capabilities that apply across all applications, such as security."
                            },
                            "security": {
                                "$ref": "#/components/schemas/Security",
                                "description": "Information about security implementation from an interface perspective - what a client needs to know."
                            },
                            "resource": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Resource",
                                    "description": "A specification of the restful capabilities of the solution for a specific resource type."
                                }
                            },
                            "interaction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Interaction",
                                    "description": "A specification of restful operations supported by the system."
                                }
                            },
                            "searchParam": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SearchParam",
                                    "description": "Search parameters that are supported for searching all resources for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation."
                                }
                            },
                            "operation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Operation",
                                    "description": "Definition of an operation or a named query together with its parameters and their meaning and type."
                                }
                            },
                            "compartment": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "An absolute URI which is a reference to the definition of a compartment that the system supports. The reference is to a CompartmentDefinition resource by its canonical URL ."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "mode"
                ]
            },
            "Interaction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "enum": [
                                    "read",
                                    "vread",
                                    "update",
                                    "patch",
                                    "delete",
                                    "history-instance",
                                    "history-type",
                                    "create",
                                    "search-type"
                                ],
                                "description": "Coded identifier of the operation, supported by the system resource."
                            },
                            "documentation": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Guidance specific to the implementation of this operation, such as 'delete is a logical delete' or 'updates are only allowed with version id' or 'creates permitted from pre-authorized certificates only'."
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "Operation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Server interaction or operation type."
                            },
                            "resource": {
                                "type": "string",
                                "enum": [
                                    "Address",
                                    "Age",
                                    "Annotation",
                                    "Attachment",
                                    "BackboneElement",
                                    "CodeableConcept",
                                    "Coding",
                                    "ContactDetail",
                                    "ContactPoint",
                                    "Contributor",
                                    "Count",
                                    "DataRequirement",
                                    "Distance",
                                    "Dosage",
                                    "Duration",
                                    "Element",
                                    "ElementDefinition",
                                    "Expression",
                                    "Extension",
                                    "HumanName",
                                    "Identifier",
                                    "MarketingStatus",
                                    "Meta",
                                    "Money",
                                    "MoneyQuantity",
                                    "Narrative",
                                    "ParameterDefinition",
                                    "Period",
                                    "Population",
                                    "ProdCharacteristic",
                                    "ProductShelfLife",
                                    "Quantity",
                                    "Range",
                                    "Ratio",
                                    "Reference",
                                    "RelatedArtifact",
                                    "SampledData",
                                    "Signature",
                                    "SimpleQuantity",
                                    "SubstanceAmount",
                                    "Timing",
                                    "TriggerDefinition",
                                    "UsageContext",
                                    "base64Binary",
                                    "boolean",
                                    "canonical",
                                    "code",
                                    "date",
                                    "dateTime",
                                    "decimal",
                                    "id",
                                    "instant",
                                    "integer",
                                    "markdown",
                                    "oid",
                                    "positiveInt",
                                    "string",
                                    "time",
                                    "unsignedInt",
                                    "uri",
                                    "url",
                                    "uuid",
                                    "xhtml",
                                    "Account",
                                    "ActivityDefinition",
                                    "AdverseEvent",
                                    "AllergyIntolerance",
                                    "Appointment",
                                    "AppointmentResponse",
                                    "AuditEvent",
                                    "Basic",
                                    "Binary",
                                    "BiologicallyDerivedProduct",
                                    "BodyStructure",
                                    "Bundle",
                                    "CapabilityStatement",
                                    "CarePlan",
                                    "CareTeam",
                                    "CatalogEntry",
                                    "ChargeItem",
                                    "ChargeItemDefinition",
                                    "Claim",
                                    "ClaimResponse",
                                    "ClinicalImpression",
                                    "CodeSystem",
                                    "Communication",
                                    "CommunicationRequest",
                                    "CompartmentDefinition",
                                    "Composition",
                                    "ConceptMap",
                                    "Condition",
                                    "Consent",
                                    "Contract",
                                    "Coverage",
                                    "CoverageEligibilityRequest",
                                    "CoverageEligibilityResponse",
                                    "DetectedIssue",
                                    "Device",
                                    "DeviceDefinition",
                                    "DeviceMetric",
                                    "DeviceRequest",
                                    "DeviceUseStatement",
                                    "DiagnosticReport",
                                    "DocumentManifest",
                                    "DocumentReference",
                                    "DomainResource",
                                    "EffectEvidenceSynthesis",
                                    "Encounter",
                                    "Endpoint",
                                    "EnrollmentRequest",
                                    "EnrollmentResponse",
                                    "EpisodeOfCare",
                                    "EventDefinition",
                                    "Evidence",
                                    "EvidenceVariable",
                                    "ExampleScenario",
                                    "ExplanationOfBenefit",
                                    "FamilyMemberHistory",
                                    "Flag",
                                    "Goal",
                                    "GraphDefinition",
                                    "Group",
                                    "GuidanceResponse",
                                    "HealthcareService",
                                    "ImagingStudy",
                                    "Immunization",
                                    "ImmunizationEvaluation",
                                    "ImmunizationRecommendation",
                                    "ImplementationGuide",
                                    "InsurancePlan",
                                    "Invoice",
                                    "Library",
                                    "Linkage",
                                    "List",
                                    "Location",
                                    "Measure",
                                    "MeasureReport",
                                    "Media",
                                    "Medication",
                                    "MedicationAdministration",
                                    "MedicationDispense",
                                    "MedicationKnowledge",
                                    "MedicationRequest",
                                    "MedicationStatement",
                                    "MedicinalProduct",
                                    "MedicinalProductAuthorization",
                                    "MedicinalProductContraindication",
                                    "MedicinalProductIndication",
                                    "MedicinalProductIngredient",
                                    "MedicinalProductInteraction",
                                    "MedicinalProductManufactured",
                                    "MedicinalProductPackaged",
                                    "MedicinalProductPharmaceutical",
                                    "MedicinalProductUndesirableEffect",
                                    "MessageDefinition",
                                    "MessageHeader",
                                    "MolecularSequence",
                                    "NamingSystem",
                                    "NutritionOrder",
                                    "Observation",
                                    "ObservationDefinition",
                                    "OperationDefinition",
                                    "OperationOutcome",
                                    "Organization",
                                    "OrganizationAffiliation",
                                    "Parameters",
                                    "Patient",
                                    "PaymentNotice",
                                    "PaymentReconciliation",
                                    "Person",
                                    "PlanDefinition",
                                    "Practitioner",
                                    "PractitionerRole",
                                    "Procedure",
                                    "Provenance",
                                    "Questionnaire",
                                    "QuestionnaireResponse",
                                    "RelatedPerson",
                                    "RequestGroup",
                                    "ResearchDefinition",
                                    "ResearchElementDefinition",
                                    "ResearchStudy",
                                    "ResearchSubject",
                                    "Resource",
                                    "RiskAssessment",
                                    "RiskEvidenceSynthesis",
                                    "Schedule",
                                    "SearchParameter",
                                    "ServiceRequest",
                                    "Slot",
                                    "Specimen",
                                    "SpecimenDefinition",
                                    "StructureDefinition",
                                    "StructureMap",
                                    "Subscription",
                                    "Substance",
                                    "SubstanceNucleicAcid",
                                    "SubstancePolymer",
                                    "SubstanceProtein",
                                    "SubstanceReferenceInformation",
                                    "SubstanceSourceMaterial",
                                    "SubstanceSpecification",
                                    "SupplyDelivery",
                                    "SupplyRequest",
                                    "Task",
                                    "TerminologyCapabilities",
                                    "TestReport",
                                    "TestScript",
                                    "ValueSet",
                                    "VerificationResult",
                                    "VisionPrescription"
                                ],
                                "description": "The type of the resource.  See http://build.fhir.org/resourcelist.html."
                            },
                            "label": {
                                "$ref": "#/components/schemas/String",
                                "description": "The label would be used for tracking/logging purposes by test engines."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "The description would be used by test engines for tracking and reporting purposes."
                            },
                            "accept": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The mime-type to use for RESTful operation in the 'Accept' header."
                            },
                            "contentType": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The mime-type to use for RESTful operation in the 'Content-Type' header."
                            },
                            "destination": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The server where the request message is destined for.  Must be one of the server numbers listed in TestScript.destination section."
                            },
                            "encodeRequestUrl": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether or not to implicitly send the request url in encoded format. The default is true to match the standard RESTful client behavior. Set to false when communicating with a server that does not support encoded url paths."
                            },
                            "method": {
                                "type": "string",
                                "enum": [
                                    "delete",
                                    "get",
                                    "options",
                                    "patch",
                                    "post",
                                    "put",
                                    "head"
                                ],
                                "description": "The HTTP method the test engine MUST use for this operation regardless of any other operation details."
                            },
                            "origin": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The server where the request message originates from.  Must be one of the server numbers listed in TestScript.origin section."
                            },
                            "params": {
                                "$ref": "#/components/schemas/String",
                                "description": "Path plus parameters after [type].  Used to set parts of the request URL explicitly."
                            },
                            "requestHeader": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RequestHeader",
                                    "description": "Header elements would be used to set HTTP headers."
                                }
                            },
                            "requestId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The fixture id (maybe new) to map to the request."
                            },
                            "responseId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The fixture id (maybe new) to map to the response."
                            },
                            "sourceId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The id of the fixture used as the body of a PUT or POST request."
                            },
                            "targetId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Id of fixture used for extracting the [id],  [type], and [vid] for GET requests."
                            },
                            "url": {
                                "$ref": "#/components/schemas/String",
                                "description": "Complete request URL."
                            }
                        }
                    }
                ],
                "required": [
                    "encodeRequestUrl"
                ]
            },
            "SearchParam": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the search parameter used in the interface."
                            },
                            "definition": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "An absolute URI that is a formal reference to where this parameter was first defined, so that a client can be confident of the meaning of the search parameter (a reference to [SearchParameter.url](searchparameter-definitions.html#SearchParameter.url)). This element SHALL be populated if the search parameter refers to a SearchParameter defined by the FHIR core specification or externally defined IGs."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "number",
                                    "date",
                                    "string",
                                    "token",
                                    "reference",
                                    "composite",
                                    "quantity",
                                    "uri",
                                    "special"
                                ],
                                "description": "The type of value a search parameter refers to, and how the content is interpreted."
                            },
                            "documentation": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms."
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "type"
                ]
            },
            "Security": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "cors": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Server adds CORS headers when responding to requests - this enables Javascript applications to use the server."
                            },
                            "service": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Types of security services that are supported/required by the system."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "General description of how security works."
                            }
                        }
                    }
                ]
            },
            "Software": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Name the software is known by."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The version identifier for the software covered by this statement."
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "Activity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "outcomeCodeableConcept": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Identifies the outcome at the point when the status of the activity is assessed.  For example, the outcome of an education activity could be patient understands (or not)."
                                }
                            },
                            "outcomeReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Details of the outcome or action resulting from the activity.  The reference to an \"event\" resource, such as Procedure or Encounter or Observation, is the result/outcome of the activity itself.  The activity can be conveyed using CarePlan.activity.detail OR using the CarePlan.activity.reference (a reference to a “request” resource)."
                                }
                            },
                            "progress": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Notes about the adherence/status/progress of the activity."
                                }
                            },
                            "reference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The details of the proposed activity represented in a specific resource."
                            },
                            "detail": {
                                "$ref": "#/components/schemas/Detail",
                                "description": "A simple summary of a planned activity suitable for a general care plan system (e.g. form driven) that doesn't know about specific resources such as procedure etc."
                            }
                        }
                    }
                ]
            },
            "RelatedEntry": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "relationtype": {
                                "type": "string",
                                "enum": [
                                    "triggers",
                                    "is-replaced-by"
                                ],
                                "description": "The type of relation to the related item: child, parent, packageContent, containerPackage, usedIn, uses, requires, etc."
                            },
                            "item": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The reference to the related item."
                            }
                        }
                    }
                ],
                "required": [
                    "relationtype",
                    "item"
                ]
            },
            "Performer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "function": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Distinguishes the type of involvement of the performer in the procedure. For example, surgeon, anaesthetist, endoscopist."
                            },
                            "actor": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The practitioner who was involved in the procedure."
                            },
                            "onBehalfOf": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The organization the device or practitioner was acting on behalf of."
                            }
                        }
                    }
                ],
                "required": [
                    "actor"
                ]
            },
            "Applicability": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
                            },
                            "language": {
                                "$ref": "#/components/schemas/String",
                                "description": "The media type of the language for the expression, e.g. \"text/cql\" for Clinical Query Language expressions or \"text/fhirpath\" for FHIRPath expressions."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/String",
                                "description": "An expression that returns true or false, indicating whether the condition is satisfied. When using FHIRPath expressions, the %context environment variable must be replaced at runtime with the ChargeItem resource to which this definition is applied."
                            }
                        }
                    }
                ]
            },
            "PropertyGroup": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "applicability": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Applicability",
                                    "description": "Expressions that describe applicability criteria for the priceComponent."
                                }
                            },
                            "priceComponent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PriceComponent",
                                    "description": "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the prices have been calculated."
                                }
                            }
                        }
                    }
                ]
            },
            "PriceComponent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "base",
                                    "surcharge",
                                    "deduction",
                                    "discount",
                                    "tax",
                                    "informational"
                                ],
                                "description": "This code identifies the type of the component."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code that identifies the component. Codes may be used to differentiate between kinds of taxes, surcharges, discounts etc."
                            },
                            "factor": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The factor that has been applied on the base price for calculating this component."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The amount calculated for this component."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Accident": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "date": {
                                "$ref": "#/components/schemas/Date",
                                "description": "Date of an accident event  related to the products and services contained in the claim."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers."
                            },
                            "locationAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "The physical location of the accident event."
                            },
                            "locationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The physical location of the accident event."
                            }
                        }
                    }
                ]
            },
            "Diagnosis": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "A number to uniquely identify diagnosis entries."
                            },
                            "diagnosisCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition."
                            },
                            "diagnosisReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition."
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "When the condition was observed or the relative ranking."
                                }
                            },
                            "onAdmission": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indication of whether the diagnosis was present on admission to a facility."
                            },
                            "packageCode": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system."
                            }
                        }
                    }
                ],
                "required": [
                    "sequence"
                ]
            },
            "Insurance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "focal": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true."
                            },
                            "coverage": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system."
                            },
                            "preAuthRef": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "focal",
                    "coverage"
                ]
            },
            "Item": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "linkId": {
                                "$ref": "#/components/schemas/String",
                                "description": "The item from the Questionnaire that corresponds to this item in the QuestionnaireResponse resource."
                            },
                            "definition": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "A reference to an [ElementDefinition](elementdefinition.html) that provides the details for the item."
                            },
                            "text": {
                                "$ref": "#/components/schemas/String",
                                "description": "Text that is displayed above the contents of the group or as the text of the question being answered."
                            },
                            "answer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Answer",
                                    "description": "The respondent's answer(s) to the question."
                                }
                            },
                            "item": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Item",
                                    "description": "Questions or sub-groups nested beneath a question or group."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "linkId"
                ]
            },
            "SubDetail": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items."
                            },
                            "revenue": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of revenue or cost center providing the product and/or service."
                            },
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Code to identify the general type of benefits under which products and services are provided."
                            },
                            "productOrService": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item."
                            },
                            "modifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Item typification or modifiers codes to convey additional context for the product or service."
                                }
                            },
                            "programCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Identifies the program under which this may be recovered."
                                }
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The number of repetitions of a service or product."
                            },
                            "unitPrice": {
                                "$ref": "#/components/schemas/Money",
                                "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."
                            },
                            "factor": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount."
                            },
                            "net": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The quantity times the unit price for an additional service or product or charge."
                            },
                            "udi": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Unique Device Identifiers associated with this line item."
                                }
                            },
                            "noteNumber": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PositiveInt",
                                    "description": "The numbers associated with notes below which apply to the adjudication of this item."
                                }
                            },
                            "adjudication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Adjudication",
                                    "description": "The adjudication results."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "sequence",
                    "productOrService"
                ]
            },
            "Payee": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of Party to be reimbursed: Subscriber, provider, other."
                            },
                            "party": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the individual or organization to whom any payment will be made."
                            }
                        }
                    }
                ]
            },
            "Related": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "claim": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to a related claim."
                            },
                            "relationship": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code to convey how the claims are related."
                            },
                            "reference": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "An alternate organizational reference to the case or file to which this particular claim pertains."
                            }
                        }
                    }
                ]
            },
            "SupportingInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "A number to uniquely identify supporting information entries."
                            },
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The general class of the information supplied: information; exception; accident, employment; onset, etc."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought."
                            },
                            "timingDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date when or period to which this information refers."
                            },
                            "timingPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date when or period to which this information refers."
                            },
                            "valueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
                            },
                            "valueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
                            },
                            "reason": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Provides the reason in the situation where a reason code is required in addition to the content."
                            }
                        }
                    }
                ],
                "required": [
                    "sequence",
                    "category"
                ]
            },
            "AddItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "itemSequence": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PositiveInt",
                                    "description": "Claim items which this service line is intended to replace."
                                }
                            },
                            "detailSequence": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PositiveInt",
                                    "description": "The sequence number of the details within the claim item which this line is intended to replace."
                                }
                            },
                            "subDetailSequence": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PositiveInt",
                                    "description": "The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace."
                                }
                            },
                            "provider": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The providers who are authorized for the services rendered to the patient."
                                }
                            },
                            "productOrService": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item."
                            },
                            "modifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Item typification or modifiers codes to convey additional context for the product or service."
                                }
                            },
                            "programCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Identifies the program under which this may be recovered."
                                }
                            },
                            "servicedDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date or dates when the service or product was supplied, performed or completed."
                            },
                            "servicedPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date or dates when the service or product was supplied, performed or completed."
                            },
                            "locationCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Where the product or service was provided."
                            },
                            "locationAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "Where the product or service was provided."
                            },
                            "locationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Where the product or service was provided."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The number of repetitions of a service or product."
                            },
                            "unitPrice": {
                                "$ref": "#/components/schemas/Money",
                                "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."
                            },
                            "factor": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount."
                            },
                            "net": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The quantity times the unit price for an additional service or product or charge."
                            },
                            "bodySite": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Physical service site on the patient (limb, tooth, etc.)."
                            },
                            "subSite": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s)."
                                }
                            },
                            "noteNumber": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PositiveInt",
                                    "description": "The numbers associated with notes below which apply to the adjudication of this item."
                                }
                            },
                            "adjudication": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Adjudication",
                                    "description": "The adjudication results."
                                }
                            },
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Detail",
                                    "description": "The second-tier service adjudications for payor added services."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "productOrService"
                ]
            },
            "Error": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "An error code,from a specified code system, which details why the eligibility check could not be performed."
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "Adjudication": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item."
                            },
                            "reason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code supporting the understanding of the adjudication result and explaining variance from expected amount."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Monetary amount associated with the category."
                            },
                            "value": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "A non-monetary value associated with the category. Mutually exclusive to the amount element above."
                            }
                        }
                    }
                ],
                "required": [
                    "category"
                ]
            },
            "Payment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Whether this represents partial or complete payment of the benefits payable."
                            },
                            "adjustment": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication."
                            },
                            "adjustmentReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Reason for the payment adjustment."
                            },
                            "date": {
                                "$ref": "#/components/schemas/Date",
                                "description": "Estimated date the payment will be issued or the actual issue date of payment."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Benefits payable less any payment adjustment."
                            },
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Issuer's unique identifier for the payment instrument."
                            }
                        }
                    }
                ]
            },
            "ProcessNote": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "display",
                                    "print",
                                    "printoper"
                                ],
                                "description": "The business purpose of the note text."
                            },
                            "text": {
                                "$ref": "#/components/schemas/String",
                                "description": "The explanation or description associated with the processing."
                            }
                        }
                    }
                ]
            },
            "Total": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Monetary total amount associated with the category."
                            }
                        }
                    }
                ],
                "required": [
                    "category",
                    "amount"
                ]
            },
            "Finding": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "itemCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specific text or code for finding or diagnosis, which may include ruled-out or resolved conditions."
                            },
                            "itemReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Specific reference for finding or diagnosis, which may include ruled-out or resolved conditions."
                            },
                            "basis": {
                                "$ref": "#/components/schemas/String",
                                "description": "Which investigations support finding or diagnosis."
                            }
                        }
                    }
                ]
            },
            "Investigation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A name/code for the group (\"set\") of investigations. Typically, this will be something like \"signs\", \"symptoms\", \"clinical\", \"diagnostic\", but the list is not constrained, and others such groups such as (exposure|family|travel|nutritional) history may be used."
                            },
                            "item": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A record of a specific investigation that was undertaken."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "Concept": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/Code",
                                "description": "Specifies a code for the concept to be included or excluded."
                            },
                            "display": {
                                "$ref": "#/components/schemas/String",
                                "description": "The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system."
                            },
                            "designation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Designation",
                                    "description": "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "Designation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "language": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The language this designation is defined for."
                            },
                            "use": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "A code that represents types of uses of designations."
                            },
                            "value": {
                                "$ref": "#/components/schemas/String",
                                "description": "The text value for this designation."
                            }
                        }
                    }
                ],
                "required": [
                    "value"
                ]
            },
            "Property": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A category for this property, e.g. Physical, Chemical, Enzymatic."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Property type e.g. viscosity, pH, isoelectric point."
                            },
                            "parameters": {
                                "$ref": "#/components/schemas/String",
                                "description": "Parameters that were used in the measurement of a property (e.g. for viscosity: measured at 20C with a pH of 7.1)."
                            },
                            "definingSubstanceReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A substance upon which a defining property depends (e.g. for solubility: in water, in alcohol)."
                            },
                            "definingSubstanceCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A substance upon which a defining property depends (e.g. for solubility: in water, in alcohol)."
                            },
                            "amountQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Quantitative value for this property."
                            },
                            "amountString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Quantitative value for this property."
                            }
                        }
                    }
                ]
            },
            "Filter": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "property": {
                                "$ref": "#/components/schemas/Code",
                                "description": "A code that identifies a property or a filter defined in the code system."
                            },
                            "op": {
                                "type": "string",
                                "enum": [
                                    "=",
                                    "is-a",
                                    "descendent-of",
                                    "is-not-a",
                                    "regex",
                                    "in",
                                    "not-in",
                                    "generalizes",
                                    "exists"
                                ],
                                "description": "The kind of operation to perform as a part of the filter criteria."
                            },
                            "value": {
                                "$ref": "#/components/schemas/String",
                                "description": "The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value  (if the filter represents a property defined in CodeSystem) or of the system filter value (if the filter represents a filter defined in CodeSystem) when the operation is 'regex', or one of the values (true and false), when the operation is 'exists'."
                            }
                        }
                    }
                ],
                "required": [
                    "property",
                    "op",
                    "value"
                ]
            },
            "Payload": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contentString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The communicated content (or for multi-part communications, one portion of the communication)."
                            },
                            "contentAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The communicated content (or for multi-part communications, one portion of the communication)."
                            },
                            "contentReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The communicated content (or for multi-part communications, one portion of the communication)."
                            }
                        }
                    }
                ]
            },
            "Attester": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "personal",
                                    "professional",
                                    "legal",
                                    "official"
                                ],
                                "description": "The type of attestation the authenticator offers."
                            },
                            "time": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When the composition was attested by the party."
                            },
                            "party": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Who attested the composition in the specified way."
                            }
                        }
                    }
                ],
                "required": [
                    "mode"
                ]
            },
            "Event": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the typeCode, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act."
                                }
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period of time covered by the documentation. There is no assertion that the documentation is a complete representation for this period, only that it documents events during this time."
                            },
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The description and/or reference of the event(s) being documented. For example, this could be used to document such a colonoscopy or an appendectomy."
                                }
                            }
                        }
                    }
                ]
            },
            "RelatesTo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "enum": [
                                    "replaces",
                                    "transforms",
                                    "signs",
                                    "appends"
                                ],
                                "description": "The type of relationship that this document has with anther document."
                            },
                            "target": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The target document of this relationship."
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "target"
                ]
            },
            "Section": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "The label for this particular section.  This will be part of the rendered content for the document, and is often used to build a table of contents."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code identifying the kind of content contained within the section. This must be consistent with the section title."
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Identifies who is responsible for the information in this section, not necessarily who typed it in."
                                }
                            },
                            "focus": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The actual focus of the section when it is not the subject of the composition, but instead represents something or someone associated with the subject such as (for a patient subject) a spouse, parent, fetus, or donor. If not focus is specified, the focus is assumed to be focus of the parent section, or, for a section in the Composition itself, the subject of the composition. Sections with a focus SHALL only include resources where the logical subject (patient, subject, focus, etc.) matches the section focus, or the resources have no logical subject (few resources)."
                            },
                            "text": {
                                "$ref": "#/components/schemas/Narrative",
                                "description": "A human-readable narrative that contains the attested content of the section, used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative."
                            },
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "working",
                                    "snapshot",
                                    "changes"
                                ],
                                "description": "How the entry list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted."
                            },
                            "orderedBy": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specifies the order applied to the items in the section entries."
                            },
                            "entry": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A reference to the actual resource from which the narrative in the section is derived."
                                }
                            },
                            "emptyReason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "If the section is empty, why the list is empty. An empty section typically has some text explaining the empty reason."
                            },
                            "section": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Section",
                                    "description": "A nested sub-section within this section."
                                }
                            }
                        }
                    }
                ]
            },
            "Target": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "target": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Todo."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "interaction": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "organism": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "organismType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "amountQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Todo."
                            },
                            "amountRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Todo."
                            },
                            "amountString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Todo."
                            },
                            "amountType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "source": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Todo."
                                }
                            }
                        }
                    }
                ]
            },
            "DependsOn": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "uri": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "A canonical reference to the Implementation guide for the dependency."
                            },
                            "packageId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The NPM package name for the Implementation Guide that this IG depends on."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The version of the IG that is depended on, when the correct version is required to understand the IG correctly."
                            }
                        }
                    }
                ],
                "required": [
                    "uri"
                ]
            },
            "Unmapped": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "provided",
                                    "fixed",
                                    "other-map"
                                ],
                                "description": "Defines which action to take if there is no match for the source concept in the target system designated for the group. One of 3 actions are possible: use the unmapped code (this is useful when doing a mapping between versions, and only a few codes have changed), use a fixed code (a default code), or alternatively, a reference to a different concept map can be provided (by canonical URL)."
                            },
                            "code": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The fixed code to use when the mode = 'fixed'  - all unmapped codes are mapped to a single fixed code."
                            },
                            "display": {
                                "$ref": "#/components/schemas/String",
                                "description": "The display for the code. The display is only provided to help editors when editing the concept map."
                            },
                            "url": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The canonical reference to an additional ConceptMap resource instance to use for mapping if this ConceptMap resource contains no matching mapping for the source concept."
                            }
                        }
                    }
                ],
                "required": [
                    "mode"
                ]
            },
            "Stage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "summary": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A simple summary of the stage such as \"Stage 3\". The determination of the stage is disease-specific."
                            },
                            "assessment": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Reference to a formal record of the evidence on which the staging assessment is based."
                                }
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The kind of staging, such as pathological or clinical staging."
                            }
                        }
                    }
                ]
            },
            "Policy": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "authority": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Entity or Organization having regulatory jurisdiction or accountability for  enforcing policies pertaining to Consent Directives."
                            },
                            "uri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law."
                            }
                        }
                    }
                ]
            },
            "Provision": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "deny",
                                    "permit"
                                ],
                                "description": "Action  to take - permit or deny - when the rule conditions are met.  Not permitted in root rule, required in all nested rules."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The timeframe in this rule is valid."
                            },
                            "actor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Actor",
                                    "description": "Who or what is controlled by this rule. Use group to identify a set of actors by some property they share (e.g. 'admitting officers')."
                                }
                            },
                            "action": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Actions controlled by this Rule."
                                }
                            },
                            "securityLabel": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "A security label, comprised of 0..* security label fields (Privacy tags), which define which resources are controlled by this exception."
                                }
                            },
                            "purpose": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "The context of the activities a user is taking - why the user is accessing the data - that are controlled by this rule."
                                }
                            },
                            "class": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "The class of information covered by this rule. The type can be a FHIR resource type, a profile on a type, or a CDA document, or some other type that indicates what sort of information the consent relates to."
                                }
                            },
                            "code": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "If this code is found in an instance, then the rule applies."
                                }
                            },
                            "dataPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Clinical or Operational Relevant period of time that bounds the data controlled by this rule."
                            },
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Data",
                                    "description": "The resources controlled by this rule if specific resources are referenced."
                                }
                            },
                            "provision": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Provision",
                                    "description": "Rules which provide exceptions to the base rule or subrules."
                                }
                            }
                        }
                    }
                ]
            },
            "Actor": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "actorId": {
                                "$ref": "#/components/schemas/String",
                                "description": "ID or acronym of actor."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "person",
                                    "entity"
                                ],
                                "description": "The type of actor - person or system."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the actor as shown in the page."
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "The description of the actor."
                            }
                        }
                    }
                ],
                "required": [
                    "actorId",
                    "type"
                ]
            },
            "Data": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "meaning": {
                                "type": "string",
                                "enum": [
                                    "instance",
                                    "related",
                                    "dependents",
                                    "authoredby"
                                ],
                                "description": "How the resource reference is interpreted when testing consent restrictions."
                            },
                            "reference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a specific resource that defines which resources are covered by this consent."
                            }
                        }
                    }
                ],
                "required": [
                    "meaning",
                    "reference"
                ]
            },
            "Verification": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "verified": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Has the instruction been verified."
                            },
                            "verifiedWith": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Who verified the instruction (Patient, Relative or other Authorized Person)."
                            },
                            "verificationDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date verification was collected."
                            }
                        }
                    }
                ],
                "required": [
                    "verified"
                ]
            },
            "ContentDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Precusory content structure and use, i.e., a boilerplate, template, application for a contract such as an insurance policy or benefits under a program, e.g., workers compensation."
                            },
                            "subType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Detailed Precusory content type."
                            },
                            "publisher": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The  individual or organization that published the Contract precursor content."
                            },
                            "publicationDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date (and optionally time) when the contract was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the contract changes."
                            },
                            "publicationStatus": {
                                "type": "string",
                                "enum": [
                                    "amended",
                                    "appended",
                                    "cancelled",
                                    "disputed",
                                    "entered-in-error",
                                    "executable",
                                    "executed",
                                    "negotiable",
                                    "offered",
                                    "policy",
                                    "rejected",
                                    "renewed",
                                    "revoked",
                                    "resolved",
                                    "terminated"
                                ],
                                "description": "draft | active | retired | unknown."
                            },
                            "copyright": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A copyright statement relating to Contract precursor content. Copyright statements are generally legal restrictions on the use and publishing of the Contract precursor content."
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "publicationStatus"
                ]
            },
            "Friendly": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contentAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability."
                            },
                            "contentReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability."
                            }
                        }
                    }
                ]
            },
            "Legal": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contentAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "Contract legal text in human renderable form."
                            },
                            "contentReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Contract legal text in human renderable form."
                            }
                        }
                    }
                ]
            },
            "Rule": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Name of the rule for internal references."
                            },
                            "source": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Source",
                                    "description": "Source inputs to the mapping."
                                }
                            },
                            "target": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Target",
                                    "description": "Content to create because of this mapping rule."
                                }
                            },
                            "rule": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Rule",
                                    "description": "Rules contained in this rule."
                                }
                            },
                            "dependent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dependent",
                                    "description": "Which other rules to apply in the context of this rule."
                                }
                            },
                            "documentation": {
                                "$ref": "#/components/schemas/String",
                                "description": "Documentation for this instance of data."
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "source"
                ]
            },
            "Signer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Role of this Contract signer, e.g. notary, grantee."
                            },
                            "party": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Party which is a signator to this Contract."
                            },
                            "signature": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Signature",
                                    "description": "Legally binding Contract DSIG signature contents in Base64."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "party",
                    "signature"
                ]
            },
            "Term": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Unique identifier for this particular Contract Provision."
                            },
                            "issued": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When this Contract Provision was issued."
                            },
                            "applies": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Relevant time or time-period when this Contract Provision is applicable."
                            },
                            "topicCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The entity that the term applies to."
                            },
                            "topicReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The entity that the term applies to."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A legal clause or condition contained within a contract that requires one or both parties to perform a particular requirement by some specified time or prevents one or both parties from performing a particular requirement by some specified time."
                            },
                            "subType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A specialized legal clause or condition based on overarching contract type."
                            },
                            "text": {
                                "$ref": "#/components/schemas/String",
                                "description": "Statement of a provision in a policy or a contract."
                            },
                            "securityLabel": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SecurityLabel",
                                    "description": "Security labels that protect the handling of information about the term and its elements, which may be specifically identified.."
                                }
                            },
                            "offer": {
                                "$ref": "#/components/schemas/Offer",
                                "description": "The matter of concern in the context of this provision of the agrement."
                            },
                            "asset": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Asset",
                                    "description": "Contract Term Asset List."
                                }
                            },
                            "action": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Action",
                                    "description": "An actor taking a role in an activity for which it can be assigned some degree of responsibility for the activity taking place."
                                }
                            },
                            "group": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Term",
                                    "description": "Nested group of Contract Provisions."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "offer"
                ]
            },
            "Action": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "operation": {
                                "$ref": "#/components/schemas/Operation",
                                "description": "The operation to perform."
                            },
                            "assert": {
                                "$ref": "#/components/schemas/Assert",
                                "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately."
                            }
                        }
                    }
                ]
            },
            "Subject": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "reference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The entity the action is performed or not performed on or for."
                                }
                            },
                            "role": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Role type of agent assigned roles in this Contract."
                            }
                        }
                    }
                ],
                "required": [
                    "reference"
                ]
            },
            "Asset": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "scope": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Differentiates the kind of the asset ."
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Target entity type about which the term may be concerned."
                                }
                            },
                            "typeReference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Associated entities."
                                }
                            },
                            "subtype": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "May be a subtype or part of an offered asset."
                                }
                            },
                            "relationship": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Specifies the applicability of the term to an asset resource instance, and instances it refers to orinstances that refer to it, and/or are owned by the offeree."
                            },
                            "context": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Context",
                                    "description": "Circumstance of the asset."
                                }
                            },
                            "condition": {
                                "$ref": "#/components/schemas/String",
                                "description": "Description of the quality and completeness of the asset that imay be a factor in its valuation."
                            },
                            "periodType": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Type of Asset availability for use or ownership."
                                }
                            },
                            "period": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Period",
                                    "description": "Asset relevant contractual time period."
                                }
                            },
                            "usePeriod": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Period",
                                    "description": "Time period of asset use."
                                }
                            },
                            "text": {
                                "$ref": "#/components/schemas/String",
                                "description": "Clause or question text (Prose Object) concerning the asset in a linked form, such as a QuestionnaireResponse used in the formation of the contract."
                            },
                            "linkId": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Id [identifier??] of the clause or question text about the asset in the referenced form or QuestionnaireResponse."
                                }
                            },
                            "answer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Answer",
                                    "description": "Response to assets."
                                }
                            },
                            "securityLabelNumber": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UnsignedInt",
                                    "description": "Security labels that protects the asset."
                                }
                            },
                            "valuedItem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValuedItem",
                                    "description": "Contract Valued Item List."
                                }
                            }
                        }
                    }
                ]
            },
            "Context": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "fhirpath",
                                    "element",
                                    "extension"
                                ],
                                "description": "Defines how to interpret the expression that defines what the context of the extension is."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/String",
                                "description": "An expression that defines where an extension can be used in resources."
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "expression"
                ]
            },
            "ValuedItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "entityCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specific type of Contract Valued Item that may be priced."
                            },
                            "entityReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Specific type of Contract Valued Item that may be priced."
                            },
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Identifies a Contract Valued Item instance."
                            },
                            "effectiveTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Indicates the time during which this Contract ValuedItem information is effective."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "Specifies the units by which the Contract Valued Item is measured or counted, and quantifies the countable or measurable Contract Valued Item instances."
                            },
                            "unitPrice": {
                                "$ref": "#/components/schemas/Money",
                                "description": "A Contract Valued Item unit valuation measure."
                            },
                            "factor": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "A real number that represents a multiplier used in determining the overall value of the Contract Valued Item delivered. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount."
                            },
                            "points": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "An amount that expresses the weighting (based on difficulty, cost and/or resource intensiveness) associated with the Contract Valued Item delivered. The concept of Points allows for assignment of point values for a Contract Valued Item, such that a monetary amount can be assigned to each point."
                            },
                            "net": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Expresses the product of the Contract Valued Item unitQuantity and the unitPriceAmt. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied."
                            },
                            "payment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Terms of valuation."
                            },
                            "paymentDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When payment is due."
                            },
                            "responsible": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Who will make payment."
                            },
                            "recipient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Who will receive payment."
                            },
                            "linkId": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Id  of the clause or question text related to the context of this valuedItem in the referenced form or QuestionnaireResponse."
                                }
                            },
                            "securityLabelNumber": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UnsignedInt",
                                    "description": "A set of security labels that define which terms are controlled by this condition."
                                }
                            }
                        }
                    }
                ]
            },
            "Offer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Unique identifier for this particular Contract Provision."
                                }
                            },
                            "party": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Party",
                                    "description": "Offer Recipient."
                                }
                            },
                            "topic": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The owner of an asset has the residual control rights over the asset: the right to decide all usages of the asset in any way not inconsistent with a prior contract, custom, or law (Hart, 1995, p. 30)."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of Contract Provision such as specific requirements, purposes for actions, obligations, prohibitions, e.g. life time maximum benefit."
                            },
                            "decision": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of choice made by accepting party with respect to an offer made by an offeror/ grantee."
                            },
                            "decisionMode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "How the decision about a Contract was conveyed."
                                }
                            },
                            "answer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Answer",
                                    "description": "Response to offer text."
                                }
                            },
                            "text": {
                                "$ref": "#/components/schemas/String",
                                "description": "Human readable form of this Contract Offer."
                            },
                            "linkId": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "The id of the clause or question text of the offer in the referenced questionnaire/response."
                                }
                            },
                            "securityLabelNumber": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UnsignedInt",
                                    "description": "Security labels that protects the offer."
                                }
                            }
                        }
                    }
                ]
            },
            "Answer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "valueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The answer (or one of the answers) provided by the respondent to the question."
                            },
                            "item": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Item",
                                    "description": "Nested groups and/or questions found within this particular answer."
                                }
                            }
                        }
                    }
                ]
            },
            "Party": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "reference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Participant in the offer."
                                }
                            },
                            "role": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "How the party participates in the offer."
                            }
                        }
                    }
                ],
                "required": [
                    "reference",
                    "role"
                ]
            },
            "SecurityLabel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "number": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UnsignedInt",
                                    "description": "Number used to link this term or term element to the applicable Security Label."
                                }
                            },
                            "classification": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Security label privacy tag that species the level of confidentiality protection required for this term and/or term elements."
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "Security label privacy tag that species the applicable privacy and security policies governing this term and/or term elements."
                                }
                            },
                            "control": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "Security label privacy tag that species the manner in which term and/or term elements are to be protected."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "classification"
                ]
            },
            "Class": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan."
                            },
                            "value": {
                                "$ref": "#/components/schemas/String",
                                "description": "The alphanumeric string value associated with the insurer issued label."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short description for the class."
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "value"
                ]
            },
            "CostToBeneficiary": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The category of patient centric costs associated with treatment."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The amount due from the patient for the cost category."
                            },
                            "valueMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The amount due from the patient for the cost category."
                            },
                            "exception": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Exception",
                                    "description": "A suite of codes indicating exceptions or reductions to patient costs and their effective periods."
                                }
                            }
                        }
                    }
                ]
            },
            "Exception": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The code for the specific exception."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The timeframe during when the exception is in force."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Benefit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of benefit (primary care; speciality care; inpatient; outpatient)."
                            },
                            "cost": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Cost",
                                    "description": "List of the costs associated with a specific benefit."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Mitigation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "action": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Describes the action that was taken or the observation that was made that reduces/eliminates the risk associated with the identified issue."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Indicates when the mitigating action was documented."
                            },
                            "author": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the practitioner who determined the mitigation and takes responsibility for the mitigation step occurring."
                            }
                        }
                    }
                ],
                "required": [
                    "action"
                ]
            },
            "DeviceName": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the device."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "udi-label-name",
                                    "user-friendly-name",
                                    "patient-reported-name",
                                    "manufacturer-name",
                                    "model-name",
                                    "other"
                                ],
                                "description": "The type of deviceName.\nUDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName."
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "type"
                ]
            },
            "Specialization": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "systemType": {
                                "$ref": "#/components/schemas/String",
                                "description": "The standard that is used to operate and communicate."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The version of the standard that is used to operate and communicate."
                            }
                        }
                    }
                ],
                "required": [
                    "systemType"
                ]
            },
            "UdiCarrier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceIdentifier": {
                                "$ref": "#/components/schemas/String",
                                "description": "The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device."
                            },
                            "issuer": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Organization that is charged with issuing UDIs for devices.  For example, the US FDA issuers include :\n1) GS1: \nhttp://hl7.org/fhir/NamingSystem/gs1-di, \n2) HIBCC:\nhttp://hl7.org/fhir/NamingSystem/hibcc-dI, \n3) ICCBBA for blood containers:\nhttp://hl7.org/fhir/NamingSystem/iccbba-blood-di, \n4) ICCBA for other devices:\nhttp://hl7.org/fhir/NamingSystem/iccbba-other-di."
                            },
                            "jurisdiction": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The identity of the authoritative source for UDI generation within a  jurisdiction.  All UDIs are globally unique within a single namespace with the appropriate repository uri as the system.  For example,  UDIs of devices managed in the U.S. by the FDA, the value is  http://hl7.org/fhir/NamingSystem/fda-udi."
                            },
                            "carrierAIDC": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID.   Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded."
                            },
                            "carrierHRF": {
                                "$ref": "#/components/schemas/String",
                                "description": "The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device."
                            },
                            "entryType": {
                                "type": "string",
                                "enum": [
                                    "barcode",
                                    "rfid",
                                    "manual",
                                    "card",
                                    "self-reported",
                                    "unknown"
                                ],
                                "description": "A coded entry to indicate how the data was entered."
                            }
                        }
                    }
                ]
            },
            "Version": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/String",
                                "description": "For version-less code systems, there should be a single version with no identifier."
                            },
                            "isDefault": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If this is the default version for this code system."
                            },
                            "compositional": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If the compositional grammar defined by the code system is supported."
                            },
                            "language": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Code",
                                    "description": "Language Displays supported."
                                }
                            },
                            "filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Filter",
                                    "description": "Filter Properties supported."
                                }
                            },
                            "property": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Code",
                                    "description": "Properties supported for $lookup."
                                }
                            }
                        }
                    }
                ]
            },
            "Capability": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "required": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether or not the test execution will require the given capabilities of the server in order for this test script to execute."
                            },
                            "validated": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether or not the test execution will validate the given capabilities of the server in order for this test script to execute."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Description of the capabilities that this test script is requiring the server to support."
                            },
                            "origin": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Integer",
                                    "description": "Which origin server these requirements apply to."
                                }
                            },
                            "destination": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Which server these requirements apply to."
                            },
                            "link": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Uri",
                                    "description": "Links to the FHIR specification that describes this interaction and the resources involved in more detail."
                                }
                            },
                            "capabilities": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Minimum capabilities required of server for test script to execute successfully.   If server does not meet at a minimum the referenced capability statement, then all tests in this script are skipped."
                            }
                        }
                    }
                ],
                "required": [
                    "required",
                    "validated",
                    "capabilities"
                ]
            },
            "Material": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "substance": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The substance."
                            },
                            "alternate": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates an alternative material of the device."
                            },
                            "allergenicIndicator": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether the substance is a known or suspected allergen."
                            }
                        }
                    }
                ],
                "required": [
                    "substance"
                ]
            },
            "UdiDeviceIdentifier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceIdentifier": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier that is to be associated with every Device that references this DeviceDefintiion for the issuer and jurisdication porvided in the DeviceDefinition.udiDeviceIdentifier."
                            },
                            "issuer": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The organization that assigns the identifier algorithm."
                            },
                            "jurisdiction": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The jurisdiction to which the deviceIdentifier applies."
                            }
                        }
                    }
                ],
                "required": [
                    "deviceIdentifier",
                    "issuer",
                    "jurisdiction"
                ]
            },
            "Calibration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "unspecified",
                                    "offset",
                                    "gain",
                                    "two-point"
                                ],
                                "description": "Describes the type of the calibration method."
                            },
                            "state": {
                                "type": "string",
                                "enum": [
                                    "not-calibrated",
                                    "calibration-required",
                                    "calibrated",
                                    "unspecified"
                                ],
                                "description": "Describes the state of the calibration."
                            },
                            "time": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "Describes the time last calibration has been performed."
                            }
                        }
                    }
                ]
            },
            "Parameter": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Name of the input parameter to the $expand operation; may be a server-assigned name for additional default or other server-supplied parameters used to control the expansion process."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The value of the parameter."
                            },
                            "valueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "The value of the parameter."
                            },
                            "valueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The value of the parameter."
                            },
                            "valueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The value of the parameter."
                            },
                            "valueUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The value of the parameter."
                            },
                            "valueCode": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The value of the parameter."
                            },
                            "valueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The value of the parameter."
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "Content": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The document or URL of the document along with critical metadata to prove content has integrity."
                            },
                            "format": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "An identifier of the document encoding, structure, and template that the document conforms to beyond the base format indicated in the mimeType."
                            }
                        }
                    }
                ],
                "required": [
                    "attachment"
                ]
            },
            "Certainty": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "rating": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A rating of the certainty of the effect estimate."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "A human-readable string to clarify or explain concepts about the resource."
                                }
                            },
                            "certaintySubcomponent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CertaintySubcomponent",
                                    "description": "A description of a component of the overall certainty."
                                }
                            }
                        }
                    }
                ]
            },
            "CertaintySubcomponent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of subcomponent of certainty rating."
                            },
                            "rating": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A rating of a subcomponent of rating certainty."
                                }
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "A human-readable string to clarify or explain concepts about the resource."
                                }
                            }
                        }
                    }
                ]
            },
            "EffectEstimate": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Human-readable summary of effect estimate."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Examples include relative risk and mean difference."
                            },
                            "variantState": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Used to define variant exposure states such as low-risk state."
                            },
                            "value": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The point estimate of the effect estimate."
                            },
                            "unitOfMeasure": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specifies the UCUM unit for the outcome."
                            },
                            "precisionEstimate": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PrecisionEstimate",
                                    "description": "A description of the precision of the estimate for the effect."
                                }
                            }
                        }
                    }
                ]
            },
            "PrecisionEstimate": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Examples include confidence interval and interquartile range."
                            },
                            "level": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Use 95 for a 95% confidence interval."
                            },
                            "from": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Lower bound of confidence interval."
                            },
                            "to": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Upper bound of confidence interval."
                            }
                        }
                    }
                ]
            },
            "ResultsByExposure": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Human-readable summary of results by exposure state."
                            },
                            "exposureState": {
                                "type": "string",
                                "enum": [
                                    "exposure",
                                    "exposure-alternative"
                                ],
                                "description": "Whether these results are for the exposure state or alternative exposure state."
                            },
                            "variantState": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Used to define variant exposure states such as low-risk state."
                            },
                            "riskEvidenceSynthesis": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to a RiskEvidenceSynthesis resource."
                            }
                        }
                    }
                ],
                "required": [
                    "riskEvidenceSynthesis"
                ]
            },
            "SampleSize": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Human-readable summary of sample size."
                            },
                            "numberOfStudies": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Number of studies included in this evidence synthesis."
                            },
                            "numberOfParticipants": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Number of participants included in this evidence synthesis."
                            }
                        }
                    }
                ]
            },
            "ClassHistory": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "class": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "inpatient | outpatient | ambulatory | emergency +."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The time that the episode was in the specified class."
                            }
                        }
                    }
                ],
                "required": [
                    "class",
                    "period"
                ]
            },
            "Hospitalization": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "preAdmissionIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Pre-admission identifier."
                            },
                            "origin": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The location/organization from which the patient came before admission."
                            },
                            "admitSource": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "From where patient was admitted (physician referral, transfer)."
                            },
                            "reAdmission": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Whether this hospitalization is a readmission and why if known."
                            },
                            "dietPreference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Diet preferences reported by the patient."
                                }
                            },
                            "specialCourtesy": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Special courtesies (VIP, board member)."
                                }
                            },
                            "specialArrangement": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Any special requests that have been made for this hospitalization encounter, such as the provision of specific equipment or other things."
                                }
                            },
                            "destination": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Location/organization to which the patient is discharged."
                            },
                            "dischargeDisposition": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Category or kind of location after discharge."
                            }
                        }
                    }
                ]
            },
            "StatusHistory": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": [
                                    "planned",
                                    "waitlist",
                                    "active",
                                    "onhold",
                                    "finished",
                                    "cancelled",
                                    "entered-in-error"
                                ],
                                "description": "planned | waitlist | active | onhold | finished | cancelled."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during this EpisodeOfCare that the specific status applied."
                            }
                        }
                    }
                ],
                "required": [
                    "status",
                    "period"
                ]
            },
            "Characteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "definitionCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year)."
                            },
                            "definitionCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year)."
                            },
                            "definitionExpression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year)."
                            },
                            "definitionDataRequirement": {
                                "$ref": "#/components/schemas/DataRequirement",
                                "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year)."
                            },
                            "usageContext": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageContext",
                                    "description": "Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings."
                                }
                            },
                            "exclude": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "When true, members with this characteristic are excluded from the element."
                            },
                            "unitOfMeasure": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specifies the UCUM unit for the outcome."
                            },
                            "studyEffectiveDescription": {
                                "$ref": "#/components/schemas/String",
                                "description": "A narrative description of the time period the study covers."
                            },
                            "studyEffectiveDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Indicates what effective period the study covers."
                            },
                            "studyEffectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Indicates what effective period the study covers."
                            },
                            "studyEffectiveDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Indicates what effective period the study covers."
                            },
                            "studyEffectiveTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "Indicates what effective period the study covers."
                            },
                            "studyEffectiveTimeFromStart": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Indicates duration from the study initiation."
                            },
                            "studyEffectiveGroupMeasure": {
                                "type": "string",
                                "enum": [
                                    "mean",
                                    "median",
                                    "mean-of-mean",
                                    "mean-of-median",
                                    "median-of-mean",
                                    "median-of-median"
                                ],
                                "description": "Indicates how elements are aggregated within the study effective period."
                            },
                            "participantEffectiveDescription": {
                                "$ref": "#/components/schemas/String",
                                "description": "A narrative description of the time period the study covers."
                            },
                            "participantEffectiveDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Indicates what effective period the study covers."
                            },
                            "participantEffectivePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Indicates what effective period the study covers."
                            },
                            "participantEffectiveDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Indicates what effective period the study covers."
                            },
                            "participantEffectiveTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "Indicates what effective period the study covers."
                            },
                            "participantEffectiveTimeFromStart": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Indicates duration from the participant's study entry."
                            },
                            "participantEffectiveGroupMeasure": {
                                "type": "string",
                                "enum": [
                                    "mean",
                                    "median",
                                    "mean-of-mean",
                                    "mean-of-median",
                                    "median-of-mean",
                                    "median-of-median"
                                ],
                                "description": "Indicates how elements are aggregated within the study effective period."
                            }
                        }
                    }
                ]
            },
            "Instance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Identifier associated with the package/container (usually a label affixed directly)."
                            },
                            "expiry": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When the substance is no longer valid to use. For some substances, a single arbitrary date is used for expiry."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The amount of the substance."
                            }
                        }
                    }
                ]
            },
            "ContainedInstance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "resourceId": {
                                "$ref": "#/components/schemas/String",
                                "description": "Each resource contained in the instance."
                            },
                            "versionId": {
                                "$ref": "#/components/schemas/String",
                                "description": "A specific version of a resource contained in the instance."
                            }
                        }
                    }
                ],
                "required": [
                    "resourceId"
                ]
            },
            "Process": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "The diagram title of the group of operations."
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A longer description of the group of operations."
                            },
                            "preConditions": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Description of initial status before the process starts."
                            },
                            "postConditions": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Description of final status after the process ends."
                            },
                            "step": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Step",
                                    "description": "Each step of the process."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "title"
                ]
            },
            "Step": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "process": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Process",
                                    "description": "Nested process."
                                }
                            },
                            "pause": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If there is a pause in the flow."
                            },
                            "operation": {
                                "$ref": "#/components/schemas/Operation",
                                "description": "Each interaction or action."
                            },
                            "alternative": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Alternative",
                                    "description": "Indicates an alternative step that can be taken instead of the operations on the base step in exceptional/atypical circumstances."
                                }
                            }
                        }
                    }
                ]
            },
            "Alternative": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "The label to display for the alternative that gives a sense of the circumstance in which the alternative should be invoked."
                            },
                            "description": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "A human-readable description of the alternative explaining when the alternative should occur rather than the base step."
                            },
                            "step": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Step",
                                    "description": "What happens in each alternative option."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "title"
                ]
            },
            "BenefitBalance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Code to identify the general type of benefits under which products and services are provided."
                            },
                            "excluded": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short name or tag for the benefit."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A richer description of the benefit or services covered."
                            },
                            "network": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers."
                            },
                            "unit": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates if the benefits apply to an individual or to the family."
                            },
                            "term": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'."
                            },
                            "financial": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Financial",
                                    "description": "Benefits Used to date."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "category"
                ]
            },
            "Financial": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Classification of benefit being provided."
                            },
                            "allowedUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The quantity of the benefit which is permitted under the coverage."
                            },
                            "allowedString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The quantity of the benefit which is permitted under the coverage."
                            },
                            "allowedMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The quantity of the benefit which is permitted under the coverage."
                            },
                            "usedUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The quantity of the benefit which have been consumed to date."
                            },
                            "usedMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The quantity of the benefit which have been consumed to date."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Compartment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "use": {
                                "type": "string",
                                "enum": [
                                    "condition",
                                    "requirement"
                                ],
                                "description": "Defines how the compartment rule is used - whether it it is used to test whether resources are subject to the rule, or whether it is a rule that must be followed."
                            },
                            "code": {
                                "type": "string",
                                "enum": [
                                    "Patient",
                                    "Encounter",
                                    "RelatedPerson",
                                    "Practitioner",
                                    "Device"
                                ],
                                "description": "Identifies the compartment."
                            },
                            "rule": {
                                "type": "string",
                                "enum": [
                                    "identical",
                                    "matching",
                                    "different",
                                    "custom"
                                ],
                                "description": "identical | matching | different | no-rule | custom."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/String",
                                "description": "Custom rule, as a FHIRPath expression."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Documentation for FHIRPath expression."
                            }
                        }
                    }
                ],
                "required": [
                    "use",
                    "code",
                    "rule"
                ]
            },
            "Member": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "entity": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to the entity that is a member of the group. Must be consistent with Group.type. If the entity is another group, then the type must be the same."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period that the member was in the group, if known."
                            },
                            "inactive": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A flag to indicate that the member is no longer in the group, but previously may have been a member."
                            }
                        }
                    }
                ],
                "required": [
                    "entity"
                ]
            },
            "AvailableTime": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "daysOfWeek": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "mon",
                                        "tue",
                                        "wed",
                                        "thu",
                                        "fri",
                                        "sat",
                                        "sun"
                                    ],
                                    "description": "Indicates which days of the week are available between the start and end Times."
                                }
                            },
                            "allDay": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Is this always available? (hence times are irrelevant) e.g. 24 hour service."
                            },
                            "availableStartTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The opening time of day. Note: If the AllDay flag is set, then this time is ignored."
                            },
                            "availableEndTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The closing time of day. Note: If the AllDay flag is set, then this time is ignored."
                            }
                        }
                    }
                ]
            },
            "Eligibility": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Coded value for the eligibility."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Describes the eligibility conditions for the service."
                            }
                        }
                    }
                ]
            },
            "NotAvailable": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "The reason that can be presented to the user as to why this time is not available."
                            },
                            "during": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Service is not available (seasonally or for a public holiday) from this date."
                            }
                        }
                    }
                ],
                "required": [
                    "description"
                ]
            },
            "Series": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The DICOM Series Instance UID for the series."
                            },
                            "number": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The numeric identifier of this series in the study."
                            },
                            "modality": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The modality of this series sequence."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A description of the series."
                            },
                            "numberOfInstances": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "Number of SOP Instances in the Study. The value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present."
                            },
                            "endpoint": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The network service providing access (e.g., query, view, or retrieval) for this series. See implementation notes for information about using DICOM endpoints. A series-level endpoint, if present, has precedence over a study-level endpoint with the same Endpoint.connectionType."
                                }
                            },
                            "bodySite": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The anatomic structures examined. See DICOM Part 16 Annex L (http://dicom.nema.org/medical/dicom/current/output/chtml/part16/chapter_L.html) for DICOM to SNOMED-CT mappings. The bodySite may indicate the laterality of body part imaged; if so, it shall be consistent with any content of ImagingStudy.series.laterality."
                            },
                            "laterality": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The laterality of the (possibly paired) anatomic structures examined. E.g., the left knee, both lungs, or unpaired abdomen. If present, shall be consistent with any laterality information indicated in ImagingStudy.series.bodySite."
                            },
                            "specimen": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The specimen imaged, e.g., for whole slide imaging of a biopsy."
                                }
                            },
                            "started": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date and time the series was started."
                            },
                            "performer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Performer",
                                    "description": "Indicates who or what performed the series and how they were involved."
                                }
                            },
                            "instance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Instance",
                                    "description": "A single SOP instance within the series, e.g. an image, or presentation state."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "uid",
                    "modality"
                ]
            },
            "Education": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "documentType": {
                                "$ref": "#/components/schemas/String",
                                "description": "Identifier of the material presented to the patient."
                            },
                            "reference": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "Reference pointer to the educational material given to the patient if the information was on line."
                            },
                            "publicationDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date the educational material was published."
                            },
                            "presentationDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date the educational material was given to the patient."
                            }
                        }
                    }
                ]
            },
            "ProtocolApplied": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "series": {
                                "$ref": "#/components/schemas/String",
                                "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority."
                            },
                            "authority": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Indicates the authority who published the protocol (e.g. ACIP) that is being followed."
                            },
                            "targetDisease": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The vaccine preventable disease the dose is being administered against."
                                }
                            },
                            "doseNumberPositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Nominal position in a series."
                            },
                            "doseNumberString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Nominal position in a series."
                            },
                            "seriesDosesPositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "The recommended number of doses to achieve immunity."
                            },
                            "seriesDosesString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The recommended number of doses to achieve immunity."
                            }
                        }
                    }
                ]
            },
            "Recommendation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vaccineCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Vaccine(s) or vaccine group that pertain to the recommendation."
                                }
                            },
                            "targetDisease": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The targeted disease for the recommendation."
                            },
                            "contraindicatedVaccineCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Vaccine(s) which should not be used to fulfill the recommendation."
                                }
                            },
                            "forecastStatus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the patient status with respect to the path to immunity for the target disease."
                            },
                            "forecastReason": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The reason for the assigned forecast status."
                                }
                            },
                            "dateCriterion": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DateCriterion",
                                    "description": "Vaccine date recommendations.  For example, earliest date to administer, latest date to administer, etc."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Contains the description about the protocol under which the vaccine was administered."
                            },
                            "series": {
                                "$ref": "#/components/schemas/String",
                                "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority."
                            },
                            "doseNumberPositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose)."
                            },
                            "doseNumberString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose)."
                            },
                            "seriesDosesPositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "The recommended number of doses to achieve immunity."
                            },
                            "seriesDosesString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The recommended number of doses to achieve immunity."
                            },
                            "supportingImmunization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Immunization event history and/or evaluation that supports the status and recommendation."
                                }
                            },
                            "supportingPatientInformation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Patient Information that supports the status and recommendation.  This includes patient observations, adverse reactions and allergy/intolerance information."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "forecastStatus"
                ]
            },
            "DateCriterion": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Date classification of recommendation.  For example, earliest date to give, latest date to give, etc."
                            },
                            "value": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The date whose meaning is specified by dateCriterion.code."
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "value"
                ]
            },
            "Definition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "grouping": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Grouping",
                                    "description": "A logical group of resources. Logical groups can be used when building pages."
                                }
                            },
                            "resource": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Resource",
                                    "description": "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource."
                                }
                            },
                            "page": {
                                "$ref": "#/components/schemas/Page",
                                "description": "A page / section in the implementation guide. The root page is the implementation guide home page."
                            },
                            "parameter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Parameter",
                                    "description": "Defines how IG is built by tools."
                                }
                            },
                            "template": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Template",
                                    "description": "A template for building resources."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "resource"
                ]
            },
            "Grouping": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "The human-readable title to display for the package of resources when rendering the implementation guide."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Human readable text describing the package."
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "Page": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Relative path to the page."
                            },
                            "title": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short title used to represent this page in navigational structures such as table of contents, bread crumbs, etc."
                            },
                            "anchor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "The name of an anchor available on the page."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "Template": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/Code",
                                "description": "Type of template specified."
                            },
                            "source": {
                                "$ref": "#/components/schemas/String",
                                "description": "The source location for the template."
                            },
                            "scope": {
                                "$ref": "#/components/schemas/String",
                                "description": "The scope in which the template applies."
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "source"
                ]
            },
            "Global": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "Account",
                                    "ActivityDefinition",
                                    "AdverseEvent",
                                    "AllergyIntolerance",
                                    "Appointment",
                                    "AppointmentResponse",
                                    "AuditEvent",
                                    "Basic",
                                    "Binary",
                                    "BiologicallyDerivedProduct",
                                    "BodyStructure",
                                    "Bundle",
                                    "CapabilityStatement",
                                    "CarePlan",
                                    "CareTeam",
                                    "CatalogEntry",
                                    "ChargeItem",
                                    "ChargeItemDefinition",
                                    "Claim",
                                    "ClaimResponse",
                                    "ClinicalImpression",
                                    "CodeSystem",
                                    "Communication",
                                    "CommunicationRequest",
                                    "CompartmentDefinition",
                                    "Composition",
                                    "ConceptMap",
                                    "Condition",
                                    "Consent",
                                    "Contract",
                                    "Coverage",
                                    "CoverageEligibilityRequest",
                                    "CoverageEligibilityResponse",
                                    "DetectedIssue",
                                    "Device",
                                    "DeviceDefinition",
                                    "DeviceMetric",
                                    "DeviceRequest",
                                    "DeviceUseStatement",
                                    "DiagnosticReport",
                                    "DocumentManifest",
                                    "DocumentReference",
                                    "DomainResource",
                                    "EffectEvidenceSynthesis",
                                    "Encounter",
                                    "Endpoint",
                                    "EnrollmentRequest",
                                    "EnrollmentResponse",
                                    "EpisodeOfCare",
                                    "EventDefinition",
                                    "Evidence",
                                    "EvidenceVariable",
                                    "ExampleScenario",
                                    "ExplanationOfBenefit",
                                    "FamilyMemberHistory",
                                    "Flag",
                                    "Goal",
                                    "GraphDefinition",
                                    "Group",
                                    "GuidanceResponse",
                                    "HealthcareService",
                                    "ImagingStudy",
                                    "Immunization",
                                    "ImmunizationEvaluation",
                                    "ImmunizationRecommendation",
                                    "ImplementationGuide",
                                    "InsurancePlan",
                                    "Invoice",
                                    "Library",
                                    "Linkage",
                                    "List",
                                    "Location",
                                    "Measure",
                                    "MeasureReport",
                                    "Media",
                                    "Medication",
                                    "MedicationAdministration",
                                    "MedicationDispense",
                                    "MedicationKnowledge",
                                    "MedicationRequest",
                                    "MedicationStatement",
                                    "MedicinalProduct",
                                    "MedicinalProductAuthorization",
                                    "MedicinalProductContraindication",
                                    "MedicinalProductIndication",
                                    "MedicinalProductIngredient",
                                    "MedicinalProductInteraction",
                                    "MedicinalProductManufactured",
                                    "MedicinalProductPackaged",
                                    "MedicinalProductPharmaceutical",
                                    "MedicinalProductUndesirableEffect",
                                    "MessageDefinition",
                                    "MessageHeader",
                                    "MolecularSequence",
                                    "NamingSystem",
                                    "NutritionOrder",
                                    "Observation",
                                    "ObservationDefinition",
                                    "OperationDefinition",
                                    "OperationOutcome",
                                    "Organization",
                                    "OrganizationAffiliation",
                                    "Parameters",
                                    "Patient",
                                    "PaymentNotice",
                                    "PaymentReconciliation",
                                    "Person",
                                    "PlanDefinition",
                                    "Practitioner",
                                    "PractitionerRole",
                                    "Procedure",
                                    "Provenance",
                                    "Questionnaire",
                                    "QuestionnaireResponse",
                                    "RelatedPerson",
                                    "RequestGroup",
                                    "ResearchDefinition",
                                    "ResearchElementDefinition",
                                    "ResearchStudy",
                                    "ResearchSubject",
                                    "Resource",
                                    "RiskAssessment",
                                    "RiskEvidenceSynthesis",
                                    "Schedule",
                                    "SearchParameter",
                                    "ServiceRequest",
                                    "Slot",
                                    "Specimen",
                                    "SpecimenDefinition",
                                    "StructureDefinition",
                                    "StructureMap",
                                    "Subscription",
                                    "Substance",
                                    "SubstanceNucleicAcid",
                                    "SubstancePolymer",
                                    "SubstanceProtein",
                                    "SubstanceReferenceInformation",
                                    "SubstanceSourceMaterial",
                                    "SubstanceSpecification",
                                    "SupplyDelivery",
                                    "SupplyRequest",
                                    "Task",
                                    "TerminologyCapabilities",
                                    "TestReport",
                                    "TestScript",
                                    "ValueSet",
                                    "VerificationResult",
                                    "VisionPrescription"
                                ],
                                "description": "The type of resource that all instances must conform to."
                            },
                            "profile": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "A reference to the profile that all instances must conform to."
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "profile"
                ]
            },
            "Manifest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "rendering": {
                                "$ref": "#/components/schemas/Url",
                                "description": "A pointer to official web page, PDF or other rendering of the implementation guide."
                            },
                            "resource": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Resource",
                                    "description": "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource."
                                }
                            },
                            "page": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Page",
                                    "description": "Information about a page within the IG."
                                }
                            },
                            "image": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Indicates a relative path to an image that exists within the IG."
                                }
                            },
                            "other": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Indicates the relative path of an additional non-page, non-image file that is part of the IG - e.g. zip, jar and similar files that could be the target of a hyperlink in a derived IG."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "resource"
                ]
            },
            "Contact": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "relationship": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The nature of the relationship between the patient and the contact person."
                                }
                            },
                            "name": {
                                "$ref": "#/components/schemas/HumanName",
                                "description": "A name associated with the contact person."
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "A contact detail for the person, e.g. a telephone number or an email address."
                                }
                            },
                            "address": {
                                "$ref": "#/components/schemas/Address",
                                "description": "Address for the contact person."
                            },
                            "gender": {
                                "type": "string",
                                "enum": [
                                    "male",
                                    "female",
                                    "other",
                                    "unknown"
                                ],
                                "description": "Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes."
                            },
                            "organization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Organization on behalf of which the contact is acting or for which the contact is working."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period during which this contact person or organization is valid to be contacted relating to this patient."
                            }
                        }
                    }
                ]
            },
            "Limit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The maximum amount of a service item a plan will pay for a covered benefit.  For examples. wellness visits, or eyeglasses."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The specific limit on the benefit."
                            }
                        }
                    }
                ]
            },
            "Plan": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Business identifiers assigned to this health insurance plan which remain constant as the resource is updated and propagates from server to server."
                                }
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of plan. For example, \"Platinum\" or \"High Deductable\"."
                            },
                            "coverageArea": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The geographic region in which a health insurance plan's benefits apply."
                                }
                            },
                            "network": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Reference to the network that providing the type of coverage."
                                }
                            },
                            "generalCost": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GeneralCost",
                                    "description": "Overall costs associated with the plan."
                                }
                            },
                            "specificCost": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SpecificCost",
                                    "description": "Costs associated with the coverage provided by the product."
                                }
                            }
                        }
                    }
                ]
            },
            "GeneralCost": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of cost."
                            },
                            "groupSize": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Number of participants enrolled in the plan."
                            },
                            "cost": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Value of the cost."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Additional information about the general costs associated with this plan."
                            }
                        }
                    }
                ]
            },
            "SpecificCost": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "General category of benefit (Medical; Dental; Vision; Drug; Mental Health; Substance Abuse; Hospice, Home Health)."
                            },
                            "benefit": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Benefit",
                                    "description": "List of the specific benefits under this category of benefit."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "category"
                ]
            },
            "Cost": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The category of the cost information.  For example, manufacturers' cost, patient cost, claim reimbursement cost, actual acquisition cost."
                            },
                            "source": {
                                "$ref": "#/components/schemas/String",
                                "description": "The source or owner that assigns the price to the medication."
                            },
                            "cost": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The price of the medication."
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "cost"
                ]
            },
            "LineItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Sequence in which the items appear on the invoice."
                            },
                            "chargeItemReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The ChargeItem contains information such as the billing code, date, amount etc. If no further details are required for the lineItem, inline billing codes can be added using the CodeableConcept data type instead of the Reference."
                            },
                            "chargeItemCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The ChargeItem contains information such as the billing code, date, amount etc. If no further details are required for the lineItem, inline billing codes can be added using the CodeableConcept data type instead of the Reference."
                            },
                            "priceComponent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PriceComponent",
                                    "description": "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice as to how the prices have been calculated."
                                }
                            }
                        }
                    }
                ]
            },
            "HoursOfOperation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "daysOfWeek": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "mon",
                                        "tue",
                                        "wed",
                                        "thu",
                                        "fri",
                                        "sat",
                                        "sun"
                                    ],
                                    "description": "Indicates which days of the week are available between the start and end Times."
                                }
                            },
                            "allDay": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "The Location is open all day."
                            },
                            "openingTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "Time that the Location opens."
                            },
                            "closingTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "Time that the Location closes."
                            }
                        }
                    }
                ]
            },
            "Position": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "longitude": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Longitude. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes below)."
                            },
                            "latitude": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Latitude. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes below)."
                            },
                            "altitude": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Altitude. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes below)."
                            }
                        }
                    }
                ],
                "required": [
                    "longitude",
                    "latitude"
                ]
            },
            "Stratifier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The meaning of this stratifier, as defined in the measure definition."
                                }
                            },
                            "stratum": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Stratum",
                                    "description": "This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value."
                                }
                            }
                        }
                    }
                ]
            },
            "Component": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "definition": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The definition of the search parameter that describes this part."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/String",
                                "description": "A sub-expression that defines how to extract values for this component from the output of the main SearchParameter.expression."
                            }
                        }
                    }
                ],
                "required": [
                    "definition",
                    "expression"
                ]
            },
            "SupplementalData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates a meaning for the supplemental data. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing supplemental data to be correlated across measures."
                            },
                            "usage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "An indicator of the intended usage for the supplemental data element. Supplemental data indicates the data is additional information requested to augment the measure information. Risk adjustment factor indicates the data is additional information used to calculate risk adjustment factors when applying a risk model to the measure calculation."
                                }
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "The human readable description of this supplemental data."
                            },
                            "criteria": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "The criteria for the supplemental data. This is typically the name of a valid expression defined within a referenced library, but it may also be a path to a specific data element. The criteria defines the data to be returned for this element."
                            }
                        }
                    }
                ],
                "required": [
                    "criteria"
                ]
            },
            "Stratum": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique."
                            },
                            "component": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Component",
                                    "description": "A stratifier component value."
                                }
                            },
                            "population": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Population",
                                    "description": "The populations that make up the stratum, one for each type of population appropriate to the measure."
                                }
                            },
                            "measureScore": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum."
                            }
                        }
                    }
                ]
            },
            "Batch": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "lotNumber": {
                                "$ref": "#/components/schemas/String",
                                "description": "The assigned lot number of a batch of the specified product."
                            },
                            "expirationDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When this specific batch of product will expire."
                            }
                        }
                    }
                ]
            },
            "Ingredient": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "quantity": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "The amount of the ingredient in the substance - a concentration ratio."
                            },
                            "substanceCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Another substance that is a component of this substance."
                            },
                            "substanceReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Another substance that is a component of this substance."
                            }
                        }
                    }
                ]
            },
            "Substitution": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "allowedBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "True if the prescriber allows a different drug to be dispensed from what was prescribed."
                            },
                            "allowedCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "True if the prescriber allows a different drug to be dispensed from what was prescribed."
                            },
                            "reason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the reason for the substitution, or why substitution must or must not be performed."
                            }
                        }
                    }
                ]
            },
            "AdministrationGuidelines": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "dosage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dosage",
                                    "description": "Dosage for the medication for the specific guidelines."
                                }
                            },
                            "indicationCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indication for use that apply to the specific administration guidelines."
                            },
                            "indicationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Indication for use that apply to the specific administration guidelines."
                            },
                            "patientCharacteristics": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PatientCharacteristics",
                                    "description": "Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.)."
                                }
                            }
                        }
                    }
                ]
            },
            "PatientCharacteristics": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "characteristicCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender)."
                            },
                            "characteristicQuantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender)."
                            },
                            "value": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "The specific characteristic (e.g. height, weight, gender, etc.)."
                                }
                            }
                        }
                    }
                ]
            },
            "DrugCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code specifying which characteristic of the medicine is being described (for example, colour, shape, imprint)."
                            },
                            "valueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Description of the characteristic."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Description of the characteristic."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "Description of the characteristic."
                            },
                            "valueBase64Binary": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "Description of the characteristic."
                            }
                        }
                    }
                ]
            },
            "Kinetics": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "areaUnderCurve": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SimpleQuantity",
                                    "description": "The drug concentration measured at certain discrete points in time."
                                }
                            },
                            "lethalDose50": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SimpleQuantity",
                                    "description": "The median lethal dose of a drug."
                                }
                            },
                            "halfLifePeriod": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The time required for any specified property (e.g., the concentration of a substance in the body) to decrease by half."
                            }
                        }
                    }
                ]
            },
            "MedicineClassification": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification)."
                            },
                            "classification": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Specific category assigned to the medication (e.g. anti-infective, anti-hypertensive, antibiotic, etc.)."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "MonitoringProgram": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of program under which the medication is monitored."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Name of the reviewing program."
                            }
                        }
                    }
                ]
            },
            "Monograph": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The category of documentation about the medication. (e.g. professional monograph, patient education monograph)."
                            },
                            "source": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Associated documentation about the medication."
                            }
                        }
                    }
                ]
            },
            "Packaging": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code that defines the specific type of packaging that the medication can be found in (e.g. blister sleeve, tube, bottle)."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The number of product units the package would contain if fully loaded."
                            }
                        }
                    }
                ]
            },
            "Regulatory": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "regulatoryAuthority": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The authority that is specifying the regulations."
                            },
                            "substitution": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Substitution",
                                    "description": "Specifies if changes are allowed when dispensing a medication from a regulatory perspective."
                                }
                            },
                            "schedule": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Schedule",
                                    "description": "Specifies the schedule of a medication in jurisdiction."
                                }
                            },
                            "maxDispense": {
                                "$ref": "#/components/schemas/MaxDispense",
                                "description": "The maximum number of units of the medication that can be dispensed in a period."
                            }
                        }
                    }
                ],
                "required": [
                    "regulatoryAuthority"
                ]
            },
            "MaxDispense": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The maximum number of units of the medication that can be dispensed."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The period that applies to the maximum number of units."
                            }
                        }
                    }
                ],
                "required": [
                    "quantity"
                ]
            },
            "RelatedMedicationKnowledge": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The category of the associated medication knowledge reference."
                            },
                            "reference": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Associated documentation about the associated medication knowledge."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "reference"
                ]
            },
            "DispenseRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "initialFill": {
                                "$ref": "#/components/schemas/InitialFill",
                                "description": "Indicates the quantity or duration for the first dispense of the medication."
                            },
                            "dispenseInterval": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The minimum period of time that must occur between dispenses of the medication."
                            },
                            "validityPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "This indicates the validity period of a prescription (stale dating the Prescription)."
                            },
                            "numberOfRepeatsAllowed": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "An integer indicating the number of times, in addition to the original dispense, (aka refills or repeats) that the patient can receive the prescribed medication. Usage Notes: This integer does not include the original order dispense. This means that if an order indicates dispense 30 tablets plus \"3 repeats\", then the order can be dispensed a total of 4 times and the patient can receive a total of 120 tablets.  A prescriber may explicitly say that zero refills are permitted after the initial dispense."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The amount that is to be dispensed for one fill."
                            },
                            "expectedSupplyDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Identifies the period time over which the supplied product is expected to be used, or the length of time the dispense is expected to last."
                            },
                            "performer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Indicates the intended dispensing Organization specified by the prescriber."
                            }
                        }
                    }
                ]
            },
            "InitialFill": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The amount or quantity to provide as part of the first dispense."
                            },
                            "duration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The length of time that the first dispense is expected to last."
                            }
                        }
                    }
                ]
            },
            "ManufacturingBusinessOperation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "operationType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of manufacturing operation."
                            },
                            "authorisationReferenceNumber": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Regulatory authorization reference number."
                            },
                            "effectiveDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Regulatory authorization date."
                            },
                            "confidentialityIndicator": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "To indicate if this proces is commercially confidential."
                            },
                            "manufacturer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The manufacturer or establishment associated with the process."
                                }
                            },
                            "regulator": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A regulator which oversees the operation."
                            }
                        }
                    }
                ]
            },
            "Name": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "The actual name."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Name type."
                            },
                            "status": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The status of the name."
                            },
                            "preferred": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If this is the preferred name for this substance."
                            },
                            "language": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Language of the name."
                                }
                            },
                            "domain": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive."
                                }
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The jurisdiction where this name applies."
                                }
                            },
                            "synonym": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Name",
                                    "description": "A synonym of this name."
                                }
                            },
                            "translation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Name",
                                    "description": "A translation for this name."
                                }
                            },
                            "official": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Official",
                                    "description": "Details of the official nature of this name."
                                }
                            },
                            "source": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Supporting literature."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "CountryLanguage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "country": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Country code for where this name applies."
                            },
                            "jurisdiction": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Jurisdiction code for where this name applies."
                            },
                            "language": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Language code for this name."
                            }
                        }
                    }
                ],
                "required": [
                    "country",
                    "language"
                ]
            },
            "NamePart": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "part": {
                                "$ref": "#/components/schemas/String",
                                "description": "A fragment of a product name."
                            },
                            "type": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Idenifying type for this part of the name (e.g. strength part)."
                            }
                        }
                    }
                ],
                "required": [
                    "part",
                    "type"
                ]
            },
            "SpecialDesignation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Identifier for the designation, or procedure number."
                                }
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of special designation, e.g. orphan drug, minor use."
                            },
                            "intendedUse": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The intended use of the product, e.g. prevention, treatment."
                            },
                            "indicationCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Condition for which the medicinal use applies."
                            },
                            "indicationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Condition for which the medicinal use applies."
                            },
                            "status": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "For example granted, pending, expired or withdrawn."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date when the designation was granted."
                            },
                            "species": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Animal species for which this applies."
                            }
                        }
                    }
                ]
            },
            "JurisdictionalAuthorization": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "The assigned number for the marketing authorization."
                                }
                            },
                            "country": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Country of authorization."
                            },
                            "jurisdiction": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Jurisdiction within a country."
                                }
                            },
                            "legalStatusOfSupply": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The legal status of supply in a jurisdiction or region."
                            },
                            "validityPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The start and expected end date of the authorization."
                            }
                        }
                    }
                ]
            },
            "OtherTherapy": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "therapyRelationshipType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of relationship between the medicinal product indication or contraindication and another therapy."
                            },
                            "medicationCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication."
                            },
                            "medicationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication."
                            }
                        }
                    }
                ],
                "required": [
                    "therapyRelationshipType"
                ]
            },
            "SpecifiedSubstance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The specified substance."
                            },
                            "group": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The group of specified substance, e.g. group 1 to 4."
                            },
                            "confidentiality": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Confidentiality level of the specified substance as the ingredient."
                            },
                            "strength": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Strength",
                                    "description": "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "group"
                ]
            },
            "Strength": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "presentation": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item."
                            },
                            "presentationLowLimit": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "A lower limit for the quantity of substance in the unit of presentation. For use when there is a range of strengths, this is the lower limit, with the presentation attribute becoming the upper limit."
                            },
                            "concentration": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "The strength per unitary volume (or mass)."
                            },
                            "concentrationLowLimit": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "A lower limit for the strength per unitary volume (or mass), for when there is a range. The concentration attribute then becomes the upper limit."
                            },
                            "measurementPoint": {
                                "$ref": "#/components/schemas/String",
                                "description": "For when strength is measured at a particular point or distance."
                            },
                            "country": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The country or countries for which the strength range applies."
                                }
                            },
                            "referenceStrength": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ReferenceStrength",
                                    "description": "Strength expressed in terms of a reference substance."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "presentation"
                ]
            },
            "ReferenceStrength": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "substance": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Relevant reference substance."
                            },
                            "strength": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "Strength expressed in terms of a reference substance."
                            },
                            "strengthLowLimit": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "Strength expressed in terms of a reference substance."
                            },
                            "measurementPoint": {
                                "$ref": "#/components/schemas/String",
                                "description": "For when strength is measured at a particular point or distance."
                            },
                            "country": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The country or countries for which the strength range applies."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "strength"
                ]
            },
            "Interactant": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "itemReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The specific medication, food or laboratory test that interacts."
                            },
                            "itemCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The specific medication, food or laboratory test that interacts."
                            }
                        }
                    }
                ]
            },
            "BatchIdentifier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "outerPackaging": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A number appearing on the outer packaging of a specific batch."
                            },
                            "immediatePackaging": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A number appearing on the immediate packaging (and not the outer packaging)."
                            }
                        }
                    }
                ],
                "required": [
                    "outerPackaging"
                ]
            },
            "PackageItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "Including possibly Data Carrier Identifier."
                                }
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The physical type of the container of the medicine."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The quantity of this package in the medicinal product, at the current level of packaging. The outermost is always 1."
                            },
                            "material": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Material type of the package item."
                                }
                            },
                            "alternateMaterial": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A possible alternate material for the packaging."
                                }
                            },
                            "device": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "A device accompanying a medicinal product."
                                }
                            },
                            "manufacturedItem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The manufactured item as contained in the packaged medicinal product."
                                }
                            },
                            "packageItem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PackageItem",
                                    "description": "Allows containers within containers."
                                }
                            },
                            "physicalCharacteristics": {
                                "$ref": "#/components/schemas/ProdCharacteristic",
                                "description": "Dimensions, color etc."
                            },
                            "otherCharacteristics": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Other codeable characteristics."
                                }
                            },
                            "shelfLifeStorage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProductShelfLife",
                                    "description": "Shelf Life and storage information."
                                }
                            },
                            "manufacturer": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Manufacturer of this Package Item."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "quantity"
                ]
            },
            "Characteristics": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A coded characteristic."
                            },
                            "status": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The status of characteristic e.g. assigned or pending."
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "RouteOfAdministration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Coded expression for the route."
                            },
                            "firstDose": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The first dose (dose quantity) administered in humans can be specified, for a product under investigation, using a numerical value and its unit of measurement."
                            },
                            "maxSingleDose": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The maximum single dose that can be administered as per the protocol of a clinical trial can be specified using a numerical value and its unit of measurement."
                            },
                            "maxDosePerDay": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The maximum dose per day (maximum dose quantity to be administered in any one 24-h period) that can be administered as per the protocol referenced in the clinical trial authorisation."
                            },
                            "maxDosePerTreatmentPeriod": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "The maximum dose per treatment period that can be administered as per the protocol referenced in the clinical trial authorisation."
                            },
                            "maxTreatmentPeriod": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The maximum treatment period during which an Investigational Medicinal Product can be administered as per the protocol referenced in the clinical trial authorisation."
                            },
                            "targetSpecies": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TargetSpecies",
                                    "description": "A species for which this route applies."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "TargetSpecies": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Coded expression for the species."
                            },
                            "withdrawalPeriod": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WithdrawalPeriod",
                                    "description": "A species specific time during which consumption of animal product is not appropriate."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "WithdrawalPeriod": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "tissue": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Coded expression for the type of tissue for which the withdrawal period applues, e.g. meat, milk."
                            },
                            "value": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "A value for the time."
                            },
                            "supportingInformation": {
                                "$ref": "#/components/schemas/String",
                                "description": "Extra information about the withdrawal period."
                            }
                        }
                    }
                ],
                "required": [
                    "tissue",
                    "value"
                ]
            },
            "AllowedResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "message": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "A reference to the message definition that must be adhered to by this supported response."
                            },
                            "situation": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "Provides a description of the circumstances in which this response should be used (as opposed to one of the alternative responses)."
                            }
                        }
                    }
                ],
                "required": [
                    "message"
                ]
            },
            "Focus": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "enum": [
                                    "Account",
                                    "ActivityDefinition",
                                    "AdverseEvent",
                                    "AllergyIntolerance",
                                    "Appointment",
                                    "AppointmentResponse",
                                    "AuditEvent",
                                    "Basic",
                                    "Binary",
                                    "BiologicallyDerivedProduct",
                                    "BodyStructure",
                                    "Bundle",
                                    "CapabilityStatement",
                                    "CarePlan",
                                    "CareTeam",
                                    "CatalogEntry",
                                    "ChargeItem",
                                    "ChargeItemDefinition",
                                    "Claim",
                                    "ClaimResponse",
                                    "ClinicalImpression",
                                    "CodeSystem",
                                    "Communication",
                                    "CommunicationRequest",
                                    "CompartmentDefinition",
                                    "Composition",
                                    "ConceptMap",
                                    "Condition",
                                    "Consent",
                                    "Contract",
                                    "Coverage",
                                    "CoverageEligibilityRequest",
                                    "CoverageEligibilityResponse",
                                    "DetectedIssue",
                                    "Device",
                                    "DeviceDefinition",
                                    "DeviceMetric",
                                    "DeviceRequest",
                                    "DeviceUseStatement",
                                    "DiagnosticReport",
                                    "DocumentManifest",
                                    "DocumentReference",
                                    "DomainResource",
                                    "EffectEvidenceSynthesis",
                                    "Encounter",
                                    "Endpoint",
                                    "EnrollmentRequest",
                                    "EnrollmentResponse",
                                    "EpisodeOfCare",
                                    "EventDefinition",
                                    "Evidence",
                                    "EvidenceVariable",
                                    "ExampleScenario",
                                    "ExplanationOfBenefit",
                                    "FamilyMemberHistory",
                                    "Flag",
                                    "Goal",
                                    "GraphDefinition",
                                    "Group",
                                    "GuidanceResponse",
                                    "HealthcareService",
                                    "ImagingStudy",
                                    "Immunization",
                                    "ImmunizationEvaluation",
                                    "ImmunizationRecommendation",
                                    "ImplementationGuide",
                                    "InsurancePlan",
                                    "Invoice",
                                    "Library",
                                    "Linkage",
                                    "List",
                                    "Location",
                                    "Measure",
                                    "MeasureReport",
                                    "Media",
                                    "Medication",
                                    "MedicationAdministration",
                                    "MedicationDispense",
                                    "MedicationKnowledge",
                                    "MedicationRequest",
                                    "MedicationStatement",
                                    "MedicinalProduct",
                                    "MedicinalProductAuthorization",
                                    "MedicinalProductContraindication",
                                    "MedicinalProductIndication",
                                    "MedicinalProductIngredient",
                                    "MedicinalProductInteraction",
                                    "MedicinalProductManufactured",
                                    "MedicinalProductPackaged",
                                    "MedicinalProductPharmaceutical",
                                    "MedicinalProductUndesirableEffect",
                                    "MessageDefinition",
                                    "MessageHeader",
                                    "MolecularSequence",
                                    "NamingSystem",
                                    "NutritionOrder",
                                    "Observation",
                                    "ObservationDefinition",
                                    "OperationDefinition",
                                    "OperationOutcome",
                                    "Organization",
                                    "OrganizationAffiliation",
                                    "Parameters",
                                    "Patient",
                                    "PaymentNotice",
                                    "PaymentReconciliation",
                                    "Person",
                                    "PlanDefinition",
                                    "Practitioner",
                                    "PractitionerRole",
                                    "Procedure",
                                    "Provenance",
                                    "Questionnaire",
                                    "QuestionnaireResponse",
                                    "RelatedPerson",
                                    "RequestGroup",
                                    "ResearchDefinition",
                                    "ResearchElementDefinition",
                                    "ResearchStudy",
                                    "ResearchSubject",
                                    "Resource",
                                    "RiskAssessment",
                                    "RiskEvidenceSynthesis",
                                    "Schedule",
                                    "SearchParameter",
                                    "ServiceRequest",
                                    "Slot",
                                    "Specimen",
                                    "SpecimenDefinition",
                                    "StructureDefinition",
                                    "StructureMap",
                                    "Subscription",
                                    "Substance",
                                    "SubstanceNucleicAcid",
                                    "SubstancePolymer",
                                    "SubstanceProtein",
                                    "SubstanceReferenceInformation",
                                    "SubstanceSourceMaterial",
                                    "SubstanceSpecification",
                                    "SupplyDelivery",
                                    "SupplyRequest",
                                    "Task",
                                    "TerminologyCapabilities",
                                    "TestReport",
                                    "TestScript",
                                    "ValueSet",
                                    "VerificationResult",
                                    "VisionPrescription"
                                ],
                                "description": "The kind of resource that must be the focus for this message."
                            },
                            "profile": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "A profile that reflects constraints for the focal resource (and potentially for related resources)."
                            },
                            "min": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "Identifies the minimum number of resources of this type that must be pointed to by a message in order for it to be valid against this MessageDefinition."
                            },
                            "max": {
                                "$ref": "#/components/schemas/String",
                                "description": "Identifies the maximum number of resources of this type that must be pointed to by a message in order for it to be valid against this MessageDefinition."
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "min"
                ]
            },
            "Destination": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "index": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Abstract name given to a destination server in this test script.  The name is provided as a number starting at 1."
                            },
                            "profile": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The type of destination profile the test system supports."
                            }
                        }
                    }
                ],
                "required": [
                    "index",
                    "profile"
                ]
            },
            "Quality": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "indel",
                                    "snp",
                                    "unknown"
                                ],
                                "description": "INDEL / SNP / Undefined variant."
                            },
                            "standardSequence": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Gold standard sequence used for comparing against."
                            },
                            "start": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Start position of the sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive."
                            },
                            "end": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "End position of the sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position."
                            },
                            "score": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The score of an experimentally derived feature such as a p-value ([SO:0001685](http://www.sequenceontology.org/browser/current_svn/term/SO:0001685))."
                            },
                            "method": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Which method is used to get sequence quality."
                            },
                            "truthTP": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "True positives, from the perspective of the truth data, i.e. the number of sites in the Truth Call Set for which there are paths through the Query Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event."
                            },
                            "queryTP": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "True positives, from the perspective of the query data, i.e. the number of sites in the Query Call Set for which there are paths through the Truth Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event."
                            },
                            "truthFN": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "False negatives, i.e. the number of sites in the Truth Call Set for which there is no path through the Query Call Set that is consistent with all of the alleles at this site, or sites for which there is an inaccurate genotype call for the event. Sites with correct variant but incorrect genotype are counted here."
                            },
                            "queryFP": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "False positives, i.e. the number of sites in the Query Call Set for which there is no path through the Truth Call Set that is consistent with this site. Sites with correct variant but incorrect genotype are counted here."
                            },
                            "gtFP": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The number of false positives where the non-REF alleles in the Truth and Query Call Sets match (i.e. cases where the truth is 1/1 and the query is 0/1 or similar)."
                            },
                            "precision": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "QUERY.TP / (QUERY.TP + QUERY.FP)."
                            },
                            "recall": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "TRUTH.TP / (TRUTH.TP + TRUTH.FN)."
                            },
                            "fScore": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Harmonic mean of Recall and Precision, computed as: 2 * precision * recall / (precision + recall)."
                            },
                            "roc": {
                                "$ref": "#/components/schemas/Roc",
                                "description": "Receiver Operator Characteristic (ROC) Curve  to give sensitivity/specificity tradeoff."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Roc": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "score": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Integer",
                                    "description": "Invidual data point representing the GQ (genotype quality) score threshold."
                                }
                            },
                            "numTP": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Integer",
                                    "description": "The number of true positives if the GQ score threshold was set to \"score\" field value."
                                }
                            },
                            "numFP": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Integer",
                                    "description": "The number of false positives if the GQ score threshold was set to \"score\" field value."
                                }
                            },
                            "numFN": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Integer",
                                    "description": "The number of false negatives if the GQ score threshold was set to \"score\" field value."
                                }
                            },
                            "precision": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Decimal",
                                    "description": "Calculated precision if the GQ score threshold was set to \"score\" field value."
                                }
                            },
                            "sensitivity": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Decimal",
                                    "description": "Calculated sensitivity if the GQ score threshold was set to \"score\" field value."
                                }
                            },
                            "fMeasure": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Decimal",
                                    "description": "Calculated fScore if the GQ score threshold was set to \"score\" field value."
                                }
                            }
                        }
                    }
                ]
            },
            "ReferenceSeq": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "chromosome": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Structural unit composed of a nucleic acid molecule which controls its own replication through the interaction of specific proteins at one or more origins of replication ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340))."
                            },
                            "genomeBuild": {
                                "$ref": "#/components/schemas/String",
                                "description": "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'.  Version number must be included if a versioned release of a primary build was used."
                            },
                            "orientation": {
                                "type": "string",
                                "enum": [
                                    "sense",
                                    "antisense"
                                ],
                                "description": "A relative reference to a DNA strand based on gene orientation. The strand that contains the open reading frame of the gene is the \"sense\" strand, and the opposite complementary strand is the \"antisense\" strand."
                            },
                            "referenceSeqId": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Reference identifier of reference sequence submitted to NCBI. It must match the type in the MolecularSequence.type field. For example, the prefix, “NG_” identifies reference sequence for genes, “NM_” for messenger RNA transcripts, and “NP_” for amino acid sequences."
                            },
                            "referenceSeqPointer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A pointer to another MolecularSequence entity as reference sequence."
                            },
                            "referenceSeqString": {
                                "$ref": "#/components/schemas/String",
                                "description": "A string like \"ACGT\"."
                            },
                            "strand": {
                                "type": "string",
                                "enum": [
                                    "watson",
                                    "crick"
                                ],
                                "description": "An absolute reference to a strand. The Watson strand is the strand whose 5'-end is on the short arm of the chromosome, and the Crick strand as the one whose 5'-end is on the long arm."
                            },
                            "windowStart": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Start position of the window on the reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive."
                            },
                            "windowEnd": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "End position of the window on the reference sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position."
                            }
                        }
                    }
                ]
            },
            "Repository": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "directlink",
                                    "openapi",
                                    "login",
                                    "oauth",
                                    "other"
                                ],
                                "description": "Click and see / RESTful API / Need login to see / RESTful API with authentication / Other ways to see resource."
                            },
                            "url": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "URI of an external repository which contains further details about the genetics data."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "URI of an external repository which contains further details about the genetics data."
                            },
                            "datasetId": {
                                "$ref": "#/components/schemas/String",
                                "description": "Id of the variant in this external repository. The server will understand how to use this id to call for more info about datasets in external repository."
                            },
                            "variantsetId": {
                                "$ref": "#/components/schemas/String",
                                "description": "Id of the variantset in this external repository. The server will understand how to use this id to call for more info about variantsets in external repository."
                            },
                            "readsetId": {
                                "$ref": "#/components/schemas/String",
                                "description": "Id of the read in this external repository."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "StructureVariant": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "variantType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Information about chromosome structure variation DNA change type."
                            },
                            "exact": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Used to indicate if the outer and inner start-end values have the same meaning."
                            },
                            "length": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Length of the variant chromosome."
                            },
                            "outer": {
                                "$ref": "#/components/schemas/Outer",
                                "description": "Structural variant outer."
                            },
                            "inner": {
                                "$ref": "#/components/schemas/Inner",
                                "description": "Structural variant inner."
                            }
                        }
                    }
                ]
            },
            "Inner": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "start": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Structural variant inner start. If the coordinate system is either 0-based or 1-based, then start position is inclusive."
                            },
                            "end": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Structural variant inner end. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position."
                            }
                        }
                    }
                ]
            },
            "Outer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "start": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Structural variant outer start. If the coordinate system is either 0-based or 1-based, then start position is inclusive."
                            },
                            "end": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Structural variant outer end. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position."
                            }
                        }
                    }
                ]
            },
            "Variant": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "start": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Start position of the variant on the  reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive."
                            },
                            "end": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "End position of the variant on the reference sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position."
                            },
                            "observedAllele": {
                                "$ref": "#/components/schemas/String",
                                "description": "An allele is one of a set of coexisting sequence variants of a gene ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).  Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the observed  sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end."
                            },
                            "referenceAllele": {
                                "$ref": "#/components/schemas/String",
                                "description": "An allele is one of a set of coexisting sequence variants of a gene ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)). Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the reference sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end."
                            },
                            "cigar": {
                                "$ref": "#/components/schemas/String",
                                "description": "Extended CIGAR string for aligning the sequence with reference bases. See detailed documentation [here](http://support.illumina.com/help/SequencingAnalysisWorkflow/Content/Vault/Informatics/Sequencing_Analysis/CASAVA/swSEQ_mCA_ExtendedCIGARFormat.htm)."
                            },
                            "variantPointer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A pointer to an Observation containing variant information."
                            }
                        }
                    }
                ]
            },
            "UniqueId": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "oid",
                                    "uuid",
                                    "uri",
                                    "other"
                                ],
                                "description": "Identifies the unique identifier scheme used for this particular identifier."
                            },
                            "value": {
                                "$ref": "#/components/schemas/String",
                                "description": "The string that should be sent over the wire to identify the code system or identifier system."
                            },
                            "preferred": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates whether this identifier is the \"preferred\" identifier of this type."
                            },
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Notes about the past or intended usage of this identifier."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Identifies the period of time over which this identifier is considered appropriate to refer to the naming system.  Outside of this window, the identifier might be non-deterministic."
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "value"
                ]
            },
            "EnteralFormula": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "baseFormulaType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of enteral or infant formula such as an adult standard formula with fiber or a soy-based infant formula."
                            },
                            "baseFormulaProductName": {
                                "$ref": "#/components/schemas/String",
                                "description": "The product or brand name of the enteral or infant formula product such as \"ACME Adult Standard Formula\"."
                            },
                            "additiveType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates the type of modular component such as protein, carbohydrate, fat or fiber to be provided in addition to or mixed with the base formula."
                            },
                            "additiveProductName": {
                                "$ref": "#/components/schemas/String",
                                "description": "The product or brand name of the type of modular component to be added to the formula."
                            },
                            "caloricDensity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The amount of energy (calories) that the formula should provide per specified volume, typically per mL or fluid oz.  For example, an infant may require a formula that provides 24 calories per fluid ounce or an adult may require an enteral formula that provides 1.5 calorie/mL."
                            },
                            "routeofAdministration": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The route or physiological path of administration into the patient's gastrointestinal  tract for purposes of providing the formula feeding, e.g. nasogastric tube."
                            },
                            "administration": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Administration",
                                    "description": "Formula administration instructions as structured data.  This repeating structure allows for changing the administration rate or volume over time for both bolus and continuous feeding.  An example of this would be an instruction to increase the rate of continuous feeding every 2 hours."
                                }
                            },
                            "maxVolumeToDeliver": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The maximum total quantity of formula that may be administered to a subject over the period of time, e.g. 1440 mL over 24 hours."
                            },
                            "administrationInstruction": {
                                "$ref": "#/components/schemas/String",
                                "description": "Free text formula administration, feeding instructions or additional instructions or information."
                            }
                        }
                    }
                ]
            },
            "Administration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "schedule": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The time period and frequency at which the enteral formula should be delivered to the patient."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The volume of formula to provide to the patient per the specified administration schedule."
                            },
                            "rateQuantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule."
                            },
                            "rateRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule."
                            }
                        }
                    }
                ]
            },
            "OralDiet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The kind of diet or dietary restriction such as fiber restricted diet or diabetic diet."
                                }
                            },
                            "schedule": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Timing",
                                    "description": "The time period and frequency at which the diet should be given.  The diet should be given for the combination of all schedules if more than one schedule is present."
                                }
                            },
                            "nutrient": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Nutrient",
                                    "description": "Class that defines the quantity and type of nutrient modifications (for example carbohydrate, fiber or sodium) required for the oral diet."
                                }
                            },
                            "texture": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Texture",
                                    "description": "Class that describes any texture modifications required for the patient to safely consume various types of solid foods."
                                }
                            },
                            "fluidConsistencyType": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "The required consistency (e.g. honey-thick, nectar-thick, thin, thickened.) of liquids or fluids served to the patient."
                                }
                            },
                            "instruction": {
                                "$ref": "#/components/schemas/String",
                                "description": "Free text or additional instructions or information pertaining to the oral diet."
                            }
                        }
                    }
                ]
            },
            "Nutrient": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "modifier": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The nutrient that is being modified such as carbohydrate or sodium."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The quantity of the specified nutrient to include in diet."
                            }
                        }
                    }
                ]
            },
            "Texture": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "modifier": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Any texture modifications (for solid foods) that should be made, e.g. easy to chew, chopped, ground, and pureed."
                            },
                            "foodType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The food type(s) (e.g. meats, all foods)  that the texture modification applies to.  This could be all foods types."
                            }
                        }
                    }
                ]
            },
            "Supplement": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The kind of nutritional supplement product required such as a high protein or pediatric clear liquid supplement."
                            },
                            "productName": {
                                "$ref": "#/components/schemas/String",
                                "description": "The product or brand name of the nutritional supplement such as \"Acme Protein Shake\"."
                            },
                            "schedule": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Timing",
                                    "description": "The time period and frequency at which the supplement(s) should be given.  The supplement should be given for the combination of all schedules if more than one schedule is present."
                                }
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The amount of the nutritional supplement to be given."
                            },
                            "instruction": {
                                "$ref": "#/components/schemas/String",
                                "description": "Free text or additional instructions or information pertaining to the oral supplement."
                            }
                        }
                    }
                ]
            },
            "QualifiedInterval": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "category": {
                                "type": "string",
                                "enum": [
                                    "reference",
                                    "critical",
                                    "absolute"
                                ],
                                "description": "The category of interval of values for continuous or ordinal observations conforming to this ObservationDefinition."
                            },
                            "range": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The low and high values determining the interval. There may be only one of the two."
                            },
                            "context": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Codes to indicate the health context the range applies to. For example, the normal or therapeutic range."
                            },
                            "appliesTo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Codes to indicate the target population this reference range applies to."
                                }
                            },
                            "gender": {
                                "type": "string",
                                "enum": [
                                    "male",
                                    "female",
                                    "other",
                                    "unknown"
                                ],
                                "description": "Sex of the population the range applies to."
                            },
                            "age": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so."
                            },
                            "gestationalAge": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The gestational age to which this reference range is applicable, in the context of pregnancy."
                            },
                            "condition": {
                                "$ref": "#/components/schemas/String",
                                "description": "Text based condition for which the reference range is valid."
                            }
                        }
                    }
                ]
            },
            "QuantitativeDetails": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "customaryUnit": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Customary unit used to report quantitative results of observations conforming to this ObservationDefinition."
                            },
                            "unit": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "SI unit used to report quantitative results of observations conforming to this ObservationDefinition."
                            },
                            "conversionFactor": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Factor for converting value expressed with SI unit to value expressed with customary unit."
                            },
                            "decimalPrecision": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Number of digits after decimal separator when the results of such observations are of type Quantity."
                            }
                        }
                    }
                ]
            },
            "Overload": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "parameterName": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Name of parameter to include in overload."
                                }
                            },
                            "comment": {
                                "$ref": "#/components/schemas/String",
                                "description": "Comments to go on overload."
                            }
                        }
                    }
                ]
            },
            "ReferencedFrom": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "source": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the parameter or dot-separated path of parameter names pointing to the resource parameter that is expected to contain a reference to this resource."
                            },
                            "sourceId": {
                                "$ref": "#/components/schemas/String",
                                "description": "The id of the element in the referencing resource that is expected to resolve to this resource."
                            }
                        }
                    }
                ],
                "required": [
                    "source"
                ]
            },
            "Issue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "severity": {
                                "type": "string",
                                "enum": [
                                    "fatal",
                                    "error",
                                    "warning",
                                    "information"
                                ],
                                "description": "Indicates whether the issue indicates a variation from successful processing."
                            },
                            "code": {
                                "type": "string",
                                "enum": [
                                    "invalid",
                                    "structure",
                                    "required",
                                    "value",
                                    "invariant",
                                    "security",
                                    "login",
                                    "unknown",
                                    "expired",
                                    "forbidden",
                                    "suppressed",
                                    "processing",
                                    "not-supported",
                                    "duplicate",
                                    "multiple-matches",
                                    "not-found",
                                    "deleted",
                                    "too-long",
                                    "code-invalid",
                                    "extension",
                                    "too-costly",
                                    "business-rule",
                                    "conflict",
                                    "transient",
                                    "lock-error",
                                    "no-store",
                                    "exception",
                                    "timeout",
                                    "incomplete",
                                    "throttled",
                                    "informational"
                                ],
                                "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element."
                            },
                            "details": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error."
                            },
                            "diagnostics": {
                                "$ref": "#/components/schemas/String",
                                "description": "Additional diagnostic information about the issue."
                            },
                            "location": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name."
                                }
                            },
                            "expression": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "severity",
                    "code"
                ]
            },
            "RelatedAction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "actionId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The element id of the action this is related to."
                            },
                            "relationship": {
                                "type": "string",
                                "enum": [
                                    "before-start",
                                    "before",
                                    "before-end",
                                    "concurrent-with-start",
                                    "concurrent",
                                    "concurrent-with-end",
                                    "after-start",
                                    "after",
                                    "after-end"
                                ],
                                "description": "The relationship of this action to the related action."
                            },
                            "offsetDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before."
                            },
                            "offsetRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before."
                            }
                        }
                    }
                ],
                "required": [
                    "actionId",
                    "relationship"
                ]
            },
            "Qualification": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "An identifier that applies to this person's qualification in this role."
                                }
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Coded representation of the qualification."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Period during which the qualification is valid."
                            },
                            "issuer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Organization that regulates and issues the qualification."
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "FocalDevice": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "action": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The kind of change that happened to the device during the procedure."
                            },
                            "manipulated": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The device that was manipulated (changed) during the procedure."
                            }
                        }
                    }
                ],
                "required": [
                    "manipulated"
                ]
            },
            "AnswerOption": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "valueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "A potential answer that's allowed as the answer to this question."
                            },
                            "valueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "A potential answer that's allowed as the answer to this question."
                            },
                            "valueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "A potential answer that's allowed as the answer to this question."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "A potential answer that's allowed as the answer to this question."
                            },
                            "valueCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "A potential answer that's allowed as the answer to this question."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A potential answer that's allowed as the answer to this question."
                            },
                            "initialSelected": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Indicates whether the answer value is selected when the list of possible answers is initially shown."
                            }
                        }
                    }
                ]
            },
            "EnableWhen": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "question": {
                                "$ref": "#/components/schemas/String",
                                "description": "The linkId for the question whose answer (or lack of answer) governs whether this item is enabled."
                            },
                            "operator": {
                                "type": "string",
                                "enum": [
                                    "exists",
                                    "=",
                                    "!=",
                                    ">",
                                    "<",
                                    ">=",
                                    "<="
                                ],
                                "description": "Specifies the criteria by which the question is enabled."
                            },
                            "answerBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
                            },
                            "answerDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
                            },
                            "answerInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
                            },
                            "answerDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
                            },
                            "answerDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
                            },
                            "answerTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
                            },
                            "answerString": {
                                "$ref": "#/components/schemas/String",
                                "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
                            },
                            "answerCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
                            },
                            "answerQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
                            },
                            "answerReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
                            }
                        }
                    }
                ],
                "required": [
                    "question",
                    "operator"
                ]
            },
            "Initial": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "valueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The actual value to for an initial answer."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The actual value to for an initial answer."
                            }
                        }
                    }
                ]
            },
            "Arm": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Unique, human-readable label for this arm of the study."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Categorization of study arm, e.g. experimental, active comparator, placebo comparater."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A succinct description of the path through the study that would be followed by a subject adhering to this arm."
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "Objective": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Unique, human-readable label for this objective of the study."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The kind of study objective."
                            }
                        }
                    }
                ]
            },
            "Prediction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "outcome": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "One of the potential outcomes for the patient (e.g. remission, death,  a particular condition)."
                            },
                            "probabilityDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Indicates how likely the outcome is (in the specified timeframe)."
                            },
                            "probabilityRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Indicates how likely the outcome is (in the specified timeframe)."
                            },
                            "qualitativeRisk": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indicates how likely the outcome is (in the specified timeframe), expressed as a qualitative value (e.g. low, medium, or high)."
                            },
                            "relativeRisk": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Indicates the risk for this particular subject (with their specific characteristics) divided by the risk of the population in general.  (Numbers greater than 1 = higher risk than the population, numbers less than 1 = lower risk.)."
                            },
                            "whenPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Indicates the period of time or age range of the subject to which the specified probability applies."
                            },
                            "whenRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Indicates the period of time or age range of the subject to which the specified probability applies."
                            },
                            "rationale": {
                                "$ref": "#/components/schemas/String",
                                "description": "Additional information explaining the basis for the prediction."
                            }
                        }
                    }
                ]
            },
            "RiskEstimate": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "Human-readable summary of risk estimate."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Examples include proportion and mean."
                            },
                            "value": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The point estimate of the risk estimate."
                            },
                            "unitOfMeasure": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Specifies the UCUM unit for the outcome."
                            },
                            "denominatorCount": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The sample size for the group that was measured for this risk estimate."
                            },
                            "numeratorCount": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The number of group members with the outcome of interest."
                            },
                            "precisionEstimate": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PrecisionEstimate",
                                    "description": "A description of the precision of the estimate for the effect."
                                }
                            }
                        }
                    }
                ]
            },
            "Container": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "material": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of material of the container."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of container used to contain this kind of specimen."
                            },
                            "cap": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Color of container cap."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "The textual description of the kind of container."
                            },
                            "capacity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The capacity (volume or other measure) of this kind of container."
                            },
                            "minimumVolumeQuantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The minimum volume to be conditioned in the container."
                            },
                            "minimumVolumeString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The minimum volume to be conditioned in the container."
                            },
                            "additive": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Additive",
                                    "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA."
                                }
                            },
                            "preparation": {
                                "$ref": "#/components/schemas/String",
                                "description": "Special processing that should be applied to the container for this kind of specimen."
                            }
                        }
                    }
                ]
            },
            "TypeTested": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "isDerived": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Primary of secondary specimen."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The kind of specimen conditioned for testing expected by lab."
                            },
                            "preference": {
                                "type": "string",
                                "enum": [
                                    "preferred",
                                    "alternate"
                                ],
                                "description": "The preference for this type of conditioned specimen."
                            },
                            "container": {
                                "$ref": "#/components/schemas/Container",
                                "description": "The specimen's container."
                            },
                            "requirement": {
                                "$ref": "#/components/schemas/String",
                                "description": "Requirements for delivery and special handling of this kind of conditioned specimen."
                            },
                            "retentionTime": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The usual time that a specimen of this kind is retained after the ordered tests are completed, for the purpose of additional testing."
                            },
                            "rejectionCriterion": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Criterion for rejection of the specimen in its container by the laboratory."
                                }
                            },
                            "handling": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Handling",
                                    "description": "Set of instructions for preservation/transport of the specimen at a defined temperature interval, prior the testing process."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "preference"
                ]
            },
            "Additive": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "additiveCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA."
                            },
                            "additiveReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA."
                            }
                        }
                    }
                ]
            },
            "Handling": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "temperatureQualifier": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "It qualifies the interval of temperature, which characterizes an occurrence of handling. Conditions that are not related to temperature may be handled in the instruction element."
                            },
                            "temperatureRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The temperature interval for this set of handling instructions."
                            },
                            "maxDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The maximum time interval of preservation of the specimen with these conditions."
                            },
                            "instruction": {
                                "$ref": "#/components/schemas/String",
                                "description": "Additional textual instructions for the preservation or transport of the specimen. For instance, 'Protect from light exposure'."
                            }
                        }
                    }
                ]
            },
            "Differential": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "element": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ElementDefinition",
                                    "description": "Captures constraints on each element within the resource."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "element"
                ]
            },
            "Snapshot": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "element": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ElementDefinition",
                                    "description": "Captures constraints on each element within the resource."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "element"
                ]
            },
            "Input": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code or description indicating how the input is intended to be used as part of the task execution."
                            },
                            "valueBase64Binary": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueCode": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueMarkdown": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueOid": {
                                "$ref": "#/components/schemas/Oid",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valuePositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueUrl": {
                                "$ref": "#/components/schemas/Url",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueUuid": {
                                "$ref": "#/components/schemas/Uuid",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueAnnotation": {
                                "$ref": "#/components/schemas/Annotation",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueContactPoint": {
                                "$ref": "#/components/schemas/ContactPoint",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueCount": {
                                "$ref": "#/components/schemas/Count",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueDistance": {
                                "$ref": "#/components/schemas/Distance",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueHumanName": {
                                "$ref": "#/components/schemas/HumanName",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valuePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueSampledData": {
                                "$ref": "#/components/schemas/SampledData",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueContactDetail": {
                                "$ref": "#/components/schemas/ContactDetail",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueContributor": {
                                "$ref": "#/components/schemas/Contributor",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueDataRequirement": {
                                "$ref": "#/components/schemas/DataRequirement",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueExpression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueParameterDefinition": {
                                "$ref": "#/components/schemas/ParameterDefinition",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueRelatedArtifact": {
                                "$ref": "#/components/schemas/RelatedArtifact",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueTriggerDefinition": {
                                "$ref": "#/components/schemas/TriggerDefinition",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueUsageContext": {
                                "$ref": "#/components/schemas/UsageContext",
                                "description": "The value of the input parameter as a basic type."
                            },
                            "valueDosage": {
                                "$ref": "#/components/schemas/Dosage",
                                "description": "The value of the input parameter as a basic type."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Dependent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Name of a rule or group to apply."
                            },
                            "variable": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Variable to pass to the rule or group."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "variable"
                ]
            },
            "Structure": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "stereochemistry": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Stereochemistry type."
                            },
                            "opticalActivity": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Optical activity type."
                            },
                            "molecularFormula": {
                                "$ref": "#/components/schemas/String",
                                "description": "Molecular formula."
                            },
                            "molecularFormulaByMoiety": {
                                "$ref": "#/components/schemas/String",
                                "description": "Specified per moiety according to the Hill system, i.e. first C, then H, then alphabetical, each moiety separated by a dot."
                            },
                            "isotope": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Isotope",
                                    "description": "Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio."
                                }
                            },
                            "molecularWeight": {
                                "$ref": "#/components/schemas/MolecularWeight",
                                "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids)."
                            },
                            "source": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Supporting literature."
                                }
                            },
                            "representation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Representation",
                                    "description": "Molecular structural representation."
                                }
                            }
                        }
                    }
                ]
            },
            "Channel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "rest-hook",
                                    "websocket",
                                    "email",
                                    "sms",
                                    "message"
                                ],
                                "description": "The type of channel to send notifications on."
                            },
                            "endpoint": {
                                "$ref": "#/components/schemas/Url",
                                "description": "The url that describes the actual end-point to send messages to."
                            },
                            "payload": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The mime type to send the payload in - either application/fhir+xml, or application/fhir+json. If the payload is not present, then there is no payload in the notification, just a notification. The mime type \"text/plain\" may also be used for Email and SMS subscriptions."
                            },
                            "header": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/String",
                                    "description": "Additional headers / information to send as part of the notification."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Subunit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "subunit": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Index of primary sequences of amino acids linked through peptide bonds in order of decreasing length. Sequences of the same length will be ordered by molecular weight. Subunits that have identical sequences will be repeated and have sequential subscripts."
                            },
                            "sequence": {
                                "$ref": "#/components/schemas/String",
                                "description": "The sequence information shall be provided enumerating the amino acids from N- to C-terminal end using standard single-letter amino acid codes. Uppercase shall be used for L-amino acids and lowercase for D-amino acids. Transcribed SubstanceProteins will always be described using the translated sequence; for synthetic peptide containing amino acids that are not represented with a single letter code an X should be used within the sequence. The modified amino acids will be distinguished by their position in the sequence."
                            },
                            "length": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Length of linear sequences of amino acids contained in the subunit."
                            },
                            "sequenceAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The sequence information shall be provided enumerating the amino acids from N- to C-terminal end using standard single-letter amino acid codes. Uppercase shall be used for L-amino acids and lowercase for D-amino acids. Transcribed SubstanceProteins will always be described using the translated sequence; for synthetic peptide containing amino acids that are not represented with a single letter code an X should be used within the sequence. The modified amino acids will be distinguished by their position in the sequence."
                            },
                            "nTerminalModificationId": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Unique identifier for molecular fragment modification based on the ISO 11238 Substance ID."
                            },
                            "nTerminalModification": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the fragment modified at the N-terminal of the SubstanceProtein shall be specified."
                            },
                            "cTerminalModificationId": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Unique identifier for molecular fragment modification based on the ISO 11238 Substance ID."
                            },
                            "cTerminalModification": {
                                "$ref": "#/components/schemas/String",
                                "description": "The modification at the C-terminal shall be specified."
                            }
                        }
                    }
                ]
            },
            "Sugar": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "The Substance ID of the sugar or sugar-like component that make up the nucleotide."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the sugar or sugar-like component that make up the nucleotide."
                            },
                            "residueSite": {
                                "$ref": "#/components/schemas/String",
                                "description": "The residues that contain a given sugar will be captured. The order of given residues will be captured in the 5‘-3‘direction consistent with the base sequences listed above."
                            }
                        }
                    }
                ]
            },
            "MonomerSet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "ratioType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "startingMaterial": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/StartingMaterial",
                                    "description": "Todo."
                                }
                            }
                        }
                    }
                ]
            },
            "StartingMaterial": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "material": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "isDefining": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Todo."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/SubstanceAmount",
                                "description": "Todo."
                            }
                        }
                    }
                ]
            },
            "RepeatUnit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "orientationOfPolymerisation": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "repeatUnit": {
                                "$ref": "#/components/schemas/String",
                                "description": "Todo."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/SubstanceAmount",
                                "description": "Todo."
                            },
                            "degreeOfPolymerisation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DegreeOfPolymerisation",
                                    "description": "Todo."
                                }
                            },
                            "structuralRepresentation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/StructuralRepresentation",
                                    "description": "Todo."
                                }
                            }
                        }
                    }
                ]
            },
            "DegreeOfPolymerisation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "degree": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/SubstanceAmount",
                                "description": "Todo."
                            }
                        }
                    }
                ]
            },
            "StructuralRepresentation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "representation": {
                                "$ref": "#/components/schemas/String",
                                "description": "Todo."
                            },
                            "attachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "Todo."
                            }
                        }
                    }
                ]
            },
            "Classification": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "domain": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "classification": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "subtype": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Todo."
                                }
                            },
                            "source": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Todo."
                                }
                            }
                        }
                    }
                ]
            },
            "Gene": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "geneSequenceOrigin": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "gene": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "source": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Todo."
                                }
                            }
                        }
                    }
                ]
            },
            "GeneElement": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Todo."
                            },
                            "element": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Todo."
                            },
                            "source": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Todo."
                                }
                            }
                        }
                    }
                ]
            },
            "FractionDescription": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "fraction": {
                                "$ref": "#/components/schemas/String",
                                "description": "This element is capturing information about the fraction of a plant part, or human plasma for fractionation."
                            },
                            "materialType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The specific type of the material constituting the component. For Herbal preparations the particulars of the extracts (liquid/dry) is described in Specified Substance Group 1."
                            }
                        }
                    }
                ]
            },
            "Organism": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "family": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The family of an organism shall be specified."
                            },
                            "genus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The genus of an organism shall be specified; refers to the Latin epithet of the genus element of the plant/animal scientific name; it is present in names for genera, species and infraspecies."
                            },
                            "species": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The species of an organism shall be specified; refers to the Latin epithet of the species of the plant/animal; it is present in names for species and infraspecies."
                            },
                            "intraspecificType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The Intraspecific type of an organism shall be specified."
                            },
                            "intraspecificDescription": {
                                "$ref": "#/components/schemas/String",
                                "description": "The intraspecific description of an organism shall be specified based on a controlled vocabulary. For Influenza Vaccine, the intraspecific description shall contain the syntax of the antigen in line with the WHO convention."
                            },
                            "author": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Author",
                                    "description": "4.9.13.6.1 Author type (Conditional)."
                                }
                            },
                            "hybrid": {
                                "$ref": "#/components/schemas/Hybrid",
                                "description": "4.9.13.8.1 Hybrid species maternal organism ID (Optional)."
                            },
                            "organismGeneral": {
                                "$ref": "#/components/schemas/OrganismGeneral",
                                "description": "4.9.13.7.1 Kingdom (Conditional)."
                            }
                        }
                    }
                ]
            },
            "Author": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "authorType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of author of an organism species shall be specified. The parenthetical author of an organism species refers to the first author who published the plant/animal name (of any rank). The primary author of an organism species refers to the first author(s), who validly published the plant/animal name."
                            },
                            "authorDescription": {
                                "$ref": "#/components/schemas/String",
                                "description": "The author of an organism species shall be specified. The author year of an organism shall also be specified when applicable; refers to the year in which the first author(s) published the infraspecific plant/animal name (of any rank)."
                            }
                        }
                    }
                ]
            },
            "Hybrid": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "maternalOrganismId": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier of the maternal species constituting the hybrid organism shall be specified based on a controlled vocabulary. For plants, the parents aren’t always known, and it is unlikely that it will be known which is maternal and which is paternal."
                            },
                            "maternalOrganismName": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the maternal species constituting the hybrid organism shall be specified. For plants, the parents aren’t always known, and it is unlikely that it will be known which is maternal and which is paternal."
                            },
                            "paternalOrganismId": {
                                "$ref": "#/components/schemas/String",
                                "description": "The identifier of the paternal species constituting the hybrid organism shall be specified based on a controlled vocabulary."
                            },
                            "paternalOrganismName": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of the paternal species constituting the hybrid organism shall be specified."
                            },
                            "hybridType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The hybrid type of an organism shall be specified."
                            }
                        }
                    }
                ]
            },
            "OrganismGeneral": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "kingdom": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The kingdom of an organism shall be specified."
                            },
                            "phylum": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The phylum of an organism shall be specified."
                            },
                            "class": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The class of an organism shall be specified."
                            },
                            "order": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The order of an organism shall be specified,."
                            }
                        }
                    }
                ]
            },
            "PartDescription": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "part": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Entity of anatomical origin of source material within an organism."
                            },
                            "partLocation": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The detailed anatomic location when the part can be extracted from different anatomical locations of the organism. Multiple alternative locations may apply."
                            }
                        }
                    }
                ]
            },
            "Moiety": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "role": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Role that the moiety is playing."
                            },
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Identifier by which this moiety substance is known."
                            },
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Textual name for this moiety substance."
                            },
                            "stereochemistry": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Stereochemistry type."
                            },
                            "opticalActivity": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Optical activity type."
                            },
                            "molecularFormula": {
                                "$ref": "#/components/schemas/String",
                                "description": "Molecular formula."
                            },
                            "amountQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Quantitative value for this moiety."
                            },
                            "amountString": {
                                "$ref": "#/components/schemas/String",
                                "description": "Quantitative value for this moiety."
                            }
                        }
                    }
                ]
            },
            "Official": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "authority": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Which authority uses this official name."
                            },
                            "status": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The status of the official name."
                            },
                            "date": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "Date of official name change."
                            }
                        }
                    }
                ]
            },
            "Relationship": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "substanceReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A pointer to another substance, as a resource or just a representational code."
                            },
                            "substanceCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A pointer to another substance, as a resource or just a representational code."
                            },
                            "relationship": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "For example \"salt to parent\", \"active moiety\", \"starting material\"."
                            },
                            "isDefining": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "For example where an enzyme strongly bonds with a particular substance, this is a defining relationship for that enzyme, out of several possible substance relationships."
                            },
                            "amountQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other."
                            },
                            "amountRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other."
                            },
                            "amountRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other."
                            },
                            "amountString": {
                                "$ref": "#/components/schemas/String",
                                "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other."
                            },
                            "amountRatioLowLimit": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "For use when the numeric."
                            },
                            "amountType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "An operator for the amount, for example \"average\", \"approximately\", \"less than\"."
                            },
                            "source": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Supporting literature."
                                }
                            }
                        }
                    }
                ]
            },
            "Isotope": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Substance identifier for each non-natural or radioisotope."
                            },
                            "name": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Substance name for each non-natural or radioisotope."
                            },
                            "substitution": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of isotopic substitution present in a single substance."
                            },
                            "halfLife": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Half life - for a non-natural nuclide."
                            },
                            "molecularWeight": {
                                "$ref": "#/components/schemas/MolecularWeight",
                                "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids)."
                            }
                        }
                    }
                ]
            },
            "MolecularWeight": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "method": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The method by which the molecular weight was determined."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of molecular weight such as exact, average (also known as. number average), weight average."
                            },
                            "amount": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field."
                            }
                        }
                    }
                ]
            },
            "Representation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of structure (e.g. Full, Partial, Representative)."
                            },
                            "representation": {
                                "$ref": "#/components/schemas/String",
                                "description": "The structural representation as text string in a format e.g. InChI, SMILES, MOLFILE, CDX."
                            },
                            "attachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "An attached file with the structural representation."
                            }
                        }
                    }
                ]
            },
            "SuppliedItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The amount of supply that has been dispensed. Includes unit of measure."
                            },
                            "itemCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the medication, substance or device being dispensed. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list."
                            },
                            "itemReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Identifies the medication, substance or device being dispensed. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list."
                            }
                        }
                    }
                ]
            },
            "Output": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The name of the Output parameter."
                            },
                            "valueBase64Binary": {
                                "$ref": "#/components/schemas/Base64Binary",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueBoolean": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueCanonical": {
                                "$ref": "#/components/schemas/Canonical",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueCode": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueDateTime": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueDecimal": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueInstant": {
                                "$ref": "#/components/schemas/Instant",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueInteger": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueMarkdown": {
                                "$ref": "#/components/schemas/Markdown",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueOid": {
                                "$ref": "#/components/schemas/Oid",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valuePositiveInt": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueString": {
                                "$ref": "#/components/schemas/String",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueTime": {
                                "$ref": "#/components/schemas/Time",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueUnsignedInt": {
                                "$ref": "#/components/schemas/UnsignedInt",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueUri": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueUrl": {
                                "$ref": "#/components/schemas/Url",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueUuid": {
                                "$ref": "#/components/schemas/Uuid",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueAnnotation": {
                                "$ref": "#/components/schemas/Annotation",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueContactPoint": {
                                "$ref": "#/components/schemas/ContactPoint",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueCount": {
                                "$ref": "#/components/schemas/Count",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueDistance": {
                                "$ref": "#/components/schemas/Distance",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueHumanName": {
                                "$ref": "#/components/schemas/HumanName",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valuePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueSampledData": {
                                "$ref": "#/components/schemas/SampledData",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueContactDetail": {
                                "$ref": "#/components/schemas/ContactDetail",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueContributor": {
                                "$ref": "#/components/schemas/Contributor",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueDataRequirement": {
                                "$ref": "#/components/schemas/DataRequirement",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueExpression": {
                                "$ref": "#/components/schemas/Expression",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueParameterDefinition": {
                                "$ref": "#/components/schemas/ParameterDefinition",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueRelatedArtifact": {
                                "$ref": "#/components/schemas/RelatedArtifact",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueTriggerDefinition": {
                                "$ref": "#/components/schemas/TriggerDefinition",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueUsageContext": {
                                "$ref": "#/components/schemas/UsageContext",
                                "description": "The value of the Output parameter as a basic type."
                            },
                            "valueDosage": {
                                "$ref": "#/components/schemas/Dosage",
                                "description": "The value of the Output parameter as a basic type."
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "Restriction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "repetitions": {
                                "$ref": "#/components/schemas/PositiveInt",
                                "description": "Indicates the number of times the requested action should occur."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Over what time-period is fulfillment sought."
                            },
                            "recipient": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?"
                                }
                            }
                        }
                    }
                ]
            },
            "Closure": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "translation": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If cross-system closure is supported."
                            }
                        }
                    }
                ]
            },
            "Expansion": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An identifier that uniquely identifies this expansion of the valueset, based on a unique combination of the provided parameters, the system default parameters, and the underlying system code system versions etc. Systems may re-use the same identifier as long as those factors remain the same, and the expansion is the same, but are not required to do so. This is a business identifier."
                            },
                            "timestamp": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "The time at which the expansion was produced by the expanding system."
                            },
                            "total": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "The total number of concepts in the expansion. If the number of concept nodes in this resource is less than the stated number, then the server can return more using the offset parameter."
                            },
                            "offset": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "If paging is being used, the offset at which this resource starts.  I.e. this resource is a partial view into the expansion. If paging is not being used, this element SHALL NOT be present."
                            },
                            "parameter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Parameter",
                                    "description": "A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion."
                                }
                            },
                            "contains": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Contains",
                                    "description": "The codes that are contained in the value set expansion."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "timestamp"
                ]
            },
            "Translation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "needsMap": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether the client must identify the map."
                            }
                        }
                    }
                ],
                "required": [
                    "needsMap"
                ]
            },
            "ValidateCode": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "translations": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether translations are validated."
                            }
                        }
                    }
                ],
                "required": [
                    "translations"
                ]
            },
            "Setup": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "action": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Action",
                                    "description": "Action would contain either an operation or an assertion."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "action"
                ]
            },
            "Assert": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "label": {
                                "$ref": "#/components/schemas/String",
                                "description": "The label would be used for tracking/logging purposes by test engines."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "The description would be used by test engines for tracking and reporting purposes."
                            },
                            "direction": {
                                "type": "string",
                                "enum": [
                                    "response",
                                    "request"
                                ],
                                "description": "The direction to use for the assertion."
                            },
                            "compareToSourceId": {
                                "$ref": "#/components/schemas/String",
                                "description": "Id of the source fixture used as the contents to be evaluated by either the \"source/expression\" or \"sourceId/path\" definition."
                            },
                            "compareToSourceExpression": {
                                "$ref": "#/components/schemas/String",
                                "description": "The FHIRPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both."
                            },
                            "compareToSourcePath": {
                                "$ref": "#/components/schemas/String",
                                "description": "XPath or JSONPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both."
                            },
                            "contentType": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The mime-type contents to compare against the request or response message 'Content-Type' header."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/String",
                                "description": "The FHIRPath expression to be evaluated against the request or response message contents - HTTP headers and payload."
                            },
                            "headerField": {
                                "$ref": "#/components/schemas/String",
                                "description": "The HTTP header field name e.g. 'Location'."
                            },
                            "minimumId": {
                                "$ref": "#/components/schemas/String",
                                "description": "The ID of a fixture.  Asserts that the response contains at a minimum the fixture specified by minimumId."
                            },
                            "navigationLinks": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether or not the test execution performs validation on the bundle navigation links."
                            },
                            "operator": {
                                "type": "string",
                                "enum": [
                                    "equals",
                                    "notEquals",
                                    "in",
                                    "notIn",
                                    "greaterThan",
                                    "lessThan",
                                    "empty",
                                    "notEmpty",
                                    "contains",
                                    "notContains",
                                    "eval"
                                ],
                                "description": "The operator type defines the conditional behavior of the assert. If not defined, the default is equals."
                            },
                            "path": {
                                "$ref": "#/components/schemas/String",
                                "description": "The XPath or JSONPath expression to be evaluated against the fixture representing the response received from server."
                            },
                            "requestMethod": {
                                "type": "string",
                                "enum": [
                                    "delete",
                                    "get",
                                    "options",
                                    "patch",
                                    "post",
                                    "put",
                                    "head"
                                ],
                                "description": "The request method or HTTP operation code to compare against that used by the client system under test."
                            },
                            "requestURL": {
                                "$ref": "#/components/schemas/String",
                                "description": "The value to use in a comparison against the request URL path string."
                            },
                            "resource": {
                                "type": "string",
                                "enum": [
                                    "Address",
                                    "Age",
                                    "Annotation",
                                    "Attachment",
                                    "BackboneElement",
                                    "CodeableConcept",
                                    "Coding",
                                    "ContactDetail",
                                    "ContactPoint",
                                    "Contributor",
                                    "Count",
                                    "DataRequirement",
                                    "Distance",
                                    "Dosage",
                                    "Duration",
                                    "Element",
                                    "ElementDefinition",
                                    "Expression",
                                    "Extension",
                                    "HumanName",
                                    "Identifier",
                                    "MarketingStatus",
                                    "Meta",
                                    "Money",
                                    "MoneyQuantity",
                                    "Narrative",
                                    "ParameterDefinition",
                                    "Period",
                                    "Population",
                                    "ProdCharacteristic",
                                    "ProductShelfLife",
                                    "Quantity",
                                    "Range",
                                    "Ratio",
                                    "Reference",
                                    "RelatedArtifact",
                                    "SampledData",
                                    "Signature",
                                    "SimpleQuantity",
                                    "SubstanceAmount",
                                    "Timing",
                                    "TriggerDefinition",
                                    "UsageContext",
                                    "base64Binary",
                                    "boolean",
                                    "canonical",
                                    "code",
                                    "date",
                                    "dateTime",
                                    "decimal",
                                    "id",
                                    "instant",
                                    "integer",
                                    "markdown",
                                    "oid",
                                    "positiveInt",
                                    "string",
                                    "time",
                                    "unsignedInt",
                                    "uri",
                                    "url",
                                    "uuid",
                                    "xhtml",
                                    "Account",
                                    "ActivityDefinition",
                                    "AdverseEvent",
                                    "AllergyIntolerance",
                                    "Appointment",
                                    "AppointmentResponse",
                                    "AuditEvent",
                                    "Basic",
                                    "Binary",
                                    "BiologicallyDerivedProduct",
                                    "BodyStructure",
                                    "Bundle",
                                    "CapabilityStatement",
                                    "CarePlan",
                                    "CareTeam",
                                    "CatalogEntry",
                                    "ChargeItem",
                                    "ChargeItemDefinition",
                                    "Claim",
                                    "ClaimResponse",
                                    "ClinicalImpression",
                                    "CodeSystem",
                                    "Communication",
                                    "CommunicationRequest",
                                    "CompartmentDefinition",
                                    "Composition",
                                    "ConceptMap",
                                    "Condition",
                                    "Consent",
                                    "Contract",
                                    "Coverage",
                                    "CoverageEligibilityRequest",
                                    "CoverageEligibilityResponse",
                                    "DetectedIssue",
                                    "Device",
                                    "DeviceDefinition",
                                    "DeviceMetric",
                                    "DeviceRequest",
                                    "DeviceUseStatement",
                                    "DiagnosticReport",
                                    "DocumentManifest",
                                    "DocumentReference",
                                    "DomainResource",
                                    "EffectEvidenceSynthesis",
                                    "Encounter",
                                    "Endpoint",
                                    "EnrollmentRequest",
                                    "EnrollmentResponse",
                                    "EpisodeOfCare",
                                    "EventDefinition",
                                    "Evidence",
                                    "EvidenceVariable",
                                    "ExampleScenario",
                                    "ExplanationOfBenefit",
                                    "FamilyMemberHistory",
                                    "Flag",
                                    "Goal",
                                    "GraphDefinition",
                                    "Group",
                                    "GuidanceResponse",
                                    "HealthcareService",
                                    "ImagingStudy",
                                    "Immunization",
                                    "ImmunizationEvaluation",
                                    "ImmunizationRecommendation",
                                    "ImplementationGuide",
                                    "InsurancePlan",
                                    "Invoice",
                                    "Library",
                                    "Linkage",
                                    "List",
                                    "Location",
                                    "Measure",
                                    "MeasureReport",
                                    "Media",
                                    "Medication",
                                    "MedicationAdministration",
                                    "MedicationDispense",
                                    "MedicationKnowledge",
                                    "MedicationRequest",
                                    "MedicationStatement",
                                    "MedicinalProduct",
                                    "MedicinalProductAuthorization",
                                    "MedicinalProductContraindication",
                                    "MedicinalProductIndication",
                                    "MedicinalProductIngredient",
                                    "MedicinalProductInteraction",
                                    "MedicinalProductManufactured",
                                    "MedicinalProductPackaged",
                                    "MedicinalProductPharmaceutical",
                                    "MedicinalProductUndesirableEffect",
                                    "MessageDefinition",
                                    "MessageHeader",
                                    "MolecularSequence",
                                    "NamingSystem",
                                    "NutritionOrder",
                                    "Observation",
                                    "ObservationDefinition",
                                    "OperationDefinition",
                                    "OperationOutcome",
                                    "Organization",
                                    "OrganizationAffiliation",
                                    "Parameters",
                                    "Patient",
                                    "PaymentNotice",
                                    "PaymentReconciliation",
                                    "Person",
                                    "PlanDefinition",
                                    "Practitioner",
                                    "PractitionerRole",
                                    "Procedure",
                                    "Provenance",
                                    "Questionnaire",
                                    "QuestionnaireResponse",
                                    "RelatedPerson",
                                    "RequestGroup",
                                    "ResearchDefinition",
                                    "ResearchElementDefinition",
                                    "ResearchStudy",
                                    "ResearchSubject",
                                    "Resource",
                                    "RiskAssessment",
                                    "RiskEvidenceSynthesis",
                                    "Schedule",
                                    "SearchParameter",
                                    "ServiceRequest",
                                    "Slot",
                                    "Specimen",
                                    "SpecimenDefinition",
                                    "StructureDefinition",
                                    "StructureMap",
                                    "Subscription",
                                    "Substance",
                                    "SubstanceNucleicAcid",
                                    "SubstancePolymer",
                                    "SubstanceProtein",
                                    "SubstanceReferenceInformation",
                                    "SubstanceSourceMaterial",
                                    "SubstanceSpecification",
                                    "SupplyDelivery",
                                    "SupplyRequest",
                                    "Task",
                                    "TerminologyCapabilities",
                                    "TestReport",
                                    "TestScript",
                                    "ValueSet",
                                    "VerificationResult",
                                    "VisionPrescription"
                                ],
                                "description": "The type of the resource.  See http://build.fhir.org/resourcelist.html."
                            },
                            "response": {
                                "type": "string",
                                "enum": [
                                    "okay",
                                    "created",
                                    "noContent",
                                    "notModified",
                                    "bad",
                                    "forbidden",
                                    "notFound",
                                    "methodNotAllowed",
                                    "conflict",
                                    "gone",
                                    "preconditionFailed",
                                    "unprocessable"
                                ],
                                "description": "okay | created | noContent | notModified | bad | forbidden | notFound | methodNotAllowed | conflict | gone | preconditionFailed | unprocessable."
                            },
                            "responseCode": {
                                "$ref": "#/components/schemas/String",
                                "description": "The value of the HTTP response code to be tested."
                            },
                            "sourceId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against."
                            },
                            "validateProfileId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "The ID of the Profile to validate against."
                            },
                            "value": {
                                "$ref": "#/components/schemas/String",
                                "description": "The value to compare to."
                            },
                            "warningOnly": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether or not the test execution will produce a warning only on error for this assert."
                            }
                        }
                    }
                ],
                "required": [
                    "warningOnly"
                ]
            },
            "Teardown": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "action": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Action",
                                    "description": "The teardown action will only contain an operation."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "action"
                ]
            },
            "Test": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "The name of this test used for tracking/logging purposes by test engines."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A short description of the test used by test engines for tracking and reporting purposes."
                            },
                            "action": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Action",
                                    "description": "Action would contain either an operation or an assertion."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "action"
                ]
            },
            "Fixture": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "autocreate": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether or not to implicitly create the fixture during setup. If true, the fixture is automatically created on each server being tested during setup, therefore no create operation is required for this fixture in the TestScript.setup section."
                            },
                            "autodelete": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether or not to implicitly delete the fixture during teardown. If true, the fixture is automatically deleted on each server being tested during teardown, therefore no delete operation is required for this fixture in the TestScript.teardown section."
                            },
                            "resource": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the resource (containing the contents of the resource needed for operations)."
                            }
                        }
                    }
                ],
                "required": [
                    "autocreate",
                    "autodelete"
                ]
            },
            "Metadata": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "link": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Link",
                                    "description": "A link to the FHIR specification that this test is covering."
                                }
                            },
                            "capability": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Capability",
                                    "description": "Capabilities that must exist and are assumed to function correctly on the FHIR server being tested."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "capability"
                ]
            },
            "Origin": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "index": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Abstract name given to an origin server in this test script.  The name is provided as a number starting at 1."
                            },
                            "profile": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "The type of origin profile the test system supports."
                            }
                        }
                    }
                ],
                "required": [
                    "index",
                    "profile"
                ]
            },
            "RequestHeader": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "field": {
                                "$ref": "#/components/schemas/String",
                                "description": "The HTTP header field e.g. \"Accept\"."
                            },
                            "value": {
                                "$ref": "#/components/schemas/String",
                                "description": "The value of the header e.g. \"application/fhir+xml\"."
                            }
                        }
                    }
                ],
                "required": [
                    "field",
                    "value"
                ]
            },
            "Variable": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/String",
                                "description": "Descriptive name for this variable."
                            },
                            "defaultValue": {
                                "$ref": "#/components/schemas/String",
                                "description": "A default, hard-coded, or user-defined value for this variable."
                            },
                            "description": {
                                "$ref": "#/components/schemas/String",
                                "description": "A free text natural language description of the variable and its purpose."
                            },
                            "expression": {
                                "$ref": "#/components/schemas/String",
                                "description": "The FHIRPath expression to evaluate against the fixture body. When variables are defined, only one of either expression, headerField or path must be specified."
                            },
                            "headerField": {
                                "$ref": "#/components/schemas/String",
                                "description": "Will be used to grab the HTTP header field value from the headers that sourceId is pointing to."
                            },
                            "hint": {
                                "$ref": "#/components/schemas/String",
                                "description": "Displayable text string with hint help information to the user when entering a default value."
                            },
                            "path": {
                                "$ref": "#/components/schemas/String",
                                "description": "XPath or JSONPath to evaluate against the fixture body.  When variables are defined, only one of either expression, headerField or path must be specified."
                            },
                            "sourceId": {
                                "$ref": "#/components/schemas/Id",
                                "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against within this variable."
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "Compose": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "lockedDate": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The Locked Date is  the effective date that is used to determine the version of all referenced Code Systems and Value Set Definitions included in the compose that are not already tied to a specific version."
                            },
                            "inactive": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "Whether inactive codes - codes that are not approved for current use - are in the value set. If inactive = true, inactive codes are to be included in the expansion, if inactive = false, the inactive codes will not be included in the expansion. If absent, the behavior is determined by the implementation, or by the applicable $expand parameters (but generally, inactive codes would be expected to be included)."
                            },
                            "include": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Include",
                                    "description": "Include one or more codes from a code system or other value set(s)."
                                }
                            },
                            "exclude": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Include",
                                    "description": "Exclude one or more codes from the value set based on code system filters and/or other value sets."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "include"
                ]
            },
            "Include": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "system": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI which is the code system from which the selected codes come from."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The version of the code system that the codes are selected from, or the special version '*' for all versions."
                            },
                            "concept": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Concept",
                                    "description": "Specifies a concept to be included or excluded."
                                }
                            },
                            "filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Filter",
                                    "description": "Select concepts by specify a matching criterion based on the properties (including relationships) defined by the system, or on filters defined by the system. If multiple filters are specified, they SHALL all be true."
                                }
                            },
                            "valueSet": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Canonical",
                                    "description": "Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the union of the contents of all of the referenced value sets."
                                }
                            }
                        }
                    }
                ]
            },
            "Contains": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "system": {
                                "$ref": "#/components/schemas/Uri",
                                "description": "An absolute URI which is the code system in which the code for this item in the expansion is defined."
                            },
                            "abstract": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value."
                            },
                            "inactive": {
                                "$ref": "#/components/schemas/Boolean",
                                "description": "If the concept is inactive in the code system that defines it. Inactive codes are those that are no longer to be used, but are maintained by the code system for understanding legacy data. It might not be known or specified whether an concept is inactive (and it may depend on the context of use)."
                            },
                            "version": {
                                "$ref": "#/components/schemas/String",
                                "description": "The version of the code system from this code was taken. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                                "$ref": "#/components/schemas/Code",
                                "description": "The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set."
                            },
                            "display": {
                                "$ref": "#/components/schemas/String",
                                "description": "The recommended display for this item in the expansion."
                            },
                            "designation": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Designation",
                                    "description": "Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation."
                                }
                            },
                            "contains": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Contains",
                                    "description": "Other codes and entries contained under this entry in the hierarchy."
                                }
                            }
                        }
                    }
                ]
            },
            "Attestation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "who": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual or organization attesting to information."
                            },
                            "onBehalfOf": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "When the who is asserting on behalf of another (organization or individual)."
                            },
                            "communicationMethod": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The method by which attested information was submitted/retrieved (manual; API; Push)."
                            },
                            "date": {
                                "$ref": "#/components/schemas/Date",
                                "description": "The date the information was attested to."
                            },
                            "sourceIdentityCertificate": {
                                "$ref": "#/components/schemas/String",
                                "description": "A digital identity certificate associated with the attestation source."
                            },
                            "proxyIdentityCertificate": {
                                "$ref": "#/components/schemas/String",
                                "description": "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source."
                            },
                            "proxySignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "Signed assertion by the proxy entity indicating that they have the right to submit attested information on behalf of the attestation source."
                            },
                            "sourceSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "Signed assertion by the attestation source that they have attested to the information."
                            }
                        }
                    }
                ]
            },
            "PrimarySource": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "who": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the primary source."
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source)."
                                }
                            },
                            "communicationMethod": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Method for communicating with the primary source (manual; API; Push)."
                                }
                            },
                            "validationStatus": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Status of the validation of the target against the primary source (successful; failed; unknown)."
                            },
                            "validationDate": {
                                "$ref": "#/components/schemas/DateTime",
                                "description": "When the target was validated against the primary source."
                            },
                            "canPushUpdates": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Ability of the primary source to push updates/alerts (yes; no; undetermined)."
                            },
                            "pushTypeAvailable": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source)."
                                }
                            }
                        }
                    }
                ]
            },
            "Validator": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "organization": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the organization validating information."
                            },
                            "identityCertificate": {
                                "$ref": "#/components/schemas/String",
                                "description": "A digital identity certificate associated with the validator."
                            },
                            "attestationSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "Signed assertion by the validator that they have validated the information."
                            }
                        }
                    }
                ],
                "required": [
                    "organization"
                ]
            },
            "LensSpecification": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "product": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Identifies the type of vision correction product which is required for the patient."
                            },
                            "eye": {
                                "type": "string",
                                "enum": [
                                    "right",
                                    "left"
                                ],
                                "description": "The eye for which the lens specification applies."
                            },
                            "sphere": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Lens power measured in dioptres (0.25 units)."
                            },
                            "cylinder": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Power adjustment for astigmatism measured in dioptres (0.25 units)."
                            },
                            "axis": {
                                "$ref": "#/components/schemas/Integer",
                                "description": "Adjustment for astigmatism measured in integer degrees."
                            },
                            "prism": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Prism",
                                    "description": "Allows for adjustment on two axis."
                                }
                            },
                            "add": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Power adjustment for multifocal lenses measured in dioptres (0.25 units)."
                            },
                            "power": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Contact lens power measured in dioptres (0.25 units)."
                            },
                            "backCurve": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Back curvature measured in millimetres."
                            },
                            "diameter": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Contact lens diameter measured in millimetres."
                            },
                            "duration": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The recommended maximum wear period for the lens."
                            },
                            "color": {
                                "$ref": "#/components/schemas/String",
                                "description": "Special color or pattern."
                            },
                            "brand": {
                                "$ref": "#/components/schemas/String",
                                "description": "Brand recommendations or restrictions."
                            },
                            "note": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Annotation",
                                    "description": "Notes for special requirements such as coatings and lens materials."
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "product",
                    "eye"
                ]
            },
            "Prism": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "amount": {
                                "$ref": "#/components/schemas/Decimal",
                                "description": "Amount of prism to compensate for eye alignment in fractional units."
                            },
                            "base": {
                                "type": "string",
                                "enum": [
                                    "up",
                                    "down",
                                    "in",
                                    "out"
                                ],
                                "description": "The relative base, or reference lens edge, for the prism."
                            }
                        }
                    }
                ],
                "required": [
                    "amount",
                    "base"
                ]
            }
        }
    }
}