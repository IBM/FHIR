var store = [{
        "title": "Home",
        "collection": "1.0",
        "excerpt":"","categories": [],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/",
        "teaser":null},{
        "title": "Introduction",
        "collection": "1.0",
        "excerpt":"IBM FHIR Server Introduction IBM FHIR Server is capable of processing, validating, and storing healthcare data in an industry-standard format that can be used for running search and other reporting capabilities. Built for the enterprise and offering cloud portability, it’s an integral component of a data integration pipeline. By applying standardized semantics and data models in accordance with the HL7 Fast Healthcare Interoperability Resources (FHIR) specification, IBM FHIR Server makes it easier to maximize insights across systems. It enables capabilities like advanced analytics and machine learning, which can drive better health outcomes and organizational impact. IBM FHIR Server is built on an open-source Java™ implementation of HL7 FHIR Release 4. Organizations can receive enterprise-grade services and support, including troubleshooting, maintenance, and automated upgrades. ","categories": ["about"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/about/overview/",
        "teaser":null},{
        "title": "Documentation",
        "collection": "1.0",
        "excerpt":"Documentation   IBM FHIR Server WebSite  IBM FHIR Server User’s Guide  DockerHub: IBM FHIR Server - Schema Tool  DockerHub: IBM FHIR Server","categories": ["about"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/about/documentation/",
        "teaser":null},{
        "title": "License",
        "collection": "1.0",
        "excerpt":"License The IBM FHIR Server is licensed under the Apache 2.0 license. Full license text is available at LICENSE. FHIR® is the registered trademark of HL7 and is used with the permission of HL7. Use of the FHIR trademark does not constitute endorsement of this product by HL7. IBM and the IBM logo are trademarks of International Business Machines Corporation, registered in many jurisdictions worldwide. Other product and service names might be trademarks of IBM or other companies. A current list of IBM trademarks is available on https://ibm.com/trademark. ","categories": ["about"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/about/license/",
        "teaser":null},{
        "title": "Installing IBM FHIR Server",
        "collection": "1.0",
        "excerpt":"  The IBM FHIR Server operator can be installed in an on-line cluster through the OpenShift CLI.  Multiple instances of the IBM FHIR Server operator may be deployed into different namespaces, one per namespace.Limitations   The Operator may be deployed into different namespaces, one per namespace.  The Operator has limited support for IBM FHIR Server configuration.Schema upgrades require downtime: The IBM FHIR Server requires downtime to complete upgrades of the IBM FHIR Server’s relational data. During the upgrade Values tables are refreshed, updated and optimized for the workloads that the FHIR specification supports. ","categories": ["installing"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/installing/trying-out/",
        "teaser":null},{
        "title": "Prerequisites",
        "collection": "1.0",
        "excerpt":"Prerequisites Red Hat OpenShift Container Platform 4.5 or later installed on one of the following platforms:   Linux x86_64Connectivity to any of the following database systems:   IBM Db2 11.5 or later  PostgreSQL 12.1 or laterConnectivity to any of the following event streaming platforms (optional):   Kafka 1.0 or higherStorage   Storage for the database instance that the IBM FHIR Server connects to is outside the scope of this Operator.Resources Required       Describe Minimum System Resources Required     Minimum scheduling capacity:                             Software          Memory (GB)          CPU (cores)          Disk (GB)          Nodes                                      IBM FHIR Server          6          2          N/A          2                          Total          6          2          N/A          2                      Recommended scheduling capacity:                             Software          Memory (GB)          CPU (cores)          Disk (GB)          Nodes                                      IBM FHIR Server          64          16          N/A          3                          Total          64          16          N/A          3                      Note: There is an initContainer with the IBM FHIR Server called the IBM FHIR Server Schema Tool. This tool has a small memory footprint used on initialization of a pod and is accounted for in the above capacities.   ","categories": ["installing"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/installing/prerequisites/",
        "teaser":null},{
        "title": "Installing",
        "collection": "1.0",
        "excerpt":"The following sections provide instructions about installing IBM FHIR Server on the Red Hat OpenShift Container Platform. The instructions are based on using the OpenShift Container Platform web console and oc command line utility. When deploying in an air-gapped environment, link to airgap instructions. Overview IBM FHIR Server is an operator-based release and uses custom resources to define your IBM FHIR Server configurations. The IBM FHIR Server operator uses the custom resources to deploy and manage the entire lifecycle of your IBM FHIR Server instances. Custom resources are presented as YAML configuration documents that define instances of the IBMFHIRServer custom resource type. Installing IBM FHIR Server has two phases:   Install the IBM FHIR Server operator: this will deploy the operator that will install and manage your IBM FHIR Server instances.  Install one or more instances of IBM FHIR Server by using the operator.Before you begin   Ensure you have set up your environment , including setting up your OpenShift Container Platform.  Obtain the connection details for your OpenShift Container Platform cluster from your administrator.Create a project (namespace) Create a namespace into which the IBM FHIR Server instance will be installed by creating a project.When you create a project, a namespace with the same name is also created. Ensure you use a namespace that is dedicated to a single instance of IBM FHIR Server. A single namespace per instance also allows for finer control of user accesses. Important: Do not use any of the default or system namespaces to install an instance of IBM FHIR Server (some examples of these are: default, kube-system, kube-public, and openshift-operators). Add the IBM FHIR Server operator to the catalog Before you can install the IBM FHIR Server operator and use it to create instances of IBM FHIR Server, you must have the IBM Operator Catalog available in your cluster. If you have other IBM products installed in your cluster, then you already have the IBM Operator Catalog available, and you can continue to installing the IBM FHIR Server operator. If you are installing IBM FHIR Server as the first IBM product in your cluster, complete the following steps. To make the IBM FHIR Server operator available in the OpenShift OperatorHub catalog, create the following YAML files and apply them as  follows. To add the IBM Operator Catalog:       Create a file for the IBM Operator Catalog source with the following content, and save as IBMCatalogSource.yaml:     apiVersion: operators.coreos.com/v1alpha1kind: CatalogSourcemetadata:   name: ibm-operator-catalog   namespace: openshift-marketplacespec:   displayName: \"IBM Operator Catalog\"   publisher: IBM   sourceType: grpc   image: docker.io/ibmcom/ibm-operator-catalog   updateStrategy:     registryPoll:       interval: 45m        Log in to your Red Hat OpenShift Container Platform as a cluster administrator by using the oc CLI.      Apply the source by using the following command:     oc apply -f IBMCatalogSource.yaml   The IBM Operator Catalog source is added to the OperatorHub catalog, making the IBM FHIR Server operator available to install. ","categories": ["installing"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/installing/installing/",
        "teaser":null},{
        "title": "Configuring",
        "collection": "1.0",
        "excerpt":"Prerequisites Installing an instance of IBM FHIR Server requires an installed IBM FHIR Server Operator.See inventory item ibmFhirServerOperatorSetup for instructions to install the IBM FHIR Server Operator. Installing an instance of IBM FHIR Server requires at least namespace administration privileges. If you intend to use CLI commands, ensure you have the following installed:   IBM Cloud Pak CLI (cloudctl)  Red Hat OpenShift Container Platform CLI (oc)Creating an instance Complete the following steps to create an instance of IBM FHIR Server. 1. Define IBM FHIR Server configuration Create Secret resource containing IBM FHIR Server configuration.   Define values for the following secret keys:      IBM_FHIR_SCHEMA_TOOL_INPUT     The value must be set to the contents of the configuration file for IBM FHIR Server Schema Tool.     See IBM FHIR Server Schema Tool for how to create a configuration file.     Put the contents of the configuration file in a file named persistence.json.         IBM_FHIR_SERVER_CONFIG     The value must be set to the contents of the fhir-server-config.json configuration file for IBM FHIR Server.     See IBM FHIR Server for how to create a fhir-server-config.json configuration file.     Put the contents of the configuration file in a file named fhir-server-config.json.         IBM_FHIR_SERVER_CERT     If using Postgres as the database, this value must be set to the public key of the intermediate CA certificate.     Put the public key of the intermediate CA certificate in a file named db.cert.     If using Db2 as the database, leave the file named db.cert empty.         IBM_FHIR_SERVER_ADMIN_PASSWORD     The value must be set to the admin password to use for the IBM FHIR Server.     Put the admin password in a file named admin.txt.         IBM_FHIR_SERVER_USER_PASSWORD     The value must be set to the user password to use for the IBM FHIR Server.     Put the user password in a file named user.txt.         IBM_FHIR_SERVER_HOST     The value must be set to the contents of a configuration file for defining the host.     See Defining the host for how to define the host.     Put the contents of the configuration file in a file named host.xml.     If you do not want to define the host, leave the file named host.xml empty.     Create the secret from the files.  $ oc create secret generic &lt;secret-name&gt; \\      --from-file=IBM_FHIR_SCHEMA_TOOL_INPUT=./persistence.json \\      --from-file=IBM_FHIR_SERVER_CONFIG=./fhir-server-config.json \\      --from-file=IBM_FHIR_SERVER_CERT=./db.cert \\      --from-file=IBM_FHIR_SERVER_ADMIN_PASSWORD=./admin.txt \\      --from-file=IBM_FHIR_SERVER_USER_PASSWORD=./user.txt \\      --from-file=IBM_FHIR_SERVER_HOSTNAME=./host.xml \\      --namespace=&lt;target-namespace&gt;  &lt;secret-name&gt; is the name of the secret to contain the IBM FHIR Server configuration.  &lt;target-namespace&gt; is the target namespace.2. Create IBM FHIR Server instance Create an instance of IBM FHIR Server of the following methods: Red Hat OpenShift Container Platform web console       Log into the OpenShift Container Platform web console using your login credentials.         Navigate to Installed Operators and click on IBM FHIR Server.         Click Create Instance on the IBMFHIRServer tile.         Enter a name for the instance, and enter the name of the Secret resource containing the IBM FHIR Server configuration.         Click Create.   Red Hat OpenShift Container Platform CLI   Create an IBMFHIRServer resource in the target namespace by editing the namespace and secret name in the sample file, files/fhirserver_v1beta1_ibmfhirserver.yaml, and then apply the file.  $ oc apply -f files/fhirserver_v1beta1_ibmfhirserver.yamlIBM Cloud Pak CLI   Run the apply-custom-resources action.  $ cloudctl case launch \\      --case case/ibm-fhir-server-case \\      --namespace &lt;target-namespace&gt; \\      --inventory ibmFhirServerOperator \\      --action apply-custom-resources \\      --args \"--secretName &lt;secret-name&gt;\"  &lt;target-namespace&gt; is the target namespace.  &lt;secret-name&gt; is the name of the Secret resource containing the IBM FHIR Server configuration.3. Accessing IBM FHIR Server instance   Verify the IBM FHIR Server instance is functional.  $ oc get ibmfhirservers -n &lt;target-namespace&gt;      &lt;target-namespace&gt; is the target namespace.     The READY value of “True” indicates the IBM FHIR Server instance is functional.     Connect to the IBM FHIR Server instance.  $ oc get services -n &lt;target-namespace&gt;      &lt;target-namespace&gt; is the target namespace.     To make external connections to the IBM FHIR Server instance, either port-forward or create a route to the service.     See the IBM FHIR Server User’s Guide for how to verify that it’s running properly by invoking the $healthcheck endpoint.   Scaling By default, the deployment will contain 2 replicas. Use the oc scale command to manually scale an IBM FHIR Server deployment. Defining the host It is recommended, for security purposes, to explicitly define the hosts for which the IBM FHIR Server will handle requests. For any Route resources created for the IBM FHIR Server, ensure those hosts (e.g. test-fhir-server) are represented in the configuration file. &lt;server description=\"fhir-server\"&gt;    &lt;httpEndpoint host=\"*\" httpPort=\"-1\" httpsPort=\"9443\" id=\"defaultHttpEndpoint\" onError=\"FAIL\" /&gt;    &lt;virtualHost id=\"default_host\" allowedFromEndpointRef=\"defaultHttpEndpoint\"&gt;      &lt;hostAlias&gt;*:9443&lt;/hostAlias&gt;      &lt;hostAlias&gt;test-fhir-server:443&lt;/hostAlias&gt;    &lt;/virtualHost&gt;&lt;/server&gt;Deleting an instance Delete an instance of IBM FHIR Server using the Red Hat OpenShift Container Platform web console.       Log into the OpenShift Container Platform web console using your login credentials.         Navigate to Installed Operators and click on IBM FHIR Server.         Navigate to the IBMFHIRServer tab and click on the instance you want to delete.         Select Delete IBMFHIRServer from the Actions menu.   ","categories": ["installing"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/installing/configuring/",
        "teaser":null},{
        "title": "Air Gap Installation",
        "collection": "1.0",
        "excerpt":"Air Gap Installation Since air gap environments do not have access to the public internet, and therefore no access to DockerHub, the following preparation steps are necessary to make the required images accessable to the Red Hat OpenShift Container Platform cluster. If the Red Hat OpenShift Container Platform cluster has a Bastion host, ensure that the Bastion host can access:   The public internet to download the CASE and images.  The target (air gap) image registry where all the images will be mirrored to.  The Red Hat OpenShift Container Platform cluster to install the Operator on.In the absence of a Bastion host, a portable host with access to the public internet may used. By downloading the CASE and images onto the portable host, and then transporting the portable host into the air gap environment, the images can then be mirrored to the target (air gap) image registry. If using a Bastion host, refer to Using a Bastion host.If using a portable host, refer to Using a portable host. Using a Bastion host 1. Prepare the Bastion host Ensure you have the following installed on the Bastion host:   Docker CLI (docker)  IBM Cloud Pak CLI (cloudctl)  Red Hat OpenShift Container Platform CLI (oc)  Skopeo (skopeo)2. Download the CASE   Create a local directory in which to save the CASE.$ mkdir -p $HOME/offline  Save the CASE.$ cloudctl case save --case &lt;case-path&gt; --outputdir $HOME/offline  &lt;case-path&gt; is the path or URL to the CASE to save.The following output is displayed: Downloading and extracting the CASE ...- SuccessRetrieving CASE version ...- SuccessValidating the CASE ...- SuccessCreating inventory ...- SuccessFinding inventory items- SuccessResolving inventory items ...Parsing inventory items- Success  Verify the CASE (.tgz) file and images (.csv) file have been downloaded.$ ls $HOME/offlinechartsibm-fhir-server-case-&lt;version&gt;-charts.csvibm-fhir-server-case-&lt;version&gt;-images.csvibm-fhir-server-case-&lt;version&gt;.tgz  &lt;version&gt; is the CASE version.3. Log into cluster Log into the Red Hat OpenShift Container Platform cluster as a cluster administrator using the oc login command. 4. Configure target registry authentication secret For IBM FHIR Server, all images are available publicly in DockerHub, so no authentication secret for the source (public) registry is needed.   Create the authentication secret for the target (air gap) registry.$ cloudctl case launch \\    --case $HOME/offline/&lt;case-file&gt; \\    --inventory ibmFhirServerOperatorSetup \\    --action configure-creds-airgap \\    --args \"--registry &lt;target-registry&gt; --user &lt;registry-user&gt; --pass &lt;registry-password&gt;\"  &lt;case-file&gt; is the CASE file.  &lt;target-registry&gt; is the target registry.  &lt;registry-user&gt; is the username for the target registry.  &lt;registry-password&gt; is the password for the target registry.The credentials are saved to $HOME/.airgap/secrets/&lt;target-registry&gt;.json 5. Mirror images to target registry   Copy the images in the CASE from the source (public) registry to the target (air gap) registry.$ cloudctl case launch \\    --case $HOME/offline/&lt;case-file&gt; \\    --inventory ibmFhirServerOperatorSetup \\    --action mirror-images \\    --args \"--registry &lt;target-registry&gt; --inputDir $HOME/offline\"  &lt;case-file&gt; is the CASE file.  &lt;target-registry&gt; is the target registry.6. Configure cluster to access target registry   Configure a global image pull secret and ImageContentSourcePolicy resource.$ cloudctl case launch \\    --case $HOME/offline/&lt;case-file&gt; \\    --namespace openshift-marketplace \\    --inventory ibmFhirServerOperatorSetup \\    --action configure-cluster-airgap \\    --args \"--registry &lt;target-registry&gt; --inputDir $HOME/offline\"  &lt;case-file&gt; is the CASE file.  &lt;target-registry&gt; is the target registry.WARNING: This step may restart all cluster nodes. The cluster resources might be unavailable until the time the new pull secret is applied.   Optional: If you are using an insecure target registry, you must add the target registry to the cluster insecureRegistries list.$ oc patch image.config.openshift.io/cluster --type=merge \\    -p '{\"spec\":{\"registrySources\":{\"insecureRegistries\":[\"'&lt;target-registry&gt;'\"]}}}'  &lt;target-registry&gt; is the target registry.7. Proceed with installation Now that the air gap installation preparation steps are complete, you may continue with the IBM FHIR Server Operator installation. Using a portable host 1. Prepare the portable host Ensure you have the following installed on the portable host:   Docker CLI (docker)  IBM Cloud Pak CLI (cloudctl)  Red Hat OpenShift Container Platform CLI (oc)  Skopeo (skopeo)2. Download the CASE   Create a local directory in which to save the CASE.$ mkdir -p $HOME/offline  Save the CASE.$ cloudctl case save --case &lt;case-path&gt; --outputdir $HOME/offline  &lt;case-path&gt; is the path or URL to the CASE to save.The following output is displayed: Downloading and extracting the CASE ...- SuccessRetrieving CASE version ...- SuccessValidating the CASE ...- SuccessCreating inventory ...- SuccessFinding inventory items- SuccessResolving inventory items ...Parsing inventory items- Success3. Configure portable registry and authentication secret For IBM FHIR Server, all images are available publicly in DockerHub, so no authentication secret for the source (public) registry is needed.   Initialize the portable registry.$ cloudctl case launch \\    --case $HOME/offline/&lt;case-file&gt; \\    --inventory ibmFhirServerOperatorSetup \\    --action init-registry \\    --args \"--registry localhost --user &lt;registry-user&gt; --pass &lt;registry-password&gt; \\        --dir $HOME/offline/imageregistry\"  &lt;case-file&gt; is the CASE file.  &lt;registry-user&gt; is the username for the registry, which is initialized to this value.  &lt;registry-password&gt; is the password for the registry, which is initialized to this value.  Start the portable registry.$ cloudctl case launch \\    --case $HOME/offline/&lt;case-file&gt; \\    --inventory ibmFhirServerOperatorSetup \\    --action start-registry \\    --args \"--registry localhost --port 443 --user &lt;registry-user&gt; --pass &lt;registry-password&gt; \\        --dir $HOME/offline/imageregistry\"  &lt;case-file&gt; is the CASE file.  &lt;registry-user&gt; is the username for the registry.  &lt;registry-password&gt; is the password for the registry.  Create the authentication secret for the portable registry.$ cloudctl case launch \\    --case $HOME/offline/&lt;case-file&gt; \\    --inventory ibmFhirServerOperatorSetup \\    --action configure-creds-airgap \\    --args \"--registry localhost:443 --user &lt;registry-user&gt; --pass &lt;registry-password&gt;\"  &lt;case-file&gt; is the CASE file.  &lt;registry-user&gt; is the username for the registry.  &lt;registry-password&gt; is the password for the registry.The credentials are saved to $HOME/.airgap/secrets/localhost:443.json 4. Mirror images to portable registry   The following step copies the images in the CASE from the source (public) registry to the portable registry.$ cloudctl case launch \\    --case $HOME/offline/&lt;case-file&gt; \\    --inventory ibmFhirServerOperatorSetup \\    --action mirror-images \\    --args \"--registry localhost:443 --inputDir $HOME/offline\"  &lt;case-file&gt; is the CASE file.5. Transport portable device Now that the images are in the portable registry, transport the portable host into the air gap environment. 6. Log into the cluster Log into the Red Hat OpenShift Container Platform cluster as a cluster administrator using the oc login command. 7. Configure target registry authentication secret   Create the authentication secret for the target (air gap) registry.$ cloudctl case launch \\    --case $HOME/offline/&lt;case-file&gt; \\    --inventory ibmFhirServerOperatorSetup \\    --action configure-creds-airgap \\    --args \"--registry &lt;target-registry&gt; --user &lt;registry-user&gt; --pass &lt;registry-password&gt;\"  &lt;case-file&gt; is the CASE file.  &lt;target-registry&gt; is the target registry.  &lt;registry-user&gt; is the username for the target registry.  &lt;registry-password&gt; is the password for the target registry.The credentials are saved to $HOME/.airgap/secrets/$TARGET_REGISTRY.json 8. Mirror images to target registry   The following step copies the images in the CASE from the portable registry to the target (air gap) registry.$ cloudctl case launch \\    --case $HOME/offline/&lt;case-file&gt; \\    --inventory ibmFhirServerOperatorSetup \\    --action mirror-images \\    --args \"--fromRegistry localhost:443 --registry &lt;target-registry&gt; --inputDir $HOME/offline\"  &lt;case-file&gt; is the CASE file.  &lt;target-registry&gt; is the target registry.9. Configure cluster to access target registry   Configure a global image pull secret and ImageContentSourcePolicy resource.$ cloudctl case launch \\    --case $HOME/offline/&lt;case-file&gt; \\    --namespace openshift-marketplace \\    --inventory ibmFhirServerOperatorSetup \\    --action configure-cluster-airgap \\    --args \"--registry &lt;target-registry&gt; --inputDir $HOME/offline\"  &lt;case-file&gt; is the CASE file.  &lt;target-registry&gt; is the target registry.WARNING: This step may restart all cluster nodes. The cluster resources might be unavailable until the time the new pull secret is applied.   Optional: If you are using an insecure target registry, you must add the target registry to the cluster insecureRegistries list.$ oc patch image.config.openshift.io/cluster --type=merge \\    -p '{\"spec\":{\"registrySources\":{\"insecureRegistries\":[\"'&lt;target-registry&gt;'\"]}}}'  &lt;target-registry&gt; is the target registry.10. Proceed with installation Now that the air gap installation preparation steps are complete, you may continue with the installation. ","categories": ["installing"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/installing/air-gap-installation/",
        "teaser":null},{
        "title": "Tracking license consumption of IBM FHIR Server",
        "collection": "1.0",
        "excerpt":"Tracking license consumption of IBM FHIR Server License Service is required for monitoring and measuring license usage of IBM FHIR Server in accord with the pricing rule for containerized environments. Manual license measurements are not allowed. Deploy License Service on all clusters where IBM FHIR Server is installed. The IBM FHIR Server Operator contains an integrated service for measuring the license usage at the cluster level for license evidence purposes. Overview The integrated licensing solution collects and stores the license usage information which can be used for audit purposes and for tracking license consumption in cloud environments. The solution works in the background and does not require any configuration. Only one instance of the License Service is deployed per cluster regardless of the number of Cloud Paks and containerized products that you have installed on the cluster. Deploying License Service Deploy License Service on each cluster where IBM FHIR Server is installed. License Service can be deployed on any Kubernetes cluster. For more information about License Service, how to install and use it, see the License Service documentation. Validating if License Service is deployed on the cluster To ensure license reporting continuity for license compliance purposes make sure that License Service is successfully deployed. It is recommended to periodically verify whether it is active. To validate whether License Service is deployed and running on the cluster, you can, for example, log into the Red Hat OpenShift Container Platform cluster and run the following command: $ oc get pods --all-namespaces | grep ibm-licensing | grep -v operatorThe following response is a confirmation of successful deployment: 1/1     RunningArchiving license usage data Remember to archive the license usage evidence before you decommission the cluster where IBM FHIR Server was deployed. Retrieve the audit snapshot for the period when IBM FHIR Server was on the cluster and store it in case of audit. For more information about the licensing solution, see License Service documentation. ","categories": ["installing"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/installing/tracking-license/",
        "teaser":null},{
        "title": "Security",
        "collection": "1.0",
        "excerpt":"Security   The IBM FHIR Server is a stateless offering. It is the responsibility of the user to ensure that the proper security measures are established when using the server.Data in motion   All transports used to interact with IBM FHIR Server must be encrypted. TLS 1.2 is recommended.  Users are expected to use TLS when configuring their IBM FHIR Server to connect with their database instance.Data at rest   The prerequisite database must have data encryption enabled.  Each instance is responsible for Backup and Recovery of the Database and must backup solution specific configurations.","categories": ["security"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/security/security/",
        "teaser":null},{
        "title": "SecurityContextConstraints Requirements",
        "collection": "1.0",
        "excerpt":"SecurityContextConstraints Requirements By default, the IBM FHIR Server Operator uses the restricted SecurityContextConstraints resource. If desired, the following custom SecurityContextConstraints resource can be applied and used instead. apiVersion: security.openshift.io/v1kind: SecurityContextConstraintsmetadata:  name: ibm-fhir-server-operator-scc  annotations:    kubernetes.io/description: ibm-fhir-server-operator-scc denies access to all      host features and requires pods to be run with a UID, and SELinux context      that are allocated to the namespace, enforces readOnlyRootFilesystem, and      drops all capabilities.allowHostDirVolumePlugin: falseallowHostIPC: falseallowHostNetwork: falseallowHostPID: falseallowHostPorts: falseallowPrivilegeEscalation: falseallowPrivilegedContainer: falseallowedCapabilities: []defaultAddCapabilities: []groups: []fsGroup:  type: MustRunAspriority: nullreadOnlyRootFilesystem: truerequiredDropCapabilities:  - ALLrunAsUser:  type: MustRunAsRangeseLinuxContext:  type: MustRunAssupplementalGroups:  type: RunAsAnyusers: []volumes:  - configMap  - downwardAPI  - emptyDir  - persistentVolumeClaim  - projected  - secretTo cause the IBM FHIR Server Operator to use the custom SecurityContextConstraints resource.       Find the ibm-fhir-server-operator-sa ServiceAccount resource in the same namespace as the Operator.         Add the following to the rules in the ClusterRole resource that the ServiceAccount resource is bound to, and apply.   - apiGroups:    - security.openshift.io  resourceNames:    - ibm-fhir-server-operator-scc  resources:    - securitycontextconstraints  verbs:    - use  The IBM FHIR Server Operator also creates custom ClusterRole, ClusterRoleBinding, Role, RoleBinding, SecurityContextConstraints, and ServiceAccount resources to ensure separation of duties.","categories": ["security"],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/security/security-context-constraints/",
        "teaser":null},{
        "title": "Schema registry",
        "collection": "keyFeatures",
        "excerpt":"  ","categories": [],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/feature/schemaRegistry",
        "teaser":null},{
        "title": "Multizone support",
        "collection": "keyFeatures",
        "excerpt":"  ","categories": [],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/feature/multizone",
        "teaser":null},{
        "title": "Open the Connector catalog",
        "collection": "keyFeatures",
        "excerpt":"No content ","categories": [],
        "tags": [],
        "url": "https://prb112.github.io/prb112/FHIR/cloudpak/1.0.1/3.connectorsCatalog",
        "teaser":null},]
