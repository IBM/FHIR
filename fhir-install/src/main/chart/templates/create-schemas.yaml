{{- if .Values.schemaMigration.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-create-schemas"
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    # Hook weights can be positive or negative numbers but must be represented as strings.
    # When Helm starts the execution cycle of hooks of a particular Kind it will sort those hooks in ascending order.
    # So make sure this number is lower than the update-schemas weight.
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-schematool"
    spec:
      restartPolicy: Never
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      containers:
      - name: fhir-schematool
        image: {{ .Values.schemaMigration.image.repository }}:{{ .Values.schemaMigration.image.tag }}
        args: [
          "--schema-name", "{{ .Values.db.schema }}",
          "--create-schemas",
        ]
        volumeMounts:
        - name: binding
          mountPath: "/iks"
          readOnly: true
      volumes:
      - name: binding
        secret:
          secretName: binding-postgres-fhir
          items:
          - key: binding
            path: postgres-binding.json
  backoffLimit: 4
{{- end }}
