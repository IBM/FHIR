-------------------------------------------------------------------------------
-- (C) Copyright IBM Corp. 2020
--
-- SPDX-License-Identifier: Apache-2.0
-------------------------------------------------------------------------------

-- ----------------------------------------------------------------------------
-- Sample DDL for generating javabatch job tables for postgresql, please refer
-- to 4.10.1 of IBM FHIR Server User's Guide about how this DDL is used.
-- 
-- This DDL is modified with a larger JOB_PARAMETER.VALUE VARCHAR size of 4096.
-- ----------------------------------------------------------------------------

CREATE TABLE JBATCH.JOBINSTANCE (JOBINSTANCEID BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL, AMCNAME VARCHAR(512), BATCHSTATUS INTEGER NOT NULL, CREATETIME TIMESTAMP NOT NULL, EXITSTATUS VARCHAR(512) , INSTANCESTATE INTEGER NOT NULL, JOBNAME VARCHAR(256) , JOBXMLNAME VARCHAR(128) , JOBXML BYTEA, NUMEXECS INTEGER NOT NULL, RESTARTON VARCHAR(128) , SUBMITTER VARCHAR(256) , UPDATETIME TIMESTAMP, PRIMARY KEY (JOBINSTANCEID));
CREATE TABLE JBATCH.STEPTHREADINSTANCE (PARTNUM INTEGER NOT NULL, STEPNAME VARCHAR(128)  NOT NULL, THREADTYPE VARCHAR(31) , CHECKPOINTDATA BYTEA, FK_JOBINSTANCEID BIGINT NOT NULL, FK_LATEST_STEPEXECID BIGINT NOT NULL, PARTITIONED BOOLEAN DEFAULT FALSE NOT NULL, PARTITIONPLANSIZE INTEGER, STARTCOUNT INTEGER, PRIMARY KEY (PARTNUM, STEPNAME, FK_JOBINSTANCEID));
CREATE INDEX STI_FKINSTANCEID_IX ON JBATCH.STEPTHREADINSTANCE (FK_JOBINSTANCEID);
CREATE INDEX STI_FKLATEST_SEI_IX ON JBATCH.STEPTHREADINSTANCE (FK_LATEST_STEPEXECID);
CREATE TABLE JBATCH.STEPTHREADEXECUTION (STEPEXECID BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL, THREADTYPE VARCHAR(31) , BATCHSTATUS INTEGER NOT NULL, M_COMMIT BIGINT NOT NULL, ENDTIME TIMESTAMP, EXITSTATUS VARCHAR(512) , M_FILTER BIGINT NOT NULL, INTERNALSTATUS INTEGER NOT NULL, PARTNUM INTEGER NOT NULL, USERDATA BYTEA, M_PROCESSSKIP BIGINT NOT NULL, M_READ BIGINT NOT NULL, M_READSKIP BIGINT NOT NULL, M_ROLLBACK BIGINT NOT NULL, STARTTIME TIMESTAMP, STEPNAME VARCHAR(128)  NOT NULL, M_WRITE BIGINT NOT NULL, M_WRITESKIP BIGINT NOT NULL, FK_JOBEXECID BIGINT NOT NULL, FK_TOPLVL_STEPEXECID BIGINT, ISPARTITIONEDSTEP BOOLEAN, PRIMARY KEY (STEPEXECID));
CREATE INDEX STE_FKJOBEXECID_IX ON JBATCH.STEPTHREADEXECUTION (FK_JOBEXECID);
CREATE INDEX STE_FKTLSTEPEID_IX ON JBATCH.STEPTHREADEXECUTION (FK_TOPLVL_STEPEXECID);
CREATE TABLE JBATCH.JOBEXECUTION (JOBEXECID BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL, BATCHSTATUS INTEGER NOT NULL, CREATETIME TIMESTAMP NOT NULL, ENDTIME TIMESTAMP, EXECNUM INTEGER NOT NULL, EXITSTATUS VARCHAR(512) , JOBPARAMETERS BYTEA, UPDATETIME TIMESTAMP, LOGPATH VARCHAR(512) , RESTURL VARCHAR(512) , SERVERID VARCHAR(256) , STARTTIME TIMESTAMP, FK_JOBINSTANCEID BIGINT NOT NULL, PRIMARY KEY (JOBEXECID));
CREATE INDEX JE_FKINSTANCEID_IX ON JBATCH.JOBEXECUTION (FK_JOBINSTANCEID);
CREATE TABLE JBATCH.REMOTABLEPARTITION (PARTNUM INTEGER NOT NULL, STEPNAME VARCHAR(255)  NOT NULL, INTERNALSTATE INTEGER, LASTUPDATED TIMESTAMP, LOGPATH VARCHAR(512) , RESTURL VARCHAR(512) , SERVERID VARCHAR(256) , FK_JOBEXECUTIONID BIGINT NOT NULL, FK_STEPEXECUTIONID BIGINT, PRIMARY KEY (PARTNUM, STEPNAME, FK_JOBEXECUTIONID));
CREATE TABLE JBATCH.GROUPASSOCIATION (FK_JOBINSTANCEID BIGINT, GROUPNAMES VARCHAR(255) );
CREATE INDEX GA_FKINSTANCEID_IX ON JBATCH.GROUPASSOCIATION (FK_JOBINSTANCEID);
CREATE TABLE JBATCH.JOBPARAMETER (NAME VARCHAR(255) , VALUE VARCHAR(4096) , FK_JOBEXECID BIGINT);
CREATE INDEX JP_FKJOBEXECID_IX ON JBATCH.JOBPARAMETER (FK_JOBEXECID);
ALTER TABLE JBATCH.STEPTHREADEXECUTION ADD CONSTRAINT STPTHRADEXECUTION0 UNIQUE (FK_JOBEXECID, STEPNAME, PARTNUM);
ALTER TABLE JBATCH.STEPTHREADINSTANCE ADD CONSTRAINT STPTHRFKLTSTSTPXCD FOREIGN KEY (FK_LATEST_STEPEXECID) REFERENCES JBATCH.STEPTHREADEXECUTION (STEPEXECID);
ALTER TABLE JBATCH.STEPTHREADINSTANCE ADD CONSTRAINT STPTHRDNFKJBNSTNCD FOREIGN KEY (FK_JOBINSTANCEID) REFERENCES JBATCH.JOBINSTANCE (JOBINSTANCEID);
ALTER TABLE JBATCH.STEPTHREADEXECUTION ADD CONSTRAINT STPTHFKTPLVLSTPXCD FOREIGN KEY (FK_TOPLVL_STEPEXECID) REFERENCES JBATCH.STEPTHREADEXECUTION (STEPEXECID);
ALTER TABLE JBATCH.STEPTHREADEXECUTION ADD CONSTRAINT STPTHRDXCTNFKJBXCD FOREIGN KEY (FK_JOBEXECID) REFERENCES JBATCH.JOBEXECUTION (JOBEXECID);
ALTER TABLE JBATCH.JOBEXECUTION ADD CONSTRAINT JBXCTNFKJBNSTNCEID FOREIGN KEY (FK_JOBINSTANCEID) REFERENCES JBATCH.JOBINSTANCE (JOBINSTANCEID);
ALTER TABLE JBATCH.REMOTABLEPARTITION ADD CONSTRAINT RMTBLPRTFKSTPXCTND FOREIGN KEY (FK_STEPEXECUTIONID) REFERENCES JBATCH.STEPTHREADEXECUTION (STEPEXECID);
ALTER TABLE JBATCH.REMOTABLEPARTITION ADD CONSTRAINT RMTBLPRTTFKJBXCTND FOREIGN KEY (FK_JOBEXECUTIONID) REFERENCES JBATCH.JOBEXECUTION (JOBEXECID);
ALTER TABLE JBATCH.GROUPASSOCIATION ADD CONSTRAINT GRPSSCTNFKJBNSTNCD FOREIGN KEY (FK_JOBINSTANCEID) REFERENCES JBATCH.JOBINSTANCE (JOBINSTANCEID);
ALTER TABLE JBATCH.JOBPARAMETER ADD CONSTRAINT JBPRMETERFKJBXECID FOREIGN KEY (FK_JOBEXECID) REFERENCES JBATCH.JOBEXECUTION (JOBEXECID);
